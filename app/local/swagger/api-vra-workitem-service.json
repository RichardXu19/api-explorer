{
    "info": {
        "version": "7.3.0-SNAPSHOT", 
        "description": "# Work Item Service API Specification", 
        "title": "Work-item Service API"
    }, 
    "paths": {
        "/api/assignees/{principalId}/delegates/reset": {
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "summary": "Remove the given principalId from the set of valid assignees for a workitem.", 
                "description": "Remove the given principalId from the set of valid assignees for a workitem.", 
                "parameters": [
                    {
                        "description": "The principal identifier for the user or group.", 
                        "required": true, 
                        "type": "string", 
                        "name": "principalId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "work-item-assignee"
                ]
            }
        }, 
        "/api/workitems/types/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }, 
                    "204": {
                        "description": ""
                    }
                }, 
                "summary": "Updates an existing WorkItemType by id.", 
                "description": "Updates an existing WorkItemType by id.", 
                "parameters": [
                    {
                        "description": "The workitem type id.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemType"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item-type"
                ]
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "summary": "Deletes an existing WorkItemType by id.", 
                "description": "Deletes an existing WorkItemType by id.", 
                "parameters": [
                    {
                        "description": "The workitem type id.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "work-item-type"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/WorkItemType"
                        }
                    }
                }, 
                "summary": "Retrieve the details of an existing WorkItemType by id.", 
                "description": "Retrieve the details of an existing WorkItemType by id.", 
                "parameters": [
                    {
                        "description": "The workitem type id.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "work-item-type"
                ]
            }
        }, 
        "/api/assignees/user/delegates/reset": {
            "post": {
                "deprecated": true, 
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "summary": "Delete the current WorkItemAssignee.", 
                "description": "Delete the current WorkItemAssignee.", 
                "tags": [
                    "work-item-assignee"
                ]
            }
        }, 
        "/api/workitems/{id}/form/{elementId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Retrieve a set of form data for the specified workItem and formElement. ", 
                "description": "Retrieve a set of form data for the specified workItem and formElement.", 
                "parameters": [
                    {
                        "format": "uuid", 
                        "required": true, 
                        "type": "string", 
                        "name": "", 
                        "in": "path"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/workitems/types": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/WorkItemType"
                        }
                    }
                }, 
                "summary": "Create a new WorkItemType for a given service provider.", 
                "description": "Create a new WorkItemType for a given service provider.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemType"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item-type"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "summary": "Returns a page of the resources"
            }
        }, 
        "/api/workitems/notifications": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "summary": "Completes the WorkItem if it is still active.", 
                "description": "Completes the WorkItem if it is still active.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/notificationStatus"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/workitems/{id}/form/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "summary": "Retrieves the metadata of multiple dynamic elements in single call. It combines the retrieval of element's ElementState and the list of permissible values for each element.", 
                "description": "Retrieves the metadata of multiple dynamic elements in single call. It combines the retrieval of element's ElementState and the list of permissible values for each element.", 
                "parameters": [
                    {
                        "format": "uuid", 
                        "required": true, 
                        "type": "string", 
                        "name": "", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/workitems/{id}/form": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/form"
                        }
                    }
                }, 
                "summary": "Retrieve the WorkItem Form from for the selected WorkItem from the corresponding Service Provider. ", 
                "description": "Retrieve the WorkItem Form from for the selected WorkItem from the corresponding Service Provider. If the current user has WRITE access to this form, The submission form is returned, otherwise the details form is returned.", 
                "parameters": [
                    {
                        "format": "uuid", 
                        "required": true, 
                        "type": "string", 
                        "name": "", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/workitems/{id}/children": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageWorkItem"
                        }
                    }
                }, 
                "summary": "Retrieve a list of WorkItem.", 
                "description": "Retrieve a list of WorkItem.", 
                "parameters": [
                    {
                        "description": "The workitem id.", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/workitems/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "summary": "Update the WorkItem which corresponds to the given Id.", 
                "description": "Update the WorkItem which corresponds to the given Id. <ul> <li>A work item may be updated by:</li> <ul> <li>One of its assignees</li> <li>A delegate of one of its assignees</li> </ul> <li>The application that created the work item is notified of all updates.</li> <li>Client applications must provide a REST service to receive these updates. This service will be passed:</li> <ul> <li>The updated form data for the work item as a property map</li> <li>Useful metadata (e.g. who updated the work item and when) in a fixed schema</li> </ul> </ul>   <h3>Sequence Diagram</h3> <img src='../../workitem-service/api/docs/update-workitem.png'\\>", 
                "parameters": [
                    {
                        "description": "The workitem id.", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItem"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "summary": "Delete the WorkItem corresponding to the given id.", 
                "description": "Delete the WorkItem corresponding to the given id.", 
                "parameters": [
                    {
                        "description": "The workitem id.", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/WorkItem"
                        }
                    }
                }, 
                "summary": "Retrieve the details of the given WorkItem.", 
                "description": "Retrieve the details of the given WorkItem.", 
                "parameters": [
                    {
                        "description": "The workitem id.", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/workitems": {
            "put": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "summary": "Create a set of WorkItems", 
                "description": "Create a set of WorkItems", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/entities"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }, 
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/WorkItem"
                        }
                    }
                }, 
                "summary": "Create a new WorkItem for the given service.", 
                "description": "Create a new WorkItem for the given service.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItem"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageWorkItem"
                        }
                    }
                }, 
                "summary": "Retrieve a list of WorkItem.", 
                "description": "Retrieve a list of WorkItem.", 
                "parameters": [
                    {
                        "description": "if true, limits the results to those items which are visible to the logged in user.", 
                        "required": false, 
                        "type": "boolean", 
                        "name": "userItemsOnly", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/workitems/{workItemId}/actions/cancel": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "summary": "Cancel the specified WorkItem.", 
                "description": "Cancel the specified WorkItem. <ul> <li>Prevents a work item from being updated or completed The work item enters the 'ancelled'' state</li> <li>A work item may only be cancelled by a solution user. I.e. the application that created the work item.</li> <li>A work item would be cancelled when it is no longer required</li> <ul> <li>This would be determined by the client application based on its rules</li> <li>For example: the approval service may cancel any outstanding 'Approval' work items once one of the approvers has rejected the approval.</li> </ul> <li>Work items may not be cancelled by non-solution users.</li> <li>Once aborted a work item may not be:</li> <ul> <li>Reactivated</li> <li>Updated</li> </ul> <li>A cancelled work item is not deleted</li> <li>A work item's data may not be updated when aborting a work item</li> <li>The client application will not be notified when a work item is cancelled.</li> <li>An audit trail message is written when a work item is cancelled. The cancellation API should support passing a reason why a work item has been cancelled which is also part of the audit trail.</li> </ul>  If an application wished to offer a 'Cancel' action for a work item, it would need to: <ul> <li>Define such an action on the work item type</li> <li>Respond to this action when the item is completed</li> </ul>", 
                "parameters": [
                    {
                        "description": "The workitem id.", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "workItemId"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemActionComplete"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/workitems/{workItemId}/actions/{actionId}": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "summary": "Complete a WorkItem.", 
                "description": "Complete a WorkItem. <ul>  <li>A work item may only be completed by:</li>  <ul>  <li>One of its assignees</li>  <li>A delegate of one of its assignees</li>  <li>A privileged, administrator user</li>  </ul>  <li>A work item may be completed by any of the actions associated with its work item type</li>  <li>Work items may be completed via an incoming notification (e.g. email) This may be done by  replying to an email sent by the work item queue.</li> <li>The client application will be  notified when a work item is completed.</li> <li>The client application must provide a REST  service to be notified of completion. The service will be passed:</li>  <ul>  <li>The form data of the work item that has been completed</li>  <li>The action that completed the work item</li>  <li>Useful work item metadata</li>  </ul>  </ul>   <h3>Sequence Diagram</h3> <img src='../../workitem-service/api/docs/complete-workitem.png'\\>", 
                "parameters": [
                    {
                        "description": "The workitem id.", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "workItemId"
                    }, 
                    {
                        "description": "The action id.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "actionId"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemActionComplete"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item"
                ]
            }
        }, 
        "/api/icons": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/WorkItemActionIcon"
                        }
                    }
                }, 
                "summary": "Creates a WorkItemActionIcon.", 
                "description": "Creates a WorkItemActionIcon.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemActionIcon"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item-action-icon"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "summary": "Returns a page of the resources"
            }
        }, 
        "/api/assignees/{principalId}/delegates": {
            "put": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "summary": "Update the WorkItemAssignee for the given principal", 
                "description": "Update the WorkItemAssignee for the given principal", 
                "parameters": [
                    {
                        "description": "The principal identifier for the user or group to be updated.", 
                        "required": true, 
                        "type": "string", 
                        "name": "principalId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemAssignee"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item-assignee"
                ]
            }, 
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "summary": "Update the WorkItemAssignee for the given principal", 
                "description": "Update the WorkItemAssignee for the given principal", 
                "parameters": [
                    {
                        "description": "The principal identifier for the user or group to be updated.", 
                        "required": true, 
                        "type": "string", 
                        "name": "principalId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemAssignee"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item-assignee"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/WorkItemAssignee"
                        }
                    }
                }, 
                "summary": "Retrieve the list of delegates for the given principal/user/group.", 
                "description": "Retrieve the list of delegates for the given principal/user/group.", 
                "parameters": [
                    {
                        "description": "The principal identifier for the user or group.", 
                        "required": true, 
                        "type": "string", 
                        "name": "principalId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "work-item-assignee"
                ]
            }
        }, 
        "/api/icons/images/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Get the image content of the specified WorkItemActionIcon.", 
                        "schema": {
                            "$ref": "#/definitions/WorkItemActionIcon"
                        }
                    }
                }, 
                "summary": "Get the image content of the specified WorkItemActionIcon.", 
                "description": "Get the image content of the specified WorkItemActionIcon.", 
                "parameters": [
                    {
                        "description": "The work item action icon id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "work-item-action-icon"
                ]
            }
        }, 
        "/api/assignees/user/delegates": {
            "put": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemAssignee"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item-assignee"
                ], 
                "deprecated": true, 
                "summary": "Creates or updates the specified WorkItemAssignee.", 
                "description": "Creates or updates the specified WorkItemAssignee."
            }, 
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemAssignee"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item-assignee"
                ], 
                "deprecated": true, 
                "summary": "Creates or updates the specified WorkItemAssignee.", 
                "description": "Creates or updates the specified WorkItemAssignee."
            }, 
            "get": {
                "deprecated": true, 
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/WorkItemAssignee"
                        }
                    }
                }, 
                "summary": "Retrieve the WorkItemAssignee, including delegates, for the 'current' user.", 
                "description": "Retrieve the WorkItemAssignee, including delegates, for the 'current' user.", 
                "tags": [
                    "work-item-assignee"
                ]
            }
        }, 
        "/api/icons/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }, 
                    "204": {
                        "description": "Updated the WorkItemActionIcon successful", 
                        "schema": {
                            "$ref": "#/definitions/WorkItemActionIcon"
                        }
                    }
                }, 
                "summary": "Updates the WorkItemActionIcon.", 
                "description": "Update the WorkItemActionIcon which corresponds to the given id.", 
                "parameters": [
                    {
                        "description": "The work item action icon id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/WorkItemActionIcon"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "work-item-action-icon"
                ]
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "summary": "Deletes the WorkItemActionIcon.", 
                "description": "Deletes the WorkItemActionIcon.", 
                "parameters": [
                    {
                        "description": "The work item action icon id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "work-item-action-icon"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "description": "The id of the resource", 
                        "required": true, 
                        "type": "object", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "summary": "Returns the resource associated with the given id"
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "tags": [
        {
            "name": "work-item"
        }, 
        {
            "name": "work-item-action-icon"
        }, 
        {
            "name": "work-item-assignee"
        }, 
        {
            "name": "work-item-type"
        }
    ], 
    "basePath": "/work-item-service", 
    "definitions": {
        "ConstantValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/literal"
                        }
                    }
                }
            ]
        }, 
        "GreaterThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "WorkItemActionIcon": {
            "required": [
                "image"
            ], 
            "type": "object", 
            "properties": {
                "image": {
                    "items": {
                        "type": "string", 
                        "format": "byte"
                    }, 
                    "type": "array"
                }, 
                "contentType": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "LayoutRow": {
            "type": "object", 
            "properties": {
                "items": {
                    "xml": {
                        "wrapped": true, 
                        "name": "item"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutCell"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "NotEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "complexLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "complexLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's class."
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component type."
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The type filter for this literal."
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component."
                        }, 
                        "values": {
                            "description": "Map of values, keyed by the field ids of some complex type.", 
                            "$ref": "#/definitions/literalMap"
                        }
                    }, 
                    "description": "A complex value composed of multiple values keyed by the field ids of some complex type."
                }
            ]
        }, 
        "ParameterMapping": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "SubsetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "moneyRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRange"
                    }, 
                    "type": "object", 
                    "properties": {
                        "maxValue": {
                            "type": "number", 
                            "description": "The upper limit of the range.", 
                            "format": "double"
                        }, 
                        "minValue": {
                            "type": "number", 
                            "description": "The lower limit of the range.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a range of money values, between some defined minimums and maximums."
                }
            ]
        }, 
        "EndsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "VisibilityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ParameterMappingCollection": {
            "type": "object", 
            "properties": {
                "params": {
                    "xml": {
                        "wrapped": true, 
                        "name": "param"
                    }, 
                    "items": {
                        "$ref": "#/definitions/ParameterMapping"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "layout": {
            "xml": {
                "name": "layout"
            }, 
            "type": "object", 
            "properties": {
                "pages": {
                    "xml": {
                        "wrapped": true, 
                        "name": "page"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutPage"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "DisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "booleanLiteral": {
            "xml": {
                "name": "booleanLiteral"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "value": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "The boolean value."
                }
            }, 
            "description": "Wraps a boolean value."
        }, 
        "entities": {
            "xml": {
                "name": "entities"
            }, 
            "type": "object", 
            "properties": {
                "content": {
                    "xml": {
                        "wrapped": true
                    }, 
                    "items": {
                        "$ref": "#/definitions/WorkItem"
                    }, 
                    "type": "array"
                }, 
                "links": {
                    "xml": {
                        "wrapped": true, 
                        "name": "links"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Link"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "WorkItemAction": {
            "required": [
                "id"
            ], 
            "type": "object", 
            "properties": {
                "stateNameId": {
                    "type": "string"
                }, 
                "stateName": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "icon": {
                    "$ref": "#/definitions/WorkItemActionIcon"
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "money": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "money"
                    }, 
                    "type": "object", 
                    "properties": {
                        "amount": {
                            "type": "number", 
                            "description": "The amount associated with this value (with no specific currency).", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a single, precise monetary value."
                }
            ]
        }, 
        "OrClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "moneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "basis": {
                            "description": "The span of time to calculate the rate of money for.", 
                            "$ref": "#/definitions/timeSpan"
                        }
                    }, 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "UniqueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ExtensionForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "extensionId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "extensionPointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "stringLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "stringLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a String value."
                }
            ]
        }, 
        "LayoutField": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutFlowElement"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "extensionRendererContext": {
                            "$ref": "#/definitions/ExtensionRendererContext"
                        }, 
                        "description": {
                            "type": "string"
                        }, 
                        "dataType": {
                            "$ref": "#/definitions/DataType"
                        }, 
                        "permissibleValues": {
                            "$ref": "#/definitions/PermissibleValueList"
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "displayAdvice": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "TEXTBOX", 
                                "HYPERLINK", 
                                "EMAIL", 
                                "TEXTAREA", 
                                "DATE_TIME_PICKER", 
                                "CHECKBOX", 
                                "YES_NO", 
                                "CHECKBOX_GROUP", 
                                "DUAL_LIST", 
                                "RADIO_GROUP", 
                                "DROPDOWN", 
                                "LIST", 
                                "SEARCHER", 
                                "TREE", 
                                "FORM", 
                                "IMAGE", 
                                "SLIDER", 
                                "DATA_TABLE", 
                                "VALUE_PICKER"
                            ], 
                            "type": "string"
                        }, 
                        "orderIndex": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "isMultiValued": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "labelSize": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "columns": {
                            "xml": {
                                "wrapped": true, 
                                "name": "column"
                            }, 
                            "items": {
                                "$ref": "#/definitions/LayoutField"
                            }, 
                            "type": "array"
                        }, 
                        "detailLayout": {
                            "$ref": "#/definitions/LayoutReference"
                        }
                    }
                }
            ]
        }, 
        "WorkItemAssignee": {
            "required": [
                "delegates"
            ], 
            "type": "object", 
            "properties": {
                "delegates": {
                    "items": {
                        "$ref": "#/definitions/WorkItemPrincipal"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "entityRef": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRef"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier of the type or category to which the referenced entity belongs."
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The unique identifier of the referenced entity, encoded as a string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The durable identifier of a component registered in the suite component registry that owns and manages the referenced entity. This can be omitted if this component can be derived from the context within which this entity reference occurs. It must be specified, if no such context exists or if the component differs from that defined by the context."
                        }
                    }, 
                    "description": "Represents a reference to an entity defined somewhere in the suite."
                }
            ]
        }, 
        "CallbackEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaxCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ElementState": {
            "type": "object", 
            "properties": {
                "facets": {
                    "xml": {
                        "wrapped": true, 
                        "name": "facet"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }, 
                    "type": "array"
                }, 
                "dependencies": {
                    "xml": {
                        "wrapped": true, 
                        "name": "dependency"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "type": "string"
                    }
                }
            }
        }, 
        "Clause": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ComplexEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "values": {
                            "additionalProperties": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "object"
                        }
                    }
                }
            ]
        }, 
        "StartsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LessThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "multipleLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "multipleLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "xml": {
                                "name": "item"
                            }, 
                            "items": {
                                "$ref": "#/definitions/literal"
                            }, 
                            "type": "array", 
                            "description": "The list of specified values. NOTE: All values must be of the same data type."
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string", 
                            "description": "The data type of the items in the list."
                        }
                    }, 
                    "description": "A literal which represents multiple values. All of these component values must be of the same data type."
                }
            ]
        }, 
        "LayoutFlow": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "parts": {
                            "xml": {
                                "wrapped": true, 
                                "name": "part"
                            }, 
                            "items": {
                                "$ref": "#/definitions/LayoutFlowElement"
                            }, 
                            "type": "array"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ContextPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaxLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "RefreshOnChangeBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SkipExportBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutCell": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "size": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "FixedValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "value": {
            "xml": {
                "name": "value"
            }, 
            "type": "object", 
            "properties": {
                "label": {
                    "type": "string"
                }, 
                "underlyingValue": {
                    "$ref": "#/definitions/literal"
                }
            }
        }, 
        "CoalesceEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "moneyRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "cost": {
                            "description": "The cost (including optional currency code).", 
                            "$ref": "#/definitions/literal"
                        }
                    }, 
                    "description": "A base type for literals representing a rate of some monetary value over a specified basis. E.g. $5 / hour; $1-2 / GB."
                }
            ]
        }, 
        "secureString": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "secureString"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a secured string value, such as a password."
                }
            ]
        }, 
        "StaticForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "required": [
                        "layout"
                    ], 
                    "type": "object", 
                    "properties": {
                        "layout": {
                            "$ref": "#/definitions/layout"
                        }
                    }
                }
            ]
        }, 
        "ComplexDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }
            ]
        }, 
        "ExternalFormReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "formId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "Link": {
            "type": "object", 
            "properties": {
                "href": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "rel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "PermissibleValueList": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "customAllowed": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "Evaluator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ConstantClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/booleanLiteral"
                        }
                    }
                }
            ]
        }, 
        "literalMap": {
            "xml": {
                "name": "literalMap"
            }, 
            "type": "object", 
            "properties": {
                "entries": {
                    "xml": {
                        "name": "entry"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LiteralMapEntry"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Equivalent of java.util.Map"
        }, 
        "ExtensionRendererContext": {
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "extensionId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "elementValuesRequest": {
            "xml": {
                "name": "elementValuesRequest"
            }, 
            "type": "object", 
            "properties": {
                "text": {
                    "type": "string"
                }, 
                "userId": {
                    "type": "string"
                }, 
                "associateValue": {
                    "$ref": "#/definitions/literal"
                }, 
                "headers": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "pagingInfo": {
                    "$ref": "#/definitions/ElementValuesPagingInfo"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "dependencyValues": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "MinimumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "WorkItemActionComplete": {
            "type": "object", 
            "properties": {
                "workItemActionId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "formData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "workItemId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "uuid"
                }
            }
        }, 
        "StaticPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "values": {
                            "xml": {
                                "name": "value"
                            }, 
                            "items": {
                                "$ref": "#/definitions/value"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "MandatoryConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaximumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "RegexpConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "errorMessage": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "TableView": {
            "type": "object", 
            "properties": {
                "columns": {
                    "xml": {
                        "wrapped": true, 
                        "name": "column"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Column"
                    }
                }, 
                "defaultSequence": {
                    "xml": {
                        "wrapped": true, 
                        "name": "column"
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "WrapperClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "WorkItemPrincipal": {
            "required": [
                "principalId", 
                "principalType"
            ], 
            "type": "object", 
            "properties": {
                "principalType": {
                    "enum": [
                        "USER", 
                        "GROUP"
                    ], 
                    "type": "string"
                }, 
                "displayName": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "principalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "GreaterThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LiteralMapEntry": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/literal"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "LayoutFlowElement": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ResetValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "dateTimeLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "dateTimeLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The date.", 
                            "format": "date-time"
                        }
                    }, 
                    "description": "Wraps a Date & Time value. This is a wrapper for the Java {@link Date} class."
                }
            ]
        }, 
        "IncrementBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "AndClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "WorkItemType": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "listView": {
                    "$ref": "#/definitions/TableView"
                }, 
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "pluralizedName": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "actions": {
                    "minItems": 0, 
                    "items": {
                        "$ref": "#/definitions/WorkItemAction"
                    }, 
                    "type": "array", 
                    "maxItems": 5
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "forms": {
                    "$ref": "#/definitions/WorkItemForms"
                }, 
                "version": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "completeByEmail": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "commentsField": {
                    "type": "string"
                }, 
                "id": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "serviceTypeId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "CustomPropertyDefinitionMetadata": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "required": [
                        "field"
                    ], 
                    "type": "object", 
                    "properties": {
                        "field": {
                            "$ref": "#/definitions/Field"
                        }
                    }
                }
            ]
        }, 
        "batchElementUpdateRequest": {
            "xml": {
                "name": "batchElementUpdateRequest"
            }, 
            "required": [
                "formValues"
            ], 
            "type": "object", 
            "properties": {
                "trigger": {
                    "type": "string"
                }, 
                "affectedElements": {
                    "xml": {
                        "wrapped": true
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "formValues": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "triggeredDetailsLayout": {
                    "$ref": "#/definitions/layout"
                }
            }
        }, 
        "EqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NullDisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SupersetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NotClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClause": {
                            "$ref": "#/definitions/Clause"
                        }
                    }
                }
            ]
        }, 
        "LayoutSection": {
            "type": "object", 
            "properties": {
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "rows": {
                    "xml": {
                        "wrapped": true, 
                        "name": "row"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutRow"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "ConditionalEvaluatorCase": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "condition": {
                    "$ref": "#/definitions/Clause"
                }
            }
        }, 
        "FormReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "notificationStatus": {
            "xml": {
                "name": "notificationStatus"
            }, 
            "type": "object", 
            "properties": {
                "action": {
                    "type": "string"
                }, 
                "comment": {
                    "type": "string"
                }, 
                "entityId": {
                    "type": "string"
                }, 
                "notificationId": {
                    "type": "string"
                }, 
                "userId": {
                    "type": "string"
                }
            }
        }, 
        "literal": {
            "xml": {
                "name": "literal"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "description": "Wraps a value such that values of different types can be treated generically."
        }, 
        "DynamicLayoutReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        }, 
        "StaticLayout": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutReference"
                }, 
                {
                    "required": [
                        "layout"
                    ], 
                    "type": "object", 
                    "properties": {
                        "layout": {
                            "$ref": "#/definitions/layout"
                        }
                    }
                }
            ]
        }, 
        "entityRefEx": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRefEx"
                    }, 
                    "type": "object", 
                    "properties": {
                        "href": {
                            "type": "string", 
                            "description": "the Href"
                        }
                    }, 
                    "description": "Represents a reference to an entity by uri"
                }
            ]
        }, 
        "FacetValueMap": {
            "type": "object", 
            "properties": {
                "facets": {
                    "xml": {
                        "wrapped": true, 
                        "name": "facet"
                    }, 
                    "items": {
                        "$ref": "#/definitions/FacetValueMapEntry"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "form": {
            "xml": {
                "name": "form"
            }, 
            "type": "object", 
            "properties": {
                "values": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "layout": {
                    "$ref": "#/definitions/layout"
                }, 
                "fieldPrefixes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "Constraint": {
            "discriminator": "type", 
            "required": [
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }
            }
        }, 
        "Column": {
            "required": [
                "dataType"
            ], 
            "type": "object", 
            "properties": {
                "sortable": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "description": {
                    "type": "string"
                }, 
                "dataType": {
                    "$ref": "#/definitions/DataType"
                }, 
                "permissibleValues": {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                "label": {
                    "type": "string"
                }, 
                "filterable": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "displayAdvice": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "TEXTBOX", 
                        "HYPERLINK", 
                        "EMAIL", 
                        "TEXTAREA", 
                        "DATE_TIME_PICKER", 
                        "CHECKBOX", 
                        "YES_NO", 
                        "CHECKBOX_GROUP", 
                        "DUAL_LIST", 
                        "RADIO_GROUP", 
                        "DROPDOWN", 
                        "LIST", 
                        "SEARCHER", 
                        "TREE", 
                        "FORM", 
                        "IMAGE", 
                        "SLIDER", 
                        "DATA_TABLE", 
                        "VALUE_PICKER"
                    ], 
                    "type": "string"
                }, 
                "orderIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "isMultiValued": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "LayoutReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "BooleanLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "booleanLiteral"
                    }, 
                    "type": "object", 
                    "description": "Wraps a boolean value."
                }
            ]
        }, 
        "IaasPropertyNameBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "CustomValidationConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Expression": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "operator": {
                            "$ref": "#/definitions/CriteriaOperator"
                        }, 
                        "rightOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }, 
                        "leftOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "ElementValuesPagingInfo": {
            "type": "object", 
            "properties": {
                "count": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "offset": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "DynamicValueContext": {
            "required": [
                "parameterMappings"
            ], 
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "providerEntityId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "WithinOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "formUpdateResponse": {
            "xml": {
                "name": "formUpdateResponse"
            }, 
            "type": "object", 
            "properties": {
                "elementUpdates": {
                    "xml": {
                        "wrapped": true, 
                        "name": "elementUpdate"
                    }, 
                    "items": {
                        "$ref": "#/definitions/updateElementEntry"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "DefaultValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "elementValues": {
            "xml": {
                "name": "elementValues"
            }, 
            "type": "object", 
            "properties": {
                "values": {
                    "xml": {
                        "wrapped": true, 
                        "name": "value"
                    }, 
                    "items": {
                        "$ref": "#/definitions/value"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "MaxValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "EntityReferenceDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MonetaryValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "literal"
                    }, 
                    "type": "object", 
                    "properties": {
                        "currencyCode": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The ISO 4217 code used to identify the currency (if any) associated with this value."
                        }
                    }, 
                    "description": "Base type for representing monetary values, encapsulating both some kind of quantity and a currency."
                }
            ]
        }, 
        "PrimitiveDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "typeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "TimeSpan": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "timeSpan"
                    }, 
                    "type": "object", 
                    "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
                }
            ]
        }, 
        "ExternalValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "dynamicValueProviderInfo"
                    ], 
                    "type": "object", 
                    "properties": {
                        "dynamicValueProviderInfo": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "ContainsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Field": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "dataType": {
                    "$ref": "#/definitions/DataType"
                }, 
                "permissibleValues": {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                "label": {
                    "type": "string"
                }, 
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "displayAdvice": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "TEXTBOX", 
                        "HYPERLINK", 
                        "EMAIL", 
                        "TEXTAREA", 
                        "DATE_TIME_PICKER", 
                        "CHECKBOX", 
                        "YES_NO", 
                        "CHECKBOX_GROUP", 
                        "DUAL_LIST", 
                        "RADIO_GROUP", 
                        "DROPDOWN", 
                        "LIST", 
                        "SEARCHER", 
                        "TREE", 
                        "FORM", 
                        "IMAGE", 
                        "SLIDER", 
                        "DATA_TABLE", 
                        "VALUE_PICKER"
                    ], 
                    "type": "string"
                }, 
                "orderIndex": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "isMultiValued": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "columns": {
                    "xml": {
                        "wrapped": true, 
                        "name": "column"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "UnspecifiedEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "integerLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "integerLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "integer", 
                            "description": "The integer value.", 
                            "format": "int64"
                        }
                    }, 
                    "description": "Wraps a signed 64-bit integer value."
                }
            ]
        }, 
        "LessThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "IsDefinedOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Schema": {
            "type": "object", 
            "properties": {
                "fields": {
                    "xml": {
                        "name": "field"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                }
            }
        }, 
        "Sort": {
            "type": "object"
        }, 
        "FieldReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "path": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "LayoutExtension": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "fieldPrefix": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "extensionId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "extensionPointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ConditionalEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "cases": {
                            "xml": {
                                "name": "case"
                            }, 
                            "items": {
                                "$ref": "#/definitions/ConditionalEvaluatorCase"
                            }, 
                            "type": "array"
                        }, 
                        "defaulValue": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "MinValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutPlaceholderCell": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ReadOnlyConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MultipleEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "items"
                    ], 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "MinCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutText": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutFlowElement"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "timeSpan": {
            "xml": {
                "name": "timeSpan"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "amount": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "description": "The amount for the time span.", 
                    "format": "int64"
                }, 
                "unit": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "MILLISECONDS", 
                        "SECONDS", 
                        "MINUTES", 
                        "HOURS", 
                        "DAYS", 
                        "WEEKS", 
                        "MONTHS", 
                        "YEARS"
                    ], 
                    "type": "string", 
                    "description": "The unit of measure for the time span. e.g: days."
                }
            }, 
            "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
        }, 
        "FacetValueMapEntry": {
            "type": "object", 
            "properties": {
                "type": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "value": {
                    "$ref": "#/definitions/literal"
                }
            }
        }, 
        "LayoutPage": {
            "type": "object", 
            "properties": {
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "sections": {
                    "xml": {
                        "wrapped": true, 
                        "name": "section"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutSection"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "PageWorkItem": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/WorkItem"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "decimalLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "decimalLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "number", 
                            "description": "The decimal value.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Wraps a decimal value."
                }
            ]
        }, 
        "CriteriaOperator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "InternalConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "updateElementEntry": {
            "xml": {
                "name": "updateElementEntry"
            }, 
            "type": "object", 
            "properties": {
                "errors": {
                    "xml": {
                        "wrapped": true, 
                        "name": "error"
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "detailLayout": {
                    "$ref": "#/definitions/layout"
                }, 
                "facetValues": {
                    "$ref": "#/definitions/FacetValueMap"
                }, 
                "permissibleValues": {
                    "xml": {
                        "wrapped": true, 
                        "name": "value"
                    }, 
                    "items": {
                        "$ref": "#/definitions/value"
                    }, 
                    "type": "array"
                }, 
                "extensionRendererContext": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "WorkItemRequest": {
            "required": [
                "itemDescription", 
                "itemId", 
                "itemName", 
                "itemRequestor"
            ], 
            "type": "object", 
            "properties": {
                "itemId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "itemRequestor": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "itemData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "itemDescription": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "itemCost": {
                    "type": "number", 
                    "format": "double"
                }, 
                "itemName": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 1023
                }
            }
        }, 
        "WorkItem": {
            "required": [
                "assignees", 
                "callbackEntityId", 
                "serviceId", 
                "tenantId", 
                "workItemRequest", 
                "workItemType"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "completedBy": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "callbackEntityId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "assignedOrCompletedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "workItemType": {
                    "$ref": "#/definitions/WorkItemType"
                }, 
                "workItemNumber": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "formUrl": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2083
                }, 
                "availableActions": {
                    "items": {
                        "$ref": "#/definitions/WorkItemAction"
                    }, 
                    "type": "array"
                }, 
                "tenantId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "assignees": {
                    "items": {
                        "$ref": "#/definitions/WorkItemPrincipal"
                    }, 
                    "type": "array"
                }, 
                "serviceId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "version": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "subTenantId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "assignedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "completedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "workItemRequest": {
                    "$ref": "#/definitions/WorkItemRequest"
                }
            }
        }, 
        "DataType": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "typeId": {
                    "enum": [
                        "STRING", 
                        "INTEGER", 
                        "DECIMAL", 
                        "MONEY", 
                        "MONEY_RANGE", 
                        "MONEY_TIME_RATE", 
                        "BOOLEAN", 
                        "ENTITY_REFERENCE", 
                        "DATE_TIME", 
                        "TIME_SPAN", 
                        "SECURE_STRING", 
                        "COMPLEX"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "EditableBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DynamicPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }, 
                        "context": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "EncryptedBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ObjectDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "label": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "WorkItemForms": {
            "type": "object", 
            "properties": {
                "workItemNotification": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "workItemDetails": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "workItemSubmission": {
                    "$ref": "#/definitions/FormReference"
                }
            }
        }, 
        "MinLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }
    }, 
    "swagger": "2.0"
}