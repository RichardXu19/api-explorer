{
    "info": {
        "version": "7.3.0-SNAPSHOT", 
        "description": "## Overview", 
        "title": "Container Service API"
    }, 
    "paths": {
        "/api/resources/closure-descriptions/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ClosureDescription is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ClosureDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ClosureDescription"
                        }, 
                        "description": "The ClosureContainerDescription to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ClosureDescriptions.", 
                "summary": "Updates a ClosureDescription.", 
                "operationId": "updateClosureDescription"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ClosureDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ClosureDescription"
                        }, 
                        "description": "The patch of the ClosureDescription", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ClosureDescriptions.", 
                "summary": "Patches a ClosureDescription.", 
                "operationId": "patchClosureDescription"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ClosureDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can delete ClosureDescriptions.", 
                "summary": "Deletes a ClosureDescription.", 
                "operationId": "deleteClosureDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ClosureDescription", 
                        "schema": {
                            "$ref": "#/definitions/ClosureDescription"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ClosureDescription with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ClosureDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can retrieve ClosureDescription.", 
                "summary": "Retrieves a ClosureDescription.", 
                "operationId": "getClosureDescription"
            }
        }, 
        "/api/resources/networks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/NetworkState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create NetworkStates.", 
                "summary": "Creates a NetworkState.", 
                "operationId": "createNetworkState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list NetworkStates.", 
                "summary": "Retrieves all NetworkStates.", 
                "operationId": "listNetworkState"
            }
        }, 
        "/api/resources/sub-networks/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the SubnetState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SubnetState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SubnetState"
                        }, 
                        "description": "The SubnetState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update SubnetStates.", 
                "summary": "Updates a SubnetState.", 
                "operationId": "updateSubnetState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SubnetState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SubnetState"
                        }, 
                        "description": "The patch of the SubnetState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch SubnetStates.", 
                "summary": "Patches a SubnetState.", 
                "operationId": "patchSubnetState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a SubnetState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete SubnetStates.", 
                "summary": "Deletes a SubnetState.", 
                "operationId": "deleteSubnetState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the SubnetState", 
                        "schema": {
                            "$ref": "#/definitions/SubnetState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no SubnetState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SubnetState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve SubnetStates.", 
                "summary": "Retrieves a SubnetState.", 
                "operationId": "getSubnetState"
            }
        }, 
        "/api/resources/container-descriptions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ContainerDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ContainerDescriptions.", 
                "summary": "Creates a ContainerDescription.", 
                "operationId": "createContainerDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ContainerDescriptions.", 
                "summary": "Retrieves all ContainerDescriptions.", 
                "operationId": "listContainerDescription"
            }
        }, 
        "/api/config/event-topic": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only System admins can list EventTopicStates.", 
                "summary": "Retrieves all EventTopicStates.", 
                "operationId": "listEventTopicState"
            }
        }, 
        "/api/config/network-profiles": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/deploymentNetworkProfile"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/deploymentNetworkProfile"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create NetworkProfiles.", 
                "summary": "Creates a NetworkProfile.", 
                "operationId": "createNetworkProfile"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list NetworkProfiles.", 
                "summary": "Retrieves all NetworkProfiles.", 
                "operationId": "listNetworkProfile"
            }
        }, 
        "/api/resources/deployment-policies": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/DeploymentPolicy"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create DeploymentPolicies.", 
                "summary": "Creates a DeploymentPolicy.", 
                "operationId": "createDeploymentPolicy"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list DeploymentPolicies.", 
                "summary": "Retrieves all DeploymentPolicies.", 
                "operationId": "listDeploymentPolicies"
            }
        }, 
        "/api/resources/network-interfaces-descriptions/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the NetworkInterfaceDescription is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkInterfaceDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceDescription"
                        }, 
                        "description": "The NetworkInterfaceDescription to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can update NetworkInterfaceDescriptions.", 
                "summary": "Updates a ComputeNetworkDescription.", 
                "operationId": "updateNetworkInterfaceDescription"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkInterfaceDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceDescription"
                        }, 
                        "description": "The patch of the NetworkInterfaceDescription", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can patch NetworkInterfaceDescriptions.", 
                "summary": "Patches a NetworkInterfaceDescription.", 
                "operationId": "patchNetworkInterfaceDescription"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a NetworkInterfaceDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can delete NetworkInterfaceDescriptions.", 
                "summary": "Deletes a NetworkInterfaceDescription.", 
                "operationId": "deleteNetworkInterfaceDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the NetworkInterfaceDescription", 
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceDescription"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no NetworkInterfaceDescription with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkInterfaceDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can retrieve NetworkInterfaceDescriptions.", 
                "summary": "Retrieves a NetworkInterfaceDescription.", 
                "operationId": "getNetworkInterfaceDescription"
            }
        }, 
        "/api/resources/composite-components": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/CompositeComponent"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CompositeComponent"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create CompositeComponents.", 
                "summary": "Creates a CompositeComponent.", 
                "operationId": "createCompositeComponent"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list CompositeComponents.", 
                "summary": "Retrieves all CompositeComponents.", 
                "operationId": "listCompositeComponent"
            }
        }, 
        "/api/config/photon-model-adapters-registry": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, System admins and Consumers can list PhotonModelAdapterConfig.", 
                "summary": "Retrieves all PhotonModelAdapterConfigs.", 
                "operationId": "listPhotonModelAdapterConfigs"
            }
        }, 
        "/api/resources/network-interfaces/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the NetworkInterfaceState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkInterfaceState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceState"
                        }, 
                        "description": "The NetworkInterfaceState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update NetworkInterfaceStates.", 
                "summary": "Updates a NetworkInterfaceState.", 
                "operationId": "updateNetworkInterfaceState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkInterfaceState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceState"
                        }, 
                        "description": "The patch of the NetworkInterfaceState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch NetworkInterfaceStates.", 
                "summary": "Patches a NetworkInterfaceState.", 
                "operationId": "patchNetworkInterfaceState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a NetworkInterfaceState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete NetworkInterfaceStates.", 
                "summary": "Deletes a NetworkInterfaceState.", 
                "operationId": "deleteNetworkInterfaceState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the NetworkInterfaceState", 
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no NetworkInterfaceState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkInterfaceState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve NetworkInterfaceState.", 
                "summary": "Retrieves a NetworkInterfaceState.", 
                "operationId": "getNetworkInterfaceState"
            }
        }, 
        "/api/resources/composite-descriptions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/CompositeDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CompositeDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create CompositeDescriptions.", 
                "summary": "Creates a CompositeDescription.", 
                "operationId": "createCompositeDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list CompositeDescriptions.", 
                "summary": "Retrieves all CompositeDescriptions.", 
                "operationId": "listCompositeDescription"
            }
        }, 
        "/api/config/endpoints": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/EndpointState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "validate"
                ], 
                "description": "Only Solution users, Container admins, and System admins can validate Endpoint certificate.", 
                "summary": "Validates the certificate of an Endpoint.", 
                "operationId": "validateEndpoint"
            }, 
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/EndpointState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/EndpointState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create EndpointStates.", 
                "summary": "Creates a EndpointState.", 
                "operationId": "createEndpointState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list EndpointStates.", 
                "summary": "Retrieves all EndpointStates.", 
                "operationId": "listEndpointState"
            }
        }, 
        "/api/resources/containers/{id}/manage": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the CatalogResource", 
                        "schema": {
                            "$ref": "#/definitions/catalogResource"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no CatalogResourceItem with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "", 
                "summary": "Retrieves a catalog item related to the container item.", 
                "operationId": "getCatalogResourceItem"
            }
        }, 
        "/api/containers/types/{id}": {
            "put": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned if new containerType with the containerType url in the <code>location</code> header of the response"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }, 
                    "204": {
                        "description": "'No Content' is returned when updated."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The UUID of the ContainerType.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }, 
                        "description": "The ContainerType to be updated", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ContainerDescriptions.", 
                "summary": "Creates or updates a ContainerType.", 
                "operationId": "createOrUpdateContainerType"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The UUID of a ContainerType", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ContainerDescriptions.", 
                "summary": "Deletes a ContainerType with the given ID.", 
                "operationId": "deleteContainerType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "'OK' with the @link ContainerType", 
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerType with provided <code>id</code>"
                    }
                }, 
                "operationId": "getContainerType", 
                "description": "Only Solution users, Container admins, and System admins can retrieve ContainerTypes.", 
                "parameters": [
                    {
                        "description": "The id of the ContainerType", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "summary": "Retrieves a ContainerType."
            }
        }, 
        "/api/resources/container-logs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the LogServiceState", 
                        "schema": {
                            "$ref": "#/definitions/LogServiceState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no LogServiceState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the LogServiceState.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Solution users, System admins, Container admins, and Container architects can get LogServiceState.", 
                "summary": "Retrieves a LogServiceState.", 
                "operationId": "getLogServiceState"
            }
        }, 
        "/api/resources/composite-descriptions-clone": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned when cloning of the composite description is successfull"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/CompositeDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CompositeDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "name": "", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "clone"
                ], 
                "description": "Only Solution users, Container admins, and System admins can clone a CompositeDescriptions.", 
                "summary": "Creates a clone of the CompositeDescription.", 
                "operationId": "cloneCompositeDescription"
            }
        }, 
        "/api/config/trust-certs/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the SslTrustCertificateState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SslTrustCertificateState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SslTrustCertificateState"
                        }, 
                        "description": "The SslTrustCertificateState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update SslTrustCertificateStates.", 
                "summary": "Updates a SslTrustCertificateState.", 
                "operationId": "updateSslTrustCertificateState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SslTrustCertificateState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SslTrustCertificateState"
                        }, 
                        "description": "The patch of the SslTrustCertificateState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch SslTrustCertificateStates.", 
                "summary": "Patches a SslTrustCertificateState.", 
                "operationId": "patchSslTrustCertificateState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a SslTrustCertificateState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete SslTrustCertificateStates.", 
                "summary": "Deletes a SslTrustCertificateState.", 
                "operationId": "deleteSslTrustCertificateState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the SslTrustCertificateState", 
                        "schema": {
                            "$ref": "#/definitions/SslTrustCertificateState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no SslTrustCertificateState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SslTrustCertificateState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve SslTrustCertificateStates.", 
                "summary": "Retrieves a SslTrustCertificateState.", 
                "operationId": "getSslTrustCertificateState"
            }
        }, 
        "/api/resources/compute-networks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ComputeNetwork"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeNetwork"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can create ComputeNetworks.", 
                "summary": "Creates a ComputeNetwork.", 
                "operationId": "createComputeNetwork"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can list ComputeNetworks.", 
                "summary": "Retrieves all ComputeNetworks.", 
                "operationId": "listComputeNetworks"
            }
        }, 
        "/api/resources/container-volumes/{name}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ContainerVolumeState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerVolumeState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "name"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeState"
                        }, 
                        "description": "The ContainerVolumeState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can update ContainerVolumeStates.", 
                "summary": "Updates a ContainerVolumeState.", 
                "operationId": "updateContainerVolumeState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerVolumeState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "name"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeState"
                        }, 
                        "description": "The patch of the ContainerVolumeState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can patch ContainerVolumeStates.", 
                "summary": "Patches a ContainerVolumeState.", 
                "operationId": "patchContainerVolumeState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ContainerVolumeState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "name"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can delete ContainerVolumeStates.", 
                "summary": "Deletes a ContainerVolumeState.", 
                "operationId": "deleteContainerVolumeState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ContainerVolumeState", 
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerVolumeState with provided <code>name</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerVolumeState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "name"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can retrieve ContainerVolumeStates.", 
                "summary": "Retrieves a ContainerVolumeState.", 
                "operationId": "getContainerVolumeState"
            }
        }, 
        "/api/resources/container-descriptions/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ContainerDescription is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerDescription"
                        }, 
                        "description": "The ContainerDescription to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ContainerDescriptions.", 
                "summary": "Updates a ContainerDescription.", 
                "operationId": "updateContainerDescription"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerDescription"
                        }, 
                        "description": "The patch of the ContainerDescription", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ContainerDescriptions.", 
                "summary": "Patches a ContainerDescription.", 
                "operationId": "patchContainerDescription"
            }, 
            "post": {
                "responses": {
                    "201": {
                        "description": "OK"
                    }, 
                    "404": {
                        "description": "'Not Found' if no container description with provided <code>id</code>"
                    }
                }, 
                "description": "Only Solution users, Container admins, and System admins can publush ContainerDescriptions.", 
                "parameters": [
                    {
                        "description": "The id of the container description", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "summary": "Publishes a container description to catalog."
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ContainerDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ContainerDescriptions.", 
                "summary": "Deletes a ContainerDescription.", 
                "operationId": "deleteContainerDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ContainerDescription", 
                        "schema": {
                            "$ref": "#/definitions/ContainerDescription"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerDescription with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ContainerDescriptions.", 
                "summary": "Retrieves a ContainerDescription.", 
                "operationId": "getContainerDescription"
            }
        }, 
        "/api/resources/tags/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the TagState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the TagState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/TagState"
                        }, 
                        "description": "The TagState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update TagStates.", 
                "summary": "Updates a TagState.", 
                "operationId": "updateTagState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the TagState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/TagState"
                        }, 
                        "description": "The patch of the TagState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch TagStates.", 
                "summary": "Patches a TagState.", 
                "operationId": "patchTagState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a TagState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete TagStates.", 
                "summary": "Deletes a TagState.", 
                "operationId": "deleteTagState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the TagState", 
                        "schema": {
                            "$ref": "#/definitions/TagState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no TagState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the TagState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve TagStates.", 
                "summary": "Retrieves a TagState.", 
                "operationId": "getTagState"
            }
        }, 
        "/api/callbacks/catalog/post-submission-extension": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "operationId": "CatalogRequestCallbackController.postSubmissionExtension", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRequest"
                        }, 
                        "description": "Service Catalog representation of a Container instance Request.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Performs additional actions post submission."
            }
        }, 
        "/api/config/network-profiles/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the NetworkProfile is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/deploymentNetworkProfile"
                        }, 
                        "description": "The NetworkProfile to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update NetworkProfiles.", 
                "summary": "Updates a NetworkProfile.", 
                "operationId": "updateNetworkProfile"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/deploymentNetworkProfile"
                        }, 
                        "description": "The patch of the NetworkProfile", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch NetworkProfiles.", 
                "summary": "Patches a NetworkProfile.", 
                "operationId": "patchNetworkProfile"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a NetworkProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete NetworkProfiles.", 
                "summary": "Deletes a NetworkProfile.", 
                "operationId": "deleteNetworkProfile"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the NetworkProfile", 
                        "schema": {
                            "$ref": "#/definitions/deploymentNetworkProfile"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no NetworkProfile with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve NetworkProfiles.", 
                "summary": "Retrieves a NetworkProfile.", 
                "operationId": "getNetworkProfile"
            }
        }, 
        "/api/resources/images": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ImageState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ImageState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ImageStates.", 
                "summary": "Creates a ImageState.", 
                "operationId": "createImageState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ImageStates.", 
                "summary": "Retrieves all ImageStates.", 
                "operationId": "listImageState"
            }
        }, 
        "/api/resources/container-network-descriptions/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ContainerNetworkDescription is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerNetworkDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkDescription"
                        }, 
                        "description": "The ContainerNetworkDescription to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can update ContainerNetworkDescriptions.", 
                "summary": "Updates a ContainerNetworkDescription.", 
                "operationId": "updateContainerNetworkDescription"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerNetworkDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkDescription"
                        }, 
                        "description": "The patch of the ContainerNetworkDescription", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can patch ContainerNetworkDescriptions.", 
                "summary": "Patches a ContainerNetworkDescription.", 
                "operationId": "patchContainerNetworkDescription"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ContainerNetworkDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can delete ContainerNetworkDescriptions.", 
                "summary": "Deletes a ContainerNetworkDescription.", 
                "operationId": "deleteContainerNetworkDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ContainerNetworkDescription", 
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkDescription"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerNetworkDescription with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerNetworkDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can retrieve ContainerNetworkDescriptions.", 
                "summary": "Retrieves a ContainerNetworkDescription.", 
                "operationId": "getContainerNetworkDescription"
            }
        }, 
        "/api/resources/tags": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/TagState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/TagState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create TagStates.", 
                "summary": "Creates a TagState.", 
                "operationId": "createTagState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list TagStates.", 
                "summary": "Retrieves all TagStates.", 
                "operationId": "listTagState"
            }
        }, 
        "/api/resources/container-networks/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ContainerNetworkState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerNetworkState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkState"
                        }, 
                        "description": "The ContainerNetworkState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can update ContainerNetworkStates.", 
                "summary": "Updates a ContainerNetworkState.", 
                "operationId": "updateContainerNetworkState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerNetworkState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkState"
                        }, 
                        "description": "The patch of the ContainerNetworkState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can patch ContainerNetworkStates.", 
                "summary": "Patches a ContainerNetworkState.", 
                "operationId": "patchContainerNetworkState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ContainerNetworkState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can delete ContainerNetworkStates.", 
                "summary": "Deletes a ContainerNetworkState.", 
                "operationId": "deleteContainerNetworkState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ContainerNetworkState", 
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerNetworkState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerNetworkState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can retrieve ContainerNetworkStates.", 
                "summary": "Retrieves a ContainerNetworkState.", 
                "operationId": "getContainerNetworkState"
            }
        }, 
        "/api/core/auth/credentials/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the AuthCredentialsServiceState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the AuthCredentialsServiceState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/AuthCredentialsServiceState"
                        }, 
                        "description": "The AuthCredentialsServiceState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update AuthCredentialsServiceState.", 
                "summary": "Updates a AuthCredentialsServiceState.", 
                "operationId": "updateAuthCredentialsServiceState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the AuthCredentialsServiceState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/AuthCredentialsServiceState"
                        }, 
                        "description": "The patch of the AuthCredentialsServiceState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch AuthCredentialsServiceStates.", 
                "summary": "Patches a AuthCredentialsServiceState.", 
                "operationId": "patchAuthCredentialsServiceState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a AuthCredentialsServiceState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete AuthCredentialsServiceStates.", 
                "summary": "Deletes a AuthCredentialsServiceState.", 
                "operationId": "deleteAuthCredentialsServiceState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the AuthCredentialsServiceState", 
                        "schema": {
                            "$ref": "#/definitions/AuthCredentialsServiceState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no AuthCredentialsServiceState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the AuthCredentialsServiceState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve AuthCredentialsServiceStates.", 
                "summary": "Retrieves a AuthCredentialsServiceState.", 
                "operationId": "getAuthCredentialsServiceState"
            }
        }, 
        "/api/callbacks/catalog/resources/types/{resourceTypeId}/{bindingId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "operationId": "ContainerResourceController.getResource", 
                "description": "", 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "resourceTypeId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique identifier of the resource.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "bindingId"
                    }
                ], 
                "summary": "Retrieves a single resource by its unique identifier."
            }
        }, 
        "/api/config/props/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ConfigurationState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ConfigurationState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationState"
                        }, 
                        "description": "The ConfigurationState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users and System admins can update ConfigurationState.", 
                "summary": "Updates a ConfigurationState.", 
                "operationId": "updateConfigurationState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ConfigurationState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationState"
                        }, 
                        "description": "The patch of the ConfigurationState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users and System admins can patch ConfigurationStates.", 
                "summary": "Patches a ConfigurationState.", 
                "operationId": "patchConfigurationState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ConfigurationState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users and System admins can delete ConfigurationStates.", 
                "summary": "Deletes a ConfigurationState.", 
                "operationId": "deleteConfigurationState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ConfigurationState", 
                        "schema": {
                            "$ref": "#/definitions/ConfigurationState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ConfigurationState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, System admins and Consumers can list ConfigurationStates.", 
                "summary": "Retrieves a ConfigurationState.", 
                "operationId": "getConfigurationState"
            }
        }, 
        "/api/resources/groups/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ResourceGroupState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ResourceGroupState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ResourceGroupState"
                        }, 
                        "description": "The ResourceGroupState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ResourceGroupStates.", 
                "summary": "Updates a ResourceGroupState.", 
                "operationId": "updateResourceGroupState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ResourceGroupState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ResourceGroupState"
                        }, 
                        "description": "The patch of the ResourceGroupState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ResourceGroupStates.", 
                "summary": "Patches a ResourceGroupState.", 
                "operationId": "patchResourceGroupState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ResourceGroupState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ResourceGroupStates.", 
                "summary": "Deletes a ResourceGroupState.", 
                "operationId": "deleteResourceGroupState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ResourceGroupState", 
                        "schema": {
                            "$ref": "#/definitions/ResourceGroupState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ResourceGroupState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ResourceGroupState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ResourceGroupStates.", 
                "summary": "Retrieves a ResourceGroupState.", 
                "operationId": "getResourceGroupState"
            }
        }, 
        "/api/resources/compute-descriptions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ComputeDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ComputeDescriptions.", 
                "summary": "Creates a ComputeDescription.", 
                "operationId": "createComputeDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ComputeDescriptions.", 
                "summary": "Retrieves all ComputeDescriptions.", 
                "operationId": "listComputeDescription"
            }
        }, 
        "/api/resources/network-interfaces-descriptions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can create ComputeNetworkDescriptions.", 
                "summary": "Creates a NetworkInterfaceDescription.", 
                "operationId": "createNetworkInterfaceDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can list NetworkInterfaceDescriptions.", 
                "summary": "Retrieves all NetworkInterfaceDescriptions.", 
                "operationId": "listNetworkInterfaceDescriptions"
            }
        }, 
        "/api/config/storage-profiles/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the StorageProfile is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the StorageProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/deploymentStorageProfile"
                        }, 
                        "description": "The StorageProfile to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update StorageProfiles.", 
                "summary": "Updates a StorageProfile.", 
                "operationId": "updateStorageProfile"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the StorageProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/deploymentStorageProfile"
                        }, 
                        "description": "The patch of the StorageProfile", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch StorageProfiles.", 
                "summary": "Patches a StorageProfile.", 
                "operationId": "patchStorageProfile"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a StorageProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete StorageProfiles.", 
                "summary": "Deletes a StorageProfile.", 
                "operationId": "deleteStorageProfile"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the StorageProfile", 
                        "schema": {
                            "$ref": "#/definitions/deploymentStorageProfile"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no StorageProfile with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the StorageProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve StorageProfiles.", 
                "summary": "Retrieves a StorageProfile.", 
                "operationId": "getStorageProfile"
            }
        }, 
        "/api/resources/elastic-placement-zones-config/resources/pools/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ElasticPlacementZoneConfigurationState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ElasticPlacementZoneConfigurationState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneConfigurationState"
                        }, 
                        "description": "The ElasticPlacementZoneConfigurationState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ElasticPlacementZoneConfigurationStates.", 
                "summary": "Updates a ElasticPlacementZoneConfigurationState.", 
                "operationId": "updateElasticPlacementZoneConfigurationState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ElasticPlacementZoneConfigurationState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneConfigurationState"
                        }, 
                        "description": "The patch of the ElasticPlacementZoneConfigurationState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ElasticPlacementZoneConfigurationStates.", 
                "summary": "Patches a ElasticPlacementZoneConfigurationState.", 
                "operationId": "patchElasticPlacementZoneConfigurationState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ElasticPlacementZoneConfigurationState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ElasticPlacementZoneConfigurationStates.", 
                "summary": "Deletes a ElasticPlacementZoneConfigurationState.", 
                "operationId": "deleteElasticPlacementZoneConfigurationState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ElasticPlacementZoneConfigurationState", 
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneConfigurationState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ElasticPlacementZoneConfigurationState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ElasticPlacementZoneConfigurationState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ElasticPlacementZoneConfigurationStates.", 
                "summary": "Retrieves a ElasticPlacementZoneConfigurationState.", 
                "operationId": "getElasticPlacementZoneConfigurationState"
            }
        }, 
        "/api/resources/compute-network-descriptions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ComputeNetworkDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeNetworkDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can create ComputeNetworkDescriptions.", 
                "summary": "Creates a ComputeNetworkDescription.", 
                "operationId": "createComputeNetworkDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can list ComputeNetworkDescriptions.", 
                "summary": "Retrieves all ComputeNetworkDescriptions.", 
                "operationId": "listComputeNetworkDescriptions"
            }
        }, 
        "/api/resources/container-volume-descriptions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can create ContainerVolumeDescriptions.", 
                "summary": "Creates a ContainerVolumeDescription.", 
                "operationId": "createContainerVolumeDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can list ContainerVolumeDescriptions.", 
                "summary": "Retrieves all ContainerVolumeDescriptions.", 
                "operationId": "listContainerVolumeDescription"
            }
        }, 
        "/api/callbacks/network/networks-deallocator": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Deallocation of component initiated", 
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                }, 
                "operationId": "NetworkCallbackRequestController.deallocateComponent", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Accepts a new request to deallocate a Container Network component from network service."
            }
        }, 
        "/api/delete-tasks/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ServiceDocumentDeleteTaskState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ServiceDocumentDeleteTaskState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceDocumentDeleteTaskState"
                        }, 
                        "description": "The ServiceDocumentDeleteTaskState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ServiceDocumentDeleteTaskState.", 
                "summary": "Updates a ServiceDocumentDeleteTaskState.", 
                "operationId": "updateServiceDocumentDeleteTaskState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ServiceDocumentDeleteTaskState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceDocumentDeleteTaskState"
                        }, 
                        "description": "The patch of the ServiceDocumentDeleteTaskState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ServiceDocumentDeleteTaskState.", 
                "summary": "Patches a ServiceDocumentDeleteTaskState.", 
                "operationId": "patchServiceDocumentDeleteTaskState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ServiceDocumentDeleteTaskState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ServiceDocumentDeleteTaskState.", 
                "summary": "Deletes a ServiceDocumentDeleteTaskState.", 
                "operationId": "deleteServiceDocumentDeleteTaskState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ServiceDocumentDeleteTaskState", 
                        "schema": {
                            "$ref": "#/definitions/ServiceDocumentDeleteTaskState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ServiceDocumentDeleteTaskState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ServiceDocumentDeleteTaskState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ServiceDocumentDeleteTaskState.", 
                "summary": "Retrieves a ServiceDocumentDeleteTaskState.", 
                "operationId": "getServiceDocumentDeleteTaskState"
            }
        }, 
        "/api/resources/pools": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ResourcePoolState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ResourcePoolState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ResourcePoolStates.", 
                "summary": "Creates a ResourcePoolState.", 
                "operationId": "createResourcePoolState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ResourcePoolStates.", 
                "summary": "Retrieves all ResourcePoolStates.", 
                "operationId": "listResourcePoolState"
            }
        }, 
        "/api/config/trusted-certificates/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the SslTrustedCertificateState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SslTrustedCertificateState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SslTrustedCertificateState"
                        }, 
                        "description": "The SslTrustedCertificateState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update SslTrustedCertificateStates.", 
                "summary": "Updates a SslTrustedCertificateState.", 
                "operationId": "updateSslTrustedCertificateState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SslTrustedCertificateState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SslTrustedCertificateState"
                        }, 
                        "description": "The patch of the SslTrustedCertificateState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch SslTrustedCertificateStates.", 
                "summary": "Patches a SslTrustedCertificateState.", 
                "operationId": "patchSslTrustedCertificateState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a SslTrustedCertificateState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete SslTrustedCertificateStates.", 
                "summary": "Deletes a SslTrustedCertificateState.", 
                "operationId": "deleteSslTrustedCertificateState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the SslTrustedCertificateState", 
                        "schema": {
                            "$ref": "#/definitions/SslTrustedCertificateState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no SslTrustedCertificateState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the SslTrustedCertificateState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve SslTrustedCertificateStates.", 
                "summary": "Retrieves a SslTrustedCertificateState.", 
                "operationId": "getSslTrustedCertificateState"
            }
        }, 
        "/api/callbacks/catalog/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }
                }, 
                "operationId": "CatalogRequestCallbackController.submitRequest", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRequest"
                        }, 
                        "description": "Service Catalog representation of a Container instance Request.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Handles submitted Request from the Service Catalog to the Container service."
            }
        }, 
        "/api/resources/group-placements/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the GroupResourcePlacementState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the GroupResourcePlacementState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/GroupResourcePlacementState"
                        }, 
                        "description": "The GroupResourcePlacementState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update GroupResourcePlacementStates.", 
                "summary": "Updates a GroupResourcePlacementState.", 
                "operationId": "updateGroupResourcePlacementState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the GroupResourcePlacementState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/GroupResourcePlacementState"
                        }, 
                        "description": "The patch of the GroupResourcePlacementState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch GroupResourcePlacementStates.", 
                "summary": "Patches a GroupResourcePlacementState.", 
                "operationId": "patchGroupResourcePlacementState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a GroupResourcePlacementState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete GroupResourcePlacementStates.", 
                "summary": "Deletes a GroupResourcePlacementState.", 
                "operationId": "deleteGroupResourcePlacementState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the GroupResourcePlacementState", 
                        "schema": {
                            "$ref": "#/definitions/GroupResourcePlacementState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no GroupResourcePlacementState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the GroupResourcePlacementState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve GroupResourcePlacementStates.", 
                "summary": "Retrieves a GroupResourcePlacementState.", 
                "operationId": "getGroupResourcePlacementState"
            }
        }, 
        "/api/config/storage-profiles": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/deploymentStorageProfile"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/deploymentStorageProfile"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create StorageProfiles.", 
                "summary": "Creates a StorageProfile.", 
                "operationId": "createStorageProfile"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list StorageProfiles.", 
                "summary": "Retrieves all StorageProfiles.", 
                "operationId": "listStorageProfile"
            }
        }, 
        "/api/provisioning/image-enumeration-tasks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ImageEnumerationTaskState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ImageEnumerationTaskState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ImageEnumerationTaskState.", 
                "summary": "Creates a ImageEnumerationTaskState.", 
                "operationId": "createImageEnumerationTaskState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ImageEnumerationTaskState.", 
                "summary": "Retrieves all ImageEnumerationTaskState.", 
                "operationId": "listImageEnumerationTaskState"
            }
        }, 
        "/api/resources/compute-descriptions/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ComputeDescription is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeDescription"
                        }, 
                        "description": "The ComputeDescription to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ComputeDescriptions.", 
                "summary": "Updates a ComputeDescription.", 
                "operationId": "updateComputeDescription"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeDescription"
                        }, 
                        "description": "The patch of the ComputeDescription", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ComputeDescriptions.", 
                "summary": "Patches a ComputeDescription.", 
                "operationId": "patchComputeDescription"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ComputeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ComputeDescriptions.", 
                "summary": "Deletes a ComputeDescription.", 
                "operationId": "deleteComputeDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ComputeDescription", 
                        "schema": {
                            "$ref": "#/definitions/ComputeDescription"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ComputeDescription with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ComputeDescriptions.", 
                "summary": "Retrieves a ComputeDescription.", 
                "operationId": "getComputeDescription"
            }
        }, 
        "/api/resources/deployment-policies/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the DeploymentPolicy is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the DeploymentPolicy", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/DeploymentPolicy"
                        }, 
                        "description": "The DeploymentPolicy to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update DeploymentPolicies.", 
                "summary": "Updates a DeploymentPolicy.", 
                "operationId": "updateDeploymentPolicy"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the DeploymentPolicy", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/DeploymentPolicy"
                        }, 
                        "description": "The patch of the DeploymentPolicy", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch DeploymentPolicies.", 
                "summary": "Patches a DeploymentPolicy.", 
                "operationId": "patchDeploymentPolicy"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a DeploymentPolicy", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete DeploymentPolicies.", 
                "summary": "Deletes a DeploymentPolicy.", 
                "operationId": "deleteDeploymentPolicy"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the DeploymentPolicy", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentPolicy"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no DeploymentPolicy with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the DeploymentPolicy", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve DeploymentPolicies.", 
                "summary": "Retrieves a DeploymentPolicy.", 
                "operationId": "getDeploymentPolicy"
            }
        }, 
        "/api/callbacks/composition/componentallocator/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }
                }, 
                "operationId": "CompositionCallbackRequestController.allocateComponent", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/allocateComponentRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Accepts a new request to allocate a Container component from composition service."
            }
        }, 
        "/api/config/photon-model-adapters-registry/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the PhotonModelAdapterConfig", 
                        "schema": {
                            "$ref": "#/definitions/PhotonModelAdapterConfig"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no PhotonModelAdapterConfig with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, System admins and Consumers can list PhotonModelAdapterConfig states.", 
                "summary": "Retrieves a PhotonModelAdapterConfig.", 
                "operationId": "getPhotonModelAdapterConfig"
            }
        }, 
        "/api/resources/closure-descriptions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ClosureDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ClosureDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ClosureDescriptions.", 
                "summary": "Creates a ClosureDescription.", 
                "operationId": "createClosureDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can list ClosureDescriptions.", 
                "summary": "Retrieves all ClosureDescriptions.", 
                "operationId": "listClosureDescription"
            }
        }, 
        "/api/resources/hosts": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SslTrustCertificateState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerHostSpec"
                        }, 
                        "description": "The state for the container host to be created or validated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Only validate container host.", 
                        "required": false, 
                        "type": "boolean", 
                        "name": "validate", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can add or validate container hosts.", 
                "summary": "Helper method for adding and validating container hosts.", 
                "operationId": "updateContainerHostSpec"
            }
        }, 
        "/api/resources/elastic-placement-zones-config": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneConfigurationState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneConfigurationState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ElasticPlacementZoneConfigurationStates.", 
                "summary": "Creates a ElasticPlacementZoneConfigurationState.", 
                "operationId": "createElasticPlacementZoneConfigurationState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ElasticPlacementZoneConfigurationStates.", 
                "summary": "Retrieves all ElasticPlacementZoneConfigurationStates.", 
                "operationId": "listElasticPlacementZoneConfigurationState"
            }
        }, 
        "/api/data-collection/types/{containerTypeId}": {
            "post": {
                "responses": {
                    "204": {
                        "description": "'No Content' is returned when successful."
                    }
                }, 
                "description": "Only Solution users, Container admins, and System admins can trigger data collection.", 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "containerTypeId", 
                        "in": "path"
                    }
                ], 
                "summary": "Triggers data collection of all hosts and associated containers per containerType and related provider."
            }
        }, 
        "/api/config/compute-profiles/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ComputeProfile is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeProfile"
                        }, 
                        "description": "The ComputeProfile to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ComputeProfiles.", 
                "summary": "Updates a ComputeProfile.", 
                "operationId": "updateComputeProfile"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeProfile"
                        }, 
                        "description": "The patch of the ComputeProfile", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ComputeProfiles.", 
                "summary": "Patches a ComputeProfile.", 
                "operationId": "patchComputeProfile"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ComputeProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ComputeProfiles.", 
                "summary": "Deletes a ComputeProfile.", 
                "operationId": "deleteComputeProfile"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ComputeProfile", 
                        "schema": {
                            "$ref": "#/definitions/ComputeProfile"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ComputeProfile with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeProfile", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ComputeProfiles.", 
                "summary": "Retrieves a ComputeProfile.", 
                "operationId": "getComputeProfile"
            }
        }, 
        "/api/config/profile-mappings": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ProfileMappingStates.", 
                "summary": "Retrieves all ProfileMappingStates.", 
                "operationId": "listProfileMappingState"
            }
        }, 
        "/api/resources/disks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ComputeDiskState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeDiskState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create DiskStates.", 
                "summary": "Creates a ComputeDiskState.", 
                "operationId": "createDiskState"
            }
        }, 
        "/api/resources/composite-components/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the CompositeComponent is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the CompositeComponent", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/CompositeComponent"
                        }, 
                        "description": "The CompositeComponent to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update CompositeComponents.", 
                "summary": "Updates a CompositeComponent.", 
                "operationId": "updateCompositeComponent"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the CompositeComponent", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/CompositeComponent"
                        }, 
                        "description": "The patch of the CompositeComponent", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch CompositeComponents.", 
                "summary": "Patches a CompositeComponent.", 
                "operationId": "patchCompositeComponent"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a CompositeComponent", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete CompositeComponents.", 
                "summary": "Deletes a CompositeComponent.", 
                "operationId": "deleteCompositeComponent"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the CompositeComponent", 
                        "schema": {
                            "$ref": "#/definitions/CompositeComponent"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no CompositeComponent with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the CompositeComponent", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve CompositeComponents.", 
                "summary": "Retrieves a CompositeComponent.", 
                "operationId": "getCompositeComponent"
            }
        }, 
        "/api/config/trusted-certificates": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SslTrustedCertificateState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SslTrustedCertificateState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create SslTrustedCertificateStates.", 
                "summary": "Creates a SslTrustedCertificateState.", 
                "operationId": "createSslTrustedCertificateState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list SslTrustedCertificateStates.", 
                "summary": "Retrieves all SslTrustedCertificateStates.", 
                "operationId": "listSslTrustedCertificateState"
            }
        }, 
        "/api/resources/container-volumes": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can create ContainerVolumeStates.", 
                "summary": "Creates a ContainerVolumeState.", 
                "operationId": "createContainerVolumeState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can list ContainerVolumeStates.", 
                "summary": "Retrieves all ContainerVolumeState.", 
                "operationId": "listContainerVolumeState"
            }
        }, 
        "/api/core/auth/credentials": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/AuthCredentialsServiceState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/AuthCredentialsServiceState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create AuthCredentialsServiceStates.", 
                "summary": "Creates a AuthCredentialsServiceState.", 
                "operationId": "createAuthCredentialsServiceState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list AuthCredentialsServiceStates.", 
                "summary": "Retrieves all AuthCredentialsServiceStates.", 
                "operationId": "listAuthCredentialsServiceState"
            }
        }, 
        "/api/config/registries": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/RegistryState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/RegistryState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create RegistryStates.", 
                "summary": "Creates a RegistryState.", 
                "operationId": "createRegistryState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list RegistryStates.", 
                "summary": "Retrieves all RegistryStates.", 
                "operationId": "listRegistryState"
            }
        }, 
        "/api/callbacks/catalog/requestValidations": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "operationId": "CatalogRequestCallbackController.validateRequest", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRequest"
                        }, 
                        "description": "Service Catalog representation of a Container Instance Request.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Handles the validation callback for an unsubmitted Request from the Service Catalog. This callback is used to both validate the request as well obtain additional properties if needed before the request is submitted."
            }
        }, 
        "/api/config/profiles/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ProfileState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ProfileState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ProfileState"
                        }, 
                        "description": "The ProfileState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ProfileStates.", 
                "summary": "Updates a ProfileState.", 
                "operationId": "updateProfileState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ProfileState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ProfileState"
                        }, 
                        "description": "The patch of the ProfileState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ProfileStates.", 
                "summary": "Patches a ProfileState.", 
                "operationId": "patchProfileState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ProfileState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ProfileStates.", 
                "summary": "Deletes a ProfileState.", 
                "operationId": "deleteProfileState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ProfileState", 
                        "schema": {
                            "$ref": "#/definitions/ProfileState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ProfileState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ProfileState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ProfileStates.", 
                "summary": "Retrieves a ProfileState.", 
                "operationId": "getProfileState"
            }
        }, 
        "/api/config/profiles": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ProfileState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ProfileState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ProfileStates.", 
                "summary": "Creates a ProfileState.", 
                "operationId": "createProfileState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ProfileStates.", 
                "summary": "Retrieves all ProfileStates.", 
                "operationId": "listProfileState"
            }
        }, 
        "/api/resources/compute": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ComputeState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ComputeStates.", 
                "summary": "Creates a ComputeState.", 
                "operationId": "createComputeState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ComputeStates.", 
                "summary": "Retrieves all ComputeStates.", 
                "operationId": "listComputeState"
            }
        }, 
        "/api/config/registry-spec": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SslTrustCertificateState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/RegistryHostSpec"
                        }, 
                        "description": "RegistryState + SslTrustCertificateState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Only validate registry.", 
                        "required": false, 
                        "type": "boolean", 
                        "name": "validate", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can add or validate docker registries.", 
                "summary": "Helper method for adding and validating docker registries.", 
                "operationId": "updateRegistryHostSpec"
            }
        }, 
        "/api/provisioning/image-enumeration-tasks/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ImageEnumerationTaskState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ImageEnumerationTaskState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ImageEnumerationTaskState"
                        }, 
                        "description": "The ImageEnumerationTaskState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ImageEnumerationTaskState.", 
                "summary": "Updates a ImageEnumerationTaskState.", 
                "operationId": "updateImageEnumerationTaskState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ImageEnumerationTaskState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ImageEnumerationTaskState.", 
                "summary": "Deletes a ImageEnumerationTaskState.", 
                "operationId": "deleteImageEnumerationTaskState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ImageEnumerationTaskState", 
                        "schema": {
                            "$ref": "#/definitions/ImageEnumerationTaskState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ImageEnumerationTaskState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ImageEnumerationTaskState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ImageEnumerationTaskState.", 
                "summary": "Retrieves a ImageEnumerationTaskState.", 
                "operationId": "getImageEnumerationTaskState"
            }
        }, 
        "/api/resources/elastic-placement-zones": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ElasticPlacementZoneStates.", 
                "summary": "Creates a ElasticPlacementZoneState.", 
                "operationId": "createElasticPlacementZoneState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ElasticPlacementZoneStates.", 
                "summary": "Retrieves all ElasticPlacementZoneStates.", 
                "operationId": "listElasticPlacementZoneState"
            }
        }, 
        "/api/resources/sub-networks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SubnetState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SubnetState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create SubnetStates.", 
                "summary": "Creates a SubnetState.", 
                "operationId": "createSubnetState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list SubnetStates.", 
                "summary": "Retrieves all SubnetStates.", 
                "operationId": "listSubnetState"
            }
        }, 
        "/api/resources/elastic-placement-zones/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ElasticPlacementZoneState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ElasticPlacementZoneState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneState"
                        }, 
                        "description": "The ElasticPlacementZoneState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ElasticPlacementZoneStates.", 
                "summary": "Updates a ElasticPlacementZoneState.", 
                "operationId": "updateElasticPlacementZoneState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ElasticPlacementZoneState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneState"
                        }, 
                        "description": "The patch of the ElasticPlacementZoneState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ElasticPlacementZoneStates.", 
                "summary": "Patches a ElasticPlacementZoneState.", 
                "operationId": "patchElasticPlacementZoneState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ElasticPlacementZoneState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ElasticPlacementZoneStates.", 
                "summary": "Deletes a ElasticPlacementZoneState.", 
                "operationId": "deleteElasticPlacementZoneState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ElasticPlacementZoneState", 
                        "schema": {
                            "$ref": "#/definitions/ElasticPlacementZoneState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ElasticPlacementZoneState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ElasticPlacementZoneState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ElasticPlacementZoneStates.", 
                "summary": "Retrieves a ElasticPlacementZoneState.", 
                "operationId": "getElasticPlacementZoneState"
            }
        }, 
        "/api/resources/containers": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ContainerState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ContainerStates.", 
                "summary": "Creates a ContainerState.", 
                "operationId": "createContainerState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ContainerStates.", 
                "summary": "Retrieves all ContainerStates.", 
                "operationId": "listContainerState"
            }
        }, 
        "/api/resources/compute/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ComputeState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeState"
                        }, 
                        "description": "The ComputeState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ComputeStates.", 
                "summary": "Updates a ComputeState.", 
                "operationId": "updateComputeState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeState"
                        }, 
                        "description": "The patch of the ComputeState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ComputeStates.", 
                "summary": "Patches a ComputeState.", 
                "operationId": "patchComputeState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ComputeState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ComputeStates.", 
                "summary": "Deletes a ComputeState.", 
                "operationId": "deleteComputeState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ComputeState", 
                        "schema": {
                            "$ref": "#/definitions/ComputeState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ComputeState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Solution users, System admins, Container admins, and Container architects can retrieve ComputeStates.", 
                "summary": "Retrieves a ComputeState.", 
                "operationId": "getComputeState"
            }
        }, 
        "/api/callbacks/composition/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }
                }, 
                "operationId": "CompositionCallbackRequestController.create", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/compositionProviderRequest"
                        }, 
                        "description": "The CompositionProviderRequest defining the request parameters.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Accepts a new request to provision a Container component type from composition service."
            }
        }, 
        "/api/resources/tag-assignment": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/TagAssignmentRequest"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/TagAssignmentRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create TagAssignmentRequests.", 
                "summary": "Creates a TagAssignmentRequest.", 
                "operationId": "createTagAssignmentRequest"
            }
        }, 
        "/api/request-status": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ContainerRequestStatuss.", 
                "summary": "Retrieves all ContainerRequestStatuss.", 
                "operationId": "listContainerRequestStatus"
            }
        }, 
        "/api/config/trust-certs-import": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SslTrustCertificateState"
                        }
                    }
                }, 
                "operationId": "SslTrustImportController.update", 
                "description": "Only Solution users, Container admins, and System admins import server certificates.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SslTrustImportRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Imports and transforms a Server certificate from URI and store if valid and accepted."
            }
        }, 
        "/api/resources/container-volume-descriptions/{name}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ContainerVolumeDescription is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The name of the ContainerVolumeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "name"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeDescription"
                        }, 
                        "description": "The ContainerVolumeDescription to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can update ContainerVolumeDescription.", 
                "summary": "Updates a ContainerVolumeDescription.", 
                "operationId": "updateContainerVolumeDescription"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The name of the ContainerVolumeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "name"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeDescription"
                        }, 
                        "description": "The patch of the ContainerVolumeDescription", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can patch ContainerVolumeDescription.", 
                "summary": "Patches a ContainerVolumeDescription.", 
                "operationId": "patchContainerVolumeDescription"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The name of a ContainerVolumeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "name"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can delete ContainerVolumeDescription.", 
                "summary": "Deletes a ContainerVolumeDescription.", 
                "operationId": "deleteContainerVolumeDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ContainerVolumeDescription", 
                        "schema": {
                            "$ref": "#/definitions/ContainerVolumeDescription"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerVolumeDescription with provided <code> name</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The name of the ContainerVolumeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "name"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can retrieve ContainerVolumeDescriptions.", 
                "summary": "Retrieves a ContainerVolumeDescription.", 
                "operationId": "getContainerVolumeDescription"
            }
        }, 
        "/api/resources/container-networks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can create ContainerNetworkStates.", 
                "summary": "Creates a ContainerNetworkState.", 
                "operationId": "createContainerNetworkState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can list ContainerNetworkStates.", 
                "summary": "Retrieves all ContainerNetworkStates.", 
                "operationId": "listContainerNetworkState"
            }
        }, 
        "/api/resources/compute-networks/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ComputeNetwork is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeNetwork", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeNetwork"
                        }, 
                        "description": "The ComputeNetwork to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can update ComputeNetworks.", 
                "summary": "Updates a ComputeNetwork.", 
                "operationId": "updateComputeNetwork"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeNetwork", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeNetwork"
                        }, 
                        "description": "The patch of the ComputeNetwork", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can patch ComputeNetwork.", 
                "summary": "Patches a ComputeNetwork.", 
                "operationId": "patchComputeNetwork"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ComputeNetwork", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can delete ComputeNetwork.", 
                "summary": "Deletes a ComputeNetwork.", 
                "operationId": "deleteComputeNetwork"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ComputeNetwork", 
                        "schema": {
                            "$ref": "#/definitions/ComputeNetwork"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ComputeNetwork with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeNetwork", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Solution users, System admins, Compute admins, and Compute architects can retrieve ComputeNetworks.", 
                "summary": "Retrieves a ComputeNetwork.", 
                "operationId": "getComputeNetwork"
            }
        }, 
        "/api/resources/networks/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the NetworkState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkState"
                        }, 
                        "description": "The NetworkState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update NetworkStates.", 
                "summary": "Updates a NetworkState.", 
                "operationId": "updateNetworkState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkState"
                        }, 
                        "description": "The patch of the NetworkState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch NetworkStates.", 
                "summary": "Patches a NetworkState.", 
                "operationId": "patchNetworkState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a NetworkState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete NetworkStates.", 
                "summary": "Deletes a NetworkState.", 
                "operationId": "deleteNetworkState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the NetworkState", 
                        "schema": {
                            "$ref": "#/definitions/NetworkState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no NetworkState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the NetworkState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve NetworkState.", 
                "summary": "Retrieves a NetworkState.", 
                "operationId": "getNetworkState"
            }
        }, 
        "/api/config/trust-certs": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SslTrustCertificateState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SslTrustCertificateState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create SslTrustCertificateStates.", 
                "summary": "Creates a SslTrustCertificateState.", 
                "operationId": "createSslTrustCertificateState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list SslTrustCertificateStates.", 
                "summary": "Retrieves all SslTrustCertificateStates.", 
                "operationId": "listSslTrustCertificateState"
            }
        }, 
        "/api/requests/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the RequestBrokerState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the RequestBrokerState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/RequestBrokerState"
                        }, 
                        "description": "The RequestBrokerState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update RequestBrokerStates.", 
                "summary": "Updates a RequestBrokerState.", 
                "operationId": "updateRequestBrokerState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the RequestBrokerState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/RequestBrokerState"
                        }, 
                        "description": "The patch of the RequestBrokerState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch RequestBrokerStates.", 
                "summary": "Patches a RequestBrokerState.", 
                "operationId": "patchRequestBrokerState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a RequestBrokerState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete RequestBrokerStates.", 
                "summary": "Deletes a RequestBrokerState.", 
                "operationId": "deleteRequestBrokerState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the RequestBrokerState", 
                        "schema": {
                            "$ref": "#/definitions/RequestBrokerState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no RequestBrokerState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the RequestBrokerState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve RequestBrokerStates.", 
                "summary": "Retrieves a RequestBrokerState.", 
                "operationId": "getRequestBrokerState"
            }
        }, 
        "/api/callbacks/network/networks-allocator": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Retrieve allocation component", 
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                }, 
                "operationId": "NetworkCallbackRequestController.allocateComponent", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Accepts a new request to allocate a Container Network component from network service."
            }
        }, 
        "/api/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/RequestBrokerState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/RequestBrokerState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create RequestBrokerStates.", 
                "summary": "Creates a RequestBrokerState.", 
                "operationId": "createRequestBrokerState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list RequestBrokerStates.", 
                "summary": "Retrieves all RequestBrokerStates.", 
                "operationId": "listRequestBrokerState"
            }
        }, 
        "/api/resources/container-volumes/{id}/manage": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the CatalogResource", 
                        "schema": {
                            "$ref": "#/definitions/catalogResource"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no CatalogResourceItem with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "", 
                "summary": "Retrieves a catalog item related to the container item.", 
                "operationId": "getCatalogResourceItem"
            }
        }, 
        "/api/resources/containers/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ContainerState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerState"
                        }, 
                        "description": "The ContainerState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ContainerStates.", 
                "summary": "Updates a ContainerState.", 
                "operationId": "updateContainerState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerState"
                        }, 
                        "description": "The patch of the ContainerState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ContainerStates.", 
                "summary": "Patches a ContainerState.", 
                "operationId": "patchContainerState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ContainerState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ContainerStates.", 
                "summary": "Deletes a ContainerState.", 
                "operationId": "deleteContainerState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ContainerState", 
                        "schema": {
                            "$ref": "#/definitions/ContainerState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "", 
                "summary": "Retrieves a ContainerState.", 
                "operationId": "getContainerState"
            }
        }, 
        "/api/resources/closures": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ClosureState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ClosureState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ClosureStates.", 
                "summary": "Creates a ClosureState.", 
                "operationId": "createClosureState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can list ClosureStates.", 
                "summary": "Retrieves all ClosureStates.", 
                "operationId": "listClosureState"
            }
        }, 
        "/api/resources/containers/{id}/stats": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ServiceStats", 
                        "schema": {
                            "$ref": "#/definitions/ServiceStats"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "", 
                "summary": "Retrieves the stats of a ContainerState.", 
                "operationId": "getContainerStats"
            }
        }, 
        "/api/callbacks/catalog/requests/{requestId}/rollback": {
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "operationId": "CatalogRequestCallbackController.rollbackRequest", 
                "description": "", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "requestId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRollbackRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Handles the direction to rollback a rejected request from the Service Catalog."
            }
        }, 
        "/api/resources/event-logs": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/EventLogState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/EventLogState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create EventLogStates.", 
                "summary": "Creates a EventLogState.", 
                "operationId": "createEventLogState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list EventLogStates.", 
                "summary": "Retrieves all EventLogStates.", 
                "operationId": "listEventLogState"
            }
        }, 
        "/api/resources/network-interfaces": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create NetworkInterfaceStates.", 
                "summary": "Creates a NetworkInterfaceState.", 
                "operationId": "createNetworkInterfaceState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list NetworkInterfaceStates.", 
                "summary": "Retrieves all NetworkInterfaceStates.", 
                "operationId": "listNetworkInterfaceState"
            }
        }, 
        "/api/resources/groups": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ResourceGroupState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ResourceGroupState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ResourceGroupStates.", 
                "summary": "Creates a ResourceGroupState.", 
                "operationId": "createResourceGroupState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ResourceGroupStates.", 
                "summary": "Retrieves all ResourceGroupStates.", 
                "operationId": "listResourceGroupState"
            }
        }, 
        "/api/resources/compute-search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ComputeStates.", 
                "summary": "Retrieves all ComputeStates.", 
                "operationId": "listComputeState"
            }
        }, 
        "/api/delete-tasks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ServiceDocumentDeleteTaskState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceDocumentDeleteTaskState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ServiceDocumentDeleteTaskState.", 
                "summary": "Creates a ServiceDocumentDeleteTaskState.", 
                "operationId": "createServiceDocumentDeleteTaskState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ServiceDocumentDeleteTaskState.", 
                "summary": "Retrieves all ServiceDocumentDeleteTaskState.", 
                "operationId": "listServiceDocumentDeleteTaskState"
            }
        }, 
        "/api/resources/composite-descriptions/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the CompositeDescription is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the CompositeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/CompositeDescription"
                        }, 
                        "description": "The CompositeDescription to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update CompositeDescription.", 
                "summary": "Updates a CompositeDescription.", 
                "operationId": "updateCompositeDescription"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the CompositeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/CompositeDescription"
                        }, 
                        "description": "The patch of the CompositeDescription", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch CompositeDescription.", 
                "summary": "Patches a CompositeDescription.", 
                "operationId": "patchCompositeDescription"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a CompositeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete CompositeDescriptions.", 
                "summary": "Deletes a CompositeDescription.", 
                "operationId": "deleteCompositeDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the CompositeDescription or CompositeDescriptionImages", 
                        "schema": {
                            "type": "object"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no CompositeDescription with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the CompositeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "name": "", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve CompositeDescription.", 
                "summary": "Retrieves a CompositeDescription or the images of it's descriptions as CompositeDescriptionImages.", 
                "operationId": "getCompositeDescription"
            }
        }, 
        "/api/resources/image-search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ImageStates.", 
                "summary": "Retrieves all ImageStates.", 
                "operationId": "listImageState"
            }
        }, 
        "/api/config/props": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ConfigurationState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users and System admins can create ConfigurationStates.", 
                "summary": "Creates a ConfigurationState.", 
                "operationId": "createConfigurationState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, System admins and Consumers can list ConfigurationStates.", 
                "summary": "Retrieves all ConfigurationStates.", 
                "operationId": "listConfigurationStates"
            }
        }, 
        "/api/adapter/**": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Ok with the Object received from the adapter", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/GenericTenantedServiceDocument"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "put"
                ], 
                "description": "Only Solution users, Container admins, and System admins can access the Adapter API", 
                "summary": "Generic PUT to access xenon Adapter API", 
                "operationId": "adapterPut"
            }, 
            "patch": {
                "responses": {
                    "204": {
                        "description": "No content"
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/GenericTenantedServiceDocument"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can access the Adapter API", 
                "summary": "Generic PATCH to access xenon Adapter API", 
                "operationId": "adapterPatch"
            }, 
            "post": {
                "responses": {
                    "200": {
                        "description": "'Ok' is returned with the Object received from the adapter", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/GenericTenantedServiceDocument"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "post"
                ], 
                "description": "Only Solution users, Container admins, and System admins can access the Adapter API", 
                "summary": "Generic POST to access xenon Adapter API", 
                "operationId": "adapterPost"
            }, 
            "delete": {
                "operationId": "adapterDelete", 
                "responses": {
                    "204": {
                        "description": "No content"
                    }
                }, 
                "summary": "Generic DELETE to access xenon Adapter API", 
                "description": "Only Solution users, Container admins, and System admins can access the Adapter API", 
                "tags": [
                    "delete"
                ]
            }, 
            "get": {
                "operationId": "adapterGet", 
                "responses": {
                    "200": {
                        "description": "OK with the Object received from the adapter", 
                        "schema": {
                            "$ref": "#/definitions/GenericTenantedServiceDocument"
                        }
                    }
                }, 
                "summary": "Generic GET to access xenon Adapter API", 
                "description": "Only Solution users, Container admins, and System admins can access the Adapter API", 
                "tags": [
                    "get"
                ]
            }
        }, 
        "/api/groups/{tenantLink}/**": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/labelledReference"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "tenantLink", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve Tenant info.", 
                "summary": "Retrieves the Business Group and Tenant info from the identity-service and transformed in group property.", 
                "operationId": "GroupTenantController.get"
            }
        }, 
        "/api/resources/closures/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ClosureState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ClosureState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ClosureState"
                        }, 
                        "description": "The ClosureState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ClosureStates.", 
                "summary": "Updates a ClosureState.", 
                "operationId": "updateClosureState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ClosureState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ClosureState"
                        }, 
                        "description": "The patch of the ClosureState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ClosureStates.", 
                "summary": "Patches a ClosureState.", 
                "operationId": "patchClosureState"
            }, 
            "post": {
                "responses": {
                    "200": {
                        "description": "OK with the Closure Run", 
                        "schema": {
                            "$ref": "#/definitions/ClosureState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ClosureState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ClosureState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ClosureState"
                        }, 
                        "description": "The ClosureState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can retrieve ClosureStates.", 
                "summary": "Runs a Closure.", 
                "operationId": "runClosure"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ClosureState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can delete ClosureStates.", 
                "summary": "Deletes a ClosureState.", 
                "operationId": "deleteClosureState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ClosureState", 
                        "schema": {
                            "$ref": "#/definitions/ClosureState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ClosureState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ClosureState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can retrieve ClosureStates.", 
                "summary": "Retrieves a ClosureState.", 
                "operationId": "getClosureState"
            }
        }, 
        "/api/callbacks/network/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }
                }, 
                "operationId": "NetworkCallbackRequestController.submitRequest", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest defining the request parameters.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Accepts a new request from network service to provision or perform a day-2 operation on a Network component type."
            }
        }, 
        "/api/request-status/{id}": {
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerRequestStatus", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerRequestStatus"
                        }, 
                        "description": "The patch of the ContainerRequestStatus", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ContainerRequestStatuss.", 
                "summary": "Patches a ContainerRequestStatus.", 
                "operationId": "patchContainerRequestStatus"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ContainerRequestStatus", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ContainerRequestStatuss.", 
                "summary": "Deletes a ContainerRequestStatus.", 
                "operationId": "deleteContainerRequestStatus"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ContainerRequestStatus", 
                        "schema": {
                            "$ref": "#/definitions/ContainerRequestStatus"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ContainerRequestStatus with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ContainerRequestStatus", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ContainerRequestStatuss.", 
                "summary": "Retrieves a ContainerRequestStatus.", 
                "operationId": "getContainerRequestStatus"
            }
        }, 
        "/api/data-collection": {
            "post": {
                "responses": {
                    "204": {
                        "description": "'No Content' is returned when successful."
                    }
                }, 
                "description": "Only Solution users, Container admins, and System admins can trigger data collection.", 
                "summary": "Triggers full data collection."
            }
        }, 
        "/api/resources/event-logs/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the EventLogState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the EventLogState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/EventLogState"
                        }, 
                        "description": "The EventLogState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update EventLogStates.", 
                "summary": "Updates a EventLogState.", 
                "operationId": "updateEventLogState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the EventLogState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/EventLogState"
                        }, 
                        "description": "The patch of the EventLogState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch EventLogStates.", 
                "summary": "Patches a EventLogState.", 
                "operationId": "patchEventLogState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a EventLogState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete EventLogStates.", 
                "summary": "Deletes a EventLogState.", 
                "operationId": "deleteEventLogState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the EventLogState", 
                        "schema": {
                            "$ref": "#/definitions/EventLogState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no EventLogState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the EventLogState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve EventLogStates.", 
                "summary": "Retrieves a EventLogState.", 
                "operationId": "getEventLogState"
            }
        }, 
        "/api/containers/types": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned if new containerType with the containerType url in the <code>location</code> header of the response"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }
                    }, 
                    "204": {
                        "description": "'No Content' is returned when updated."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ContainerDescriptions.", 
                "summary": "Creates a ContainerType.", 
                "operationId": "createContainerType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageContainerType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ContainerTypes.", 
                "summary": "Retrieves all ContainerType with specified paging, sorting and filtering parameters.", 
                "operationId": "listContainerTypes"
            }
        }, 
        "/api/resources/images/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ImageState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ImageState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ImageState"
                        }, 
                        "description": "The ImageState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ImageStates.", 
                "summary": "Updates a ImageState.", 
                "operationId": "updateImageState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ImageState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ImageState"
                        }, 
                        "description": "The patch of the ImageState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ImageStates.", 
                "summary": "Patches a ImageState.", 
                "operationId": "patchImageState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ImageState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ImageStates.", 
                "summary": "Deletes a ImageState.", 
                "operationId": "deleteImageState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ImageState", 
                        "schema": {
                            "$ref": "#/definitions/ImageState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ImageState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ImageState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ImageState.", 
                "summary": "Retrieves a ImageState.", 
                "operationId": "getImageState"
            }
        }, 
        "/api/config/endpoints/resources/endpoints/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the EndpointState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the EndpointState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/EndpointState"
                        }, 
                        "description": "The EndpointState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update EndpointState.", 
                "summary": "Updates a EndpointState.", 
                "operationId": "updateEndpointState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the EndpointState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/EndpointState"
                        }, 
                        "description": "The patch of the EndpointState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ContainerStates.", 
                "summary": "Patches a EndpointState.", 
                "operationId": "patchEndpointState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a EndpointState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete EndpointStates.", 
                "summary": "Deletes a EndpointState.", 
                "operationId": "deleteEndpointState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the EndpointState", 
                        "schema": {
                            "$ref": "#/definitions/EndpointState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no EndpointState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create EndpointStates.", 
                "summary": "Retrieves a EndpointState.", 
                "operationId": "getEndpointState"
            }
        }, 
        "/api/groups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/labelledReference"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "name": "tenantid", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list Tenant info.", 
                "summary": "Retrieves all Business Group and Tenant infos from the identity-service and transformed in group property.", 
                "operationId": "GroupTenantController.list"
            }
        }, 
        "/api/callbacks/catalog/resources/types/{resourceTypeId}": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "resourceTypeId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "description": "List of resources to be fetched for.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Retrieves collection of resources by resource type."
            }
        }, 
        "/api/callbacks/composition/componentdeallocator/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Deallocation of component initiated."
                    }
                }, 
                "operationId": "CompositionCallbackRequestController.deallocateComponent", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/compositionProviderRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Accepts a new request to deallocate a Container component from composition service."
            }
        }, 
        "/api/resources/container-network-descriptions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkDescription"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ContainerNetworkDescription"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can create ContainerNetworkDescriptions.", 
                "summary": "Creates a ContainerNetworkDescription.", 
                "operationId": "createContainerNetworkDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container developers, Container admins, and System admins can list ContainerNetworkDescriptions.", 
                "summary": "Retrieves all ContainerNetworkDescriptions.", 
                "operationId": "listContainerNetworkDescription"
            }
        }, 
        "/api/resources/endpoints/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the EndpointState", 
                        "schema": {
                            "$ref": "#/definitions/EndpointState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no EndpointState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create EndpointStates.", 
                "summary": "Retrieves a EndpointState.", 
                "operationId": "getEndpointState"
            }
        }, 
        "/api/config/compute-profiles": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ComputeProfile"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeProfile"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create ComputeProfiles.", 
                "summary": "Creates a ComputeProfile.", 
                "operationId": "createComputeProfile"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list ComputeProfiles.", 
                "summary": "Retrieves all ComputeProfiles.", 
                "operationId": "listComputeProfile"
            }
        }, 
        "/api/config/registries/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the RegistryState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the RegistryState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/RegistryState"
                        }, 
                        "description": "The RegistryState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update RegistryStates.", 
                "summary": "Updates a RegistryState.", 
                "operationId": "updateRegistryState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the RegistryState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/RegistryState"
                        }, 
                        "description": "The patch of the RegistryState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch RegistryStates.", 
                "summary": "Patches a RegistryState.", 
                "operationId": "patchRegistryState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a RegistryState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete RegistryStates.", 
                "summary": "Deletes a RegistryState.", 
                "operationId": "deleteRegistryState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the RegistryState", 
                        "schema": {
                            "$ref": "#/definitions/RegistryState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no RegistryState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the RegistryState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve RegistryStates.", 
                "summary": "Retrieves a RegistryState.", 
                "operationId": "getRegistryState"
            }
        }, 
        "/api/resources/container-networks/{id}/manage": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the CatalogResource", 
                        "schema": {
                            "$ref": "#/definitions/catalogResource"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no CatalogResourceItem with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "", 
                "summary": "Retrieves a catalog item related to the container item.", 
                "operationId": "getCatalogResourceItem"
            }
        }, 
        "/api/resources/endpoints": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list EndpointStates.", 
                "summary": "Retrieves all EndpointStates.", 
                "operationId": "listEndpointState"
            }
        }, 
        "/api/resources/compute-network-descriptions/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ComputeNetworkDescription is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeNetworkDescription"
                        }, 
                        "description": "The ComputeNetworkDescription to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can update ComputeNetworkDescriptions.", 
                "summary": "Updates a ComputeNetworkDescription.", 
                "operationId": "updateComputeNetworkDescription"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeNetworkDescription"
                        }, 
                        "description": "The patch of the ComputeDescription", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can patch ComputeNetworkDescriptions.", 
                "summary": "Patches a ComputeNetworkDescription.", 
                "operationId": "patchComputeNetworkDescription"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ComputeNetworkDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can delete ComputeNetworkDescriptions.", 
                "summary": "Deletes a ComputeNetworkDescription.", 
                "operationId": "deleteComputeNetworkDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ComputeNetworkDescription", 
                        "schema": {
                            "$ref": "#/definitions/ComputeNetworkDescription"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ComputeNetworkDescription with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ComputeNetworkDescription", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Compute admins, and System admins can retrieve ComputeNetworkDescriptions.", 
                "summary": "Retrieves a ComputeNetworkDescription.", 
                "operationId": "getComputeNetworkDescription"
            }
        }, 
        "/api/resources/composite-templates": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned when importing of the YAML is successful with the Composite Description relative URI in the <code>location</code> header of the response"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "string"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/HttpEntityString"
                        }, 
                        "description": "YAML content to import as a Composite Description", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "import"
                ], 
                "description": "Solution users, System admins, Container admins, and Container architects can import a CompositeDescription.", 
                "summary": "Imports the YAML content as a Composite Description.", 
                "operationId": "importCompositeDescription"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when exporting the composite description is successful"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the CompositeDescription", 
                        "required": true, 
                        "type": "string", 
                        "name": "selfLink", 
                        "in": "query"
                    }, 
                    {
                        "description": "The format of the CompositeDescription exported content, as Docker Compose (DOCKER) or Composite Template (COMPOSITE)", 
                        "default": "COMPOSITE", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "name": ""
                    }
                ], 
                "tags": [
                    "export"
                ], 
                "description": "Solution users, System admins, Container admins, and Container architects can export a CompositeDescription.", 
                "summary": "Exports the Composite Description in YAML format.", 
                "operationId": "exportCompositeDescription"
            }
        }, 
        "/api/resources/pools/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "'OK' is returned when the ResourcePoolState is updated.", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ResourcePoolState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ResourcePoolState"
                        }, 
                        "description": "The ResourcePoolState to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "update"
                ], 
                "description": "Only Solution users, Container admins, and System admins can update ResourcePoolStates.", 
                "summary": "Updates a ResourcePoolState.", 
                "operationId": "updateResourcePoolState"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ResourcePoolState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ResourcePoolState"
                        }, 
                        "description": "The patch of the ResourcePoolState", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "patch"
                ], 
                "description": "Only Solution users, Container admins, and System admins can patch ResourcePoolStates.", 
                "summary": "Patches a ResourcePoolState.", 
                "operationId": "patchResourcePoolState"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of a ResourcePoolState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "delete"
                ], 
                "description": "Only Solution users, Container admins, and System admins can delete ResourcePoolStates.", 
                "summary": "Deletes a ResourcePoolState.", 
                "operationId": "deleteResourcePoolState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK with the ResourcePoolState", 
                        "schema": {
                            "$ref": "#/definitions/ResourcePoolState"
                        }
                    }, 
                    "404": {
                        "description": "'Not Found' if no ResourcePoolState with provided <code>id</code>"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the ResourcePoolState", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve ResourcePoolStates.", 
                "summary": "Retrieves a ResourcePoolState.", 
                "operationId": "getResourcePoolState"
            }
        }, 
        "/api/resources/notifications": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/NotificationsState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "get"
                ], 
                "description": "Only Solution users, Container admins, and System admins can retrieve NotificationsStates.", 
                "summary": "Retrieves request and eventlog notifications.", 
                "operationId": "getNotifications"
            }
        }, 
        "/api/resources/group-placements": {
            "post": {
                "responses": {
                    "201": {
                        "description": "'Created' is returned for the new state with the state url in the <code>location</code> header of the response;"
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/GroupResourcePlacementState"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/GroupResourcePlacementState"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "create"
                ], 
                "description": "Only Solution users, Container admins, and System admins can create GroupResourcePlacementStates.", 
                "summary": "Creates a GroupResourcePlacementState.", 
                "operationId": "createGroupResourcePlacementState"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/pagedEntities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "list"
                ], 
                "description": "Only Solution users, Container admins, and System admins can list GroupResourcePlacementStates.", 
                "summary": "Retrieves all GroupResourcePlacementStates.", 
                "operationId": "listGroupResourcePlacementState"
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "tags": [
        {
            "name": "clone"
        }, 
        {
            "name": "create"
        }, 
        {
            "name": "delete"
        }, 
        {
            "name": "export"
        }, 
        {
            "name": "get"
        }, 
        {
            "name": "import"
        }, 
        {
            "name": "list"
        }, 
        {
            "name": "patch"
        }, 
        {
            "name": "post"
        }, 
        {
            "name": "put"
        }, 
        {
            "name": "update"
        }, 
        {
            "name": "validate"
        }
    ], 
    "basePath": "/container-service", 
    "definitions": {
        "labelledReference": {
            "xml": {
                "name": "labelledReference"
            }, 
            "type": "object", 
            "properties": {
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "ConstantValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/literal"
                        }
                    }
                }
            ]
        }, 
        "GreaterThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ComputeNetworkDescription": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "networkProfileLink": {
                    "type": "string"
                }, 
                "assignment": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "networkType": {
                    "enum": [
                        "PUBLIC", 
                        "ISOLATED"
                    ], 
                    "type": "string"
                }, 
                "securityGroupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "constraints": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Constraint"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "LayoutRow": {
            "type": "object", 
            "properties": {
                "items": {
                    "xml": {
                        "wrapped": true, 
                        "name": "item"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutCell"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "NotEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "compositionProviderRequest": {
            "xml": {
                "name": "compositionProviderRequest"
            }, 
            "type": "object", 
            "properties": {
                "callbackServiceId": {
                    "type": "string"
                }, 
                "blueprintRequestId": {
                    "type": "string"
                }, 
                "userContext": {
                    "$ref": "#/definitions/requestUserContext"
                }, 
                "requestType": {
                    "enum": [
                        "PROVISION", 
                        "UPDATE", 
                        "ALLOCATE", 
                        "DEALLOCATE"
                    ], 
                    "type": "string"
                }, 
                "targetResourceId": {
                    "type": "string"
                }, 
                "blueprintName": {
                    "type": "string"
                }, 
                "callbackAdditionalUrlPath": {
                    "type": "string"
                }, 
                "rootCafeRequestId": {
                    "type": "string"
                }, 
                "componentInfo": {
                    "$ref": "#/definitions/componentRequestInfo"
                }, 
                "requestId": {
                    "type": "string"
                }, 
                "blueprintId": {
                    "type": "string"
                }, 
                "rootCafeDeploymentId": {
                    "type": "string"
                }
            }
        }, 
        "complexLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "complexLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's class."
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component type."
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The type filter for this literal."
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component."
                        }, 
                        "values": {
                            "description": "Map of values, keyed by the field ids of some complex type.", 
                            "$ref": "#/definitions/literalMap"
                        }
                    }, 
                    "description": "A complex value composed of multiple values keyed by the field ids of some complex type."
                }
            ]
        }, 
        "ParameterMapping": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "loadBalancerPool": {
            "xml": {
                "name": "loadBalancerPool"
            }, 
            "type": "object", 
            "properties": {
                "protocol": {
                    "type": "string"
                }, 
                "connectionLimit": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "acceleration": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "servicePortId": {
                    "type": "string"
                }, 
                "connectionRate": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "persistenceMethod": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "persistenceExpiration": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memberMinConnections": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "monitorPort": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "uniqueMonitorId": {
                    "type": "string"
                }, 
                "monitorIds": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string"
                }, 
                "persistenceCookieName": {
                    "type": "string"
                }, 
                "members": {
                    "items": {
                        "$ref": "#/definitions/loadBalancerMember"
                    }, 
                    "type": "array"
                }, 
                "algorithmParameter": {
                    "type": "string"
                }, 
                "transparent": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "persistenceCookieMode": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "algorithm": {
                    "type": "string"
                }, 
                "healthCheckProtocol": {
                    "type": "string"
                }, 
                "memberMaxConnections": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memberPort": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "ContainerState": {
            "type": "object", 
            "properties": {
                "hostReference": {
                    "type": "string"
                }, 
                "status": {
                    "type": "string"
                }, 
                "links": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "image": {
                    "type": "string"
                }, 
                "storageLimit": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "names": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "volumeDriver": {
                    "type": "string"
                }, 
                "cpuShares": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "networks": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ServiceNetwork"
                    }, 
                    "type": "object"
                }, 
                "isDeleted": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "system": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "type": "string"
                }, 
                "adapterManagementReference": {
                    "type": "string"
                }, 
                "compositeComponentLink": {
                    "type": "string"
                }, 
                "env": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "groupResourcePlacementLink": {
                    "type": "string"
                }, 
                "extraHosts": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "started": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "memoryLimit": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "address": {
                    "type": "string"
                }, 
                "descriptionLink": {
                    "type": "string"
                }, 
                "powerState": {
                    "enum": [
                        "UNKNOWN", 
                        "PROVISIONING", 
                        "RUNNING", 
                        "PAUSED", 
                        "STOPPED", 
                        "RETIRED", 
                        "ERROR"
                    ], 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "created": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "command": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "volumesFrom": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "volumes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "attributes": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "parentLink": {
                    "type": "string"
                }, 
                "ports": {
                    "items": {
                        "$ref": "#/definitions/PortBinding"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "SubsetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "moneyRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRange"
                    }, 
                    "type": "object", 
                    "properties": {
                        "maxValue": {
                            "type": "number", 
                            "description": "The upper limit of the range.", 
                            "format": "double"
                        }, 
                        "minValue": {
                            "type": "number", 
                            "description": "The lower limit of the range.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a range of money values, between some defined minimums and maximums."
                }
            ]
        }, 
        "EndsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "VisibilityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "deploymentNetworkProfile": {
            "xml": {
                "name": "deploymentNetworkProfile"
            }, 
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "subnetLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "isolatedSubnetCIDRPrefix": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "isolationNetworkCIDRAllocationLink": {
                    "type": "string"
                }, 
                "isolationNetworkCIDR": {
                    "type": "string"
                }, 
                "isolationType": {
                    "enum": [
                        "NONE", 
                        "SUBNET", 
                        "SECURITY_GROUP"
                    ], 
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "isolationNetworkLink": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "TopicTaskInfo": {
            "type": "object", 
            "properties": {
                "task": {
                    "type": "string"
                }, 
                "substage": {
                    "type": "string"
                }, 
                "stage": {
                    "type": "string"
                }
            }
        }, 
        "LessThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ParameterMappingCollection": {
            "type": "object", 
            "properties": {
                "params": {
                    "xml": {
                        "wrapped": true, 
                        "name": "param"
                    }, 
                    "items": {
                        "$ref": "#/definitions/ParameterMapping"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "layout": {
            "xml": {
                "name": "layout"
            }, 
            "type": "object", 
            "properties": {
                "pages": {
                    "xml": {
                        "wrapped": true, 
                        "name": "page"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutPage"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "DisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ProviderRequestExtension": {
            "type": "object", 
            "properties": {
                "extData": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "ServiceStatLogHistogram": {
            "type": "object", 
            "properties": {
                "bins": {
                    "items": {
                        "type": "integer", 
                        "format": "int64"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ElasticPlacementZoneState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "resourcePoolLink": {
                    "type": "string"
                }, 
                "tagLinksToMatch": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "placementPolicy": {
                    "enum": [
                        "DEFAULT", 
                        "SPREAD", 
                        "BINPACK"
                    ], 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "StaticSchema": {
            "allOf": [
                {
                    "$ref": "#/definitions/SchemaReference"
                }, 
                {
                    "required": [
                        "schema"
                    ], 
                    "type": "object", 
                    "properties": {
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }
            ]
        }, 
        "TagAssignmentRequest": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tagsToUnassign": {
                    "items": {
                        "$ref": "#/definitions/KeyValue"
                    }, 
                    "type": "array"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "resourceLink": {
                    "type": "string"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "tagLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tagsToAssign": {
                    "items": {
                        "$ref": "#/definitions/KeyValue"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ConfigurationState": {
            "type": "object", 
            "properties": {
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "value": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "key": {
                    "type": "string"
                }
            }
        }, 
        "GenericTenantedServiceDocument": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "unmappedFields": {
                    "additionalProperties": {
                        "type": "object"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "ApplicationProfile": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "networkObject"
                    }, 
                    "type": "object", 
                    "properties": {
                        "cookieName": {
                            "type": "string"
                        }, 
                        "Expiry": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "insertXForwardedFor": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "serverSslEnabled": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "cookieMode": {
                            "type": "string"
                        }, 
                        "template": {
                            "type": "string"
                        }, 
                        "sslPassthrough": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "method": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "KeyValue": {
            "type": "object", 
            "properties": {
                "value": {
                    "type": "string"
                }, 
                "key": {
                    "type": "string"
                }
            }
        }, 
        "money": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "money"
                    }, 
                    "type": "object", 
                    "properties": {
                        "amount": {
                            "type": "number", 
                            "description": "The amount associated with this value (with no specific currency).", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a single, precise monetary value."
                }
            ]
        }, 
        "OrClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "SchemaReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ServiceErrorResponse": {
            "type": "object", 
            "properties": {
                "documentKind": {
                    "type": "string"
                }, 
                "stackTrace": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "message": {
                    "type": "string"
                }, 
                "errorCode": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "statusCode": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "InstanceTypeDescription": {
            "type": "object", 
            "properties": {
                "memoryMb": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "cpuCount": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "instanceType": {
                    "type": "string"
                }, 
                "diskSizeMb": {
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "ComponentBinding": {
            "type": "object", 
            "properties": {
                "componentName": {
                    "type": "string"
                }, 
                "bindings": {
                    "items": {
                        "$ref": "#/definitions/Binding"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "UniqueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "IpamConfig": {
            "type": "object", 
            "properties": {
                "subnet": {
                    "type": "string"
                }, 
                "ipRange": {
                    "type": "string"
                }, 
                "auxAddresses": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "gateway": {
                    "type": "string"
                }
            }
        }, 
        "ExtensionForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "extensionId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "extensionPointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ServiceDocumentDeleteTaskState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "taskSubStage": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "deleteDocumentKind": {
                    "type": "string"
                }, 
                "requestTrackerLink": {
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "serviceTaskCallback": {
                    "$ref": "#/definitions/ServiceTaskCallback"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "taskInfo": {
                    "$ref": "#/definitions/TaskState"
                }
            }
        }, 
        "EndpointState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "authCredentialsLink": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "resourcePoolLink": {
                    "type": "string"
                }, 
                "endpointProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpointType": {
                    "type": "string"
                }, 
                "computeDescriptionLink": {
                    "type": "string"
                }, 
                "computeLink": {
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "SslTrustedCertificateState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "validSince": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "certificate": {
                    "type": "string"
                }, 
                "validTo": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "commonName": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "resourceLink": {
                    "type": "string"
                }, 
                "fingerprint": {
                    "type": "string"
                }, 
                "issuerName": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "serial": {
                    "type": "string"
                }, 
                "subscriptionLink": {
                    "type": "string"
                }
            }
        }, 
        "LayoutField": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutFlowElement"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "extensionRendererContext": {
                            "$ref": "#/definitions/ExtensionRendererContext"
                        }, 
                        "description": {
                            "type": "string"
                        }, 
                        "dataType": {
                            "$ref": "#/definitions/DataType"
                        }, 
                        "permissibleValues": {
                            "$ref": "#/definitions/PermissibleValueList"
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "displayAdvice": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "TEXTBOX", 
                                "HYPERLINK", 
                                "EMAIL", 
                                "TEXTAREA", 
                                "DATE_TIME_PICKER", 
                                "CHECKBOX", 
                                "YES_NO", 
                                "CHECKBOX_GROUP", 
                                "DUAL_LIST", 
                                "RADIO_GROUP", 
                                "DROPDOWN", 
                                "LIST", 
                                "SEARCHER", 
                                "TREE", 
                                "FORM", 
                                "IMAGE", 
                                "SLIDER", 
                                "DATA_TABLE", 
                                "VALUE_PICKER"
                            ], 
                            "type": "string"
                        }, 
                        "orderIndex": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "isMultiValued": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "labelSize": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "columns": {
                            "xml": {
                                "wrapped": true, 
                                "name": "column"
                            }, 
                            "items": {
                                "$ref": "#/definitions/LayoutField"
                            }, 
                            "type": "array"
                        }, 
                        "detailLayout": {
                            "$ref": "#/definitions/LayoutReference"
                        }
                    }
                }
            ]
        }, 
        "ProviderBinding": {
            "type": "object", 
            "properties": {
                "bindingId": {
                    "type": "string"
                }, 
                "providerRef": {
                    "$ref": "#/definitions/labelledReference"
                }
            }
        }, 
        "entityRef": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRef"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier of the type or category to which the referenced entity belongs."
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The unique identifier of the referenced entity, encoded as a string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The durable identifier of a component registered in the suite component registry that owns and manages the referenced entity. This can be omitted if this component can be derived from the context within which this entity reference occurs. It must be specified, if no such context exists or if the component differs from that defined by the context."
                        }
                    }, 
                    "description": "Represents a reference to an entity defined somewhere in the suite."
                }
            ]
        }, 
        "securityPolicy": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "securityPolicy"
                    }, 
                    "type": "object", 
                    "properties": {
                        "securityPolicyTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "internal": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }
                    }
                }
            ]
        }, 
        "CallbackEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PropertyMapping": {
            "type": "object", 
            "properties": {
                "mappings": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "consumerResourceOperation": {
            "xml": {
                "name": "consumerResourceOperation"
            }, 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "extensionId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "iconId": {
                    "type": "string"
                }, 
                "hasForm": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "bindingId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "formScale": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "SMALL", 
                        "BIG"
                    ], 
                    "type": "string"
                }, 
                "type": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "ACTION", 
                        "EXTENSION"
                    ], 
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "providerTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "loadBalancer": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "loadBalancer"
                    }, 
                    "type": "object", 
                    "properties": {
                        "vipNicIndex": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "tierNetwork": {
                            "type": "string"
                        }, 
                        "virtualIps": {
                            "items": {
                                "$ref": "#/definitions/loadBalancerVirtualIp"
                            }, 
                            "type": "array"
                        }, 
                        "tierNicIndex": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "vipNetwork": {
                            "type": "string"
                        }, 
                        "loggingLevel": {
                            "type": "string"
                        }, 
                        "pools": {
                            "items": {
                                "$ref": "#/definitions/loadBalancerPool"
                            }, 
                            "type": "array"
                        }, 
                        "loadBalancerTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "monitors": {
                            "items": {
                                "$ref": "#/definitions/loadBalancerMonitor"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "MaxCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ElementState": {
            "type": "object", 
            "properties": {
                "facets": {
                    "xml": {
                        "wrapped": true, 
                        "name": "facet"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }, 
                    "type": "array"
                }, 
                "dependencies": {
                    "xml": {
                        "wrapped": true, 
                        "name": "dependency"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "type": "string"
                    }
                }
            }
        }, 
        "ServiceTaskCallback": {
            "type": "object", 
            "properties": {
                "subStageComplete": {
                    "type": "object"
                }, 
                "taskStageFailed": {
                    "enum": [
                        "CREATED", 
                        "STARTED", 
                        "FINISHED", 
                        "FAILED", 
                        "CANCELLED"
                    ], 
                    "type": "string"
                }, 
                "serviceSelfLink": {
                    "type": "string"
                }, 
                "subStageFailed": {
                    "type": "object"
                }, 
                "taskStageComplete": {
                    "enum": [
                        "CREATED", 
                        "STARTED", 
                        "FINISHED", 
                        "FAILED", 
                        "CANCELLED"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "StorageItem": {
            "type": "object", 
            "properties": {
                "diskProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string"
                }, 
                "defaultDiskItem": {
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "Clause": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "Binding": {
            "type": "object", 
            "properties": {
                "originalFieldExpression": {
                    "type": "string"
                }, 
                "targetFieldPath": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "placeholder": {
                    "$ref": "#/definitions/BindingPlaceholder"
                }
            }
        }, 
        "ComplexEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "values": {
                            "additionalProperties": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "object"
                        }
                    }
                }
            ]
        }, 
        "catalogResource": {
            "xml": {
                "name": "catalogResource"
            }, 
            "type": "object", 
            "properties": {
                "operations": {
                    "items": {
                        "$ref": "#/definitions/consumerResourceOperation"
                    }, 
                    "type": "array"
                }, 
                "destroyDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "pendingRequests": {
                    "items": {
                        "$ref": "#/definitions/resourceActionRequest"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "type": "string"
                }, 
                "totalCost": {
                    "$ref": "#/definitions/literal"
                }, 
                "parentResourceRef": {
                    "$ref": "#/definitions/labelledReference"
                }, 
                "hasChildren": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "iconId": {
                    "type": "string"
                }, 
                "forms": {
                    "$ref": "#/definitions/ResourceForms"
                }, 
                "providerBinding": {
                    "$ref": "#/definitions/ProviderBinding"
                }, 
                "requestId": {
                    "type": "string"
                }, 
                "costToDate": {
                    "$ref": "#/definitions/literal"
                }, 
                "lease": {
                    "$ref": "#/definitions/ResourceLease"
                }, 
                "status": {
                    "enum": [
                        "ACTIVE", 
                        "PENDING_APPROVAL", 
                        "REJECTED", 
                        "DELETED"
                    ], 
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "lastUpdated": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "dateCreated": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "catalogItem": {
                    "$ref": "#/definitions/labelledReference"
                }, 
                "leaseForDisplay": {
                    "$ref": "#/definitions/timeSpan"
                }, 
                "owners": {
                    "items": {
                        "$ref": "#/definitions/catalogPrincipal"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string"
                }, 
                "hasCosts": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "resourceData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "expenseMonthToDate": {
                    "$ref": "#/definitions/CostToDate"
                }, 
                "costs": {
                    "$ref": "#/definitions/ResourceCosts"
                }, 
                "resourceTypeRef": {
                    "$ref": "#/definitions/labelledReference"
                }, 
                "organization": {
                    "$ref": "#/definitions/catalogOrganizationReference"
                }, 
                "hasLease": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "requestState": {
                    "enum": [
                        "UNSUBMITTED", 
                        "SUBMITTED", 
                        "DELETED", 
                        "PENDING_PRE_APPROVAL", 
                        "PRE_APPROVAL_SEND_ERROR", 
                        "PRE_APPROVED", 
                        "PRE_REJECTED", 
                        "PROVIDER_DELETION_ERROR", 
                        "IN_PROGRESS", 
                        "PROVIDER_SEND_ERROR", 
                        "PROVIDER_COMPLETED", 
                        "PROVIDER_FAILED", 
                        "PENDING_POST_APPROVAL", 
                        "POST_APPROVAL_SEND_ERROR", 
                        "POST_APPROVED", 
                        "POST_REJECTION_RECEIVED", 
                        "ROLLBACK_ERROR", 
                        "POST_REJECTED", 
                        "SUCCESSFUL", 
                        "PARTIALLY_SUCCESSFUL", 
                        "FAILED"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "StartsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LessThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageContainerType": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/ContainerType"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "LoadBalancerPool": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "loadBalancerPool"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "SubnetState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "networkLink": {
                    "type": "string"
                }, 
                "domain": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "gatewayAddress": {
                    "type": "string"
                }, 
                "endpointLink": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "zoneId": {
                    "type": "string"
                }, 
                "dnsServerAddresses": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "supportPublicIpAddress": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "dnsSearchDomains": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "subnetCIDR": {
                    "type": "string"
                }, 
                "defaultForZone": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "networkBacking": {
            "xml": {
                "name": "networkBacking"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "computeResourceName": {
                    "type": "string"
                }, 
                "computeResourceNetworkId": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "computeResourceId": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "GroupResourcePlacementState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "resourceQuotaPerResourceDesc": {
                    "additionalProperties": {
                        "type": "integer", 
                        "format": "int64"
                    }, 
                    "type": "object"
                }, 
                "cpuShares": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "resourcePoolLink": {
                    "type": "string"
                }, 
                "resourceType": {
                    "type": "string"
                }, 
                "storageLimit": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "availableInstancesCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "priority": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memoryLimit": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "availableMemory": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "allocatedInstancesCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "maxNumberInstances": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "deploymentPolicyLink": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "memoryQuotaPerResourceDesc": {
                    "additionalProperties": {
                        "type": "integer", 
                        "format": "int64"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "LayoutFlow": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "parts": {
                            "xml": {
                                "wrapped": true, 
                                "name": "part"
                            }, 
                            "items": {
                                "$ref": "#/definitions/LayoutFlowElement"
                            }, 
                            "type": "array"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ContextPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NetworkInterfaceState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "networkLink": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "deviceIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "securityGroupLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "endpointLink": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "address": {
                    "type": "string"
                }, 
                "networkInterfaceDescriptionLink": {
                    "type": "string"
                }, 
                "subnetLink": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "MaxLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "loadBalancerVirtualIp": {
            "xml": {
                "name": "loadBalancerVirtualIp"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "description": {
                    "type": "string"
                }, 
                "poolId": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "address": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "loadBalancerMonitor": {
            "xml": {
                "name": "loadBalancerMonitor"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "newEntity": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "receive": {
                    "type": "string"
                }, 
                "interval": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "send": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "monitorPath": {
                    "type": "string"
                }, 
                "timeout": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "maxRetries": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "method": {
                    "type": "string"
                }
            }
        }, 
        "natRule": {
            "xml": {
                "name": "natRule"
            }, 
            "type": "object", 
            "properties": {
                "protocol": {
                    "type": "string"
                }, 
                "peerInterfaceIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "tag": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "edgeId": {
                    "type": "string"
                }, 
                "translatedAddress": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "type": {
                    "type": "string"
                }, 
                "componentId": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "componentName": {
                    "type": "string"
                }, 
                "originalAddress": {
                    "type": "string"
                }, 
                "targetType": {
                    "type": "string"
                }, 
                "originalPort": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "userDefined": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "machineId": {
                    "type": "string"
                }, 
                "networkInterfaceId": {
                    "type": "string"
                }, 
                "enabled": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "interfaceIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "translatedPort": {
                    "type": "string"
                }, 
                "action": {
                    "type": "string"
                }, 
                "order": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "RefreshOnChangeBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SkipExportBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutCell": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "size": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "FixedValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "value": {
            "xml": {
                "name": "value"
            }, 
            "type": "object", 
            "properties": {
                "label": {
                    "type": "string"
                }, 
                "underlyingValue": {
                    "$ref": "#/definitions/literal"
                }
            }
        }, 
        "CoalesceEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "moneyRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "cost": {
                            "description": "The cost (including optional currency code).", 
                            "$ref": "#/definitions/literal"
                        }
                    }, 
                    "description": "A base type for literals representing a rate of some monetary value over a specified basis. E.g. $5 / hour; $1-2 / GB."
                }
            ]
        }, 
        "networkObject": {
            "xml": {
                "name": "networkObject"
            }, 
            "type": "object", 
            "properties": {
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "ImageEnumerationTaskState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "taskSubStage": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "enumerationAction": {
                    "enum": [
                        "START", 
                        "STOP", 
                        "REFRESH"
                    ], 
                    "type": "string"
                }, 
                "regionId": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpointType": {
                    "type": "string"
                }, 
                "requestTrackerLink": {
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "endpointLink": {
                    "type": "string"
                }, 
                "serviceTaskCallback": {
                    "$ref": "#/definitions/ServiceTaskCallback"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "taskInfo": {
                    "$ref": "#/definitions/TaskState"
                }
            }
        }, 
        "MoneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "LoadBalancerVirtualIp": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "loadBalancerVirtualIp"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "Constraint": {
            "discriminator": "type", 
            "required": [
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }
            }
        }, 
        "SupersetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "network": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "network"
                    }, 
                    "type": "object", 
                    "properties": {
                        "natRules": {
                            "items": {
                                "$ref": "#/definitions/natRule"
                            }, 
                            "type": "array"
                        }, 
                        "networkProfileType": {
                            "enum": [
                                "NONE", 
                                "PRIVATE", 
                                "NAT", 
                                "ROUTED", 
                                "EXTERNAL"
                            ], 
                            "type": "string"
                        }, 
                        "networkTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "networkBackings": {
                            "items": {
                                "$ref": "#/definitions/networkBacking"
                            }, 
                            "type": "array"
                        }, 
                        "machineIdCollection": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "ServiceNetwork": {
            "type": "object", 
            "properties": {
                "ipv4_address": {
                    "type": "string"
                }, 
                "ipv6_address": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "aliases": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ContainerRequestStatus": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "component": {
                    "type": "string"
                }, 
                "resourceLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "subStage": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestProgressByComponent": {
                    "additionalProperties": {
                        "additionalProperties": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "type": "object"
                    }, 
                    "type": "object"
                }, 
                "componentNames": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "phase": {
                    "type": "string"
                }, 
                "progress": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "eventLogLink": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "taskInfo": {
                    "$ref": "#/definitions/TaskState"
                }
            }
        }, 
        "StaticForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "required": [
                        "layout"
                    ], 
                    "type": "object", 
                    "properties": {
                        "layout": {
                            "$ref": "#/definitions/layout"
                        }
                    }
                }
            ]
        }, 
        "ComplexDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }
            ]
        }, 
        "ProfileState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "networkProfileLink": {
                    "type": "string"
                }, 
                "storageProfileLink": {
                    "type": "string"
                }, 
                "endpointLink": {
                    "type": "string"
                }, 
                "misc": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PropertyMapping"
                    }, 
                    "type": "object"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpointType": {
                    "type": "string"
                }, 
                "computeProfileLink": {
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "componentRequestInfo": {
            "xml": {
                "name": "componentRequestInfo"
            }, 
            "type": "object", 
            "properties": {
                "previousComponentData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "requestInputData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "resourceId": {
                    "type": "string"
                }, 
                "componentSchema": {
                    "$ref": "#/definitions/Schema"
                }, 
                "componentData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "componentTypeId": {
                    "type": "string"
                }, 
                "componentId": {
                    "type": "string"
                }
            }
        }, 
        "ExternalFormReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "formId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "Link": {
            "type": "object", 
            "properties": {
                "href": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "rel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "PermissibleValueList": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "customAllowed": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "CompositeDescription": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "status": {
                    "type": "string"
                }, 
                "parentDescriptionLink": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "descriptionLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "lastPublished": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "bindings": {
                    "items": {
                        "$ref": "#/definitions/ComponentBinding"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "Evaluator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ConstantClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/booleanLiteral"
                        }
                    }
                }
            ]
        }, 
        "literalMap": {
            "xml": {
                "name": "literalMap"
            }, 
            "type": "object", 
            "properties": {
                "entries": {
                    "xml": {
                        "name": "entry"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LiteralMapEntry"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Equivalent of java.util.Map"
        }, 
        "ExtensionRendererContext": {
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "extensionId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "RegistryState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "protocolType": {
                    "enum": [
                        "SSH", 
                        "HTTP"
                    ], 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpointType": {
                    "type": "string"
                }, 
                "disabled": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "version": {
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "address": {
                    "type": "string"
                }, 
                "authCredentialsLink": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "ComputeImageDescription": {
            "type": "object", 
            "properties": {
                "image": {
                    "type": "string"
                }, 
                "osFamily": {
                    "enum": [
                        "WINDOWS", 
                        "LINUX", 
                        "MACOS", 
                        "OTHER"
                    ], 
                    "type": "string"
                }, 
                "imageLink": {
                    "type": "string"
                }
            }
        }, 
        "Ipam": {
            "type": "object", 
            "properties": {
                "config": {
                    "items": {
                        "$ref": "#/definitions/IpamConfig"
                    }, 
                    "type": "array"
                }, 
                "driver": {
                    "type": "string"
                }
            }
        }, 
        "MinimumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "TagState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "value": {
                    "type": "string"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "key": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "ComputeProfile": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "imageMapping": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ComputeImageDescription"
                    }, 
                    "type": "object"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "instanceTypeMapping": {
                    "additionalProperties": {
                        "$ref": "#/definitions/InstanceTypeDescription"
                    }, 
                    "type": "object"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "allocationConstraint": {
            "xml": {
                "name": "allocationConstraint"
            }, 
            "type": "object", 
            "properties": {
                "filter": {
                    "type": "string"
                }
            }
        }, 
        "StaticPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "values": {
                            "xml": {
                                "name": "value"
                            }, 
                            "items": {
                                "$ref": "#/definitions/value"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "ResponseEntity": {
            "type": "object", 
            "properties": {
                "body": {
                    "type": "object"
                }, 
                "headers": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object"
                }, 
                "statusCode": {
                    "enum": [
                        "CONTINUE", 
                        "SWITCHING_PROTOCOLS", 
                        "PROCESSING", 
                        "CHECKPOINT", 
                        "OK", 
                        "CREATED", 
                        "ACCEPTED", 
                        "NON_AUTHORITATIVE_INFORMATION", 
                        "NO_CONTENT", 
                        "RESET_CONTENT", 
                        "PARTIAL_CONTENT", 
                        "MULTI_STATUS", 
                        "ALREADY_REPORTED", 
                        "IM_USED", 
                        "MULTIPLE_CHOICES", 
                        "MOVED_PERMANENTLY", 
                        "FOUND", 
                        "MOVED_TEMPORARILY", 
                        "SEE_OTHER", 
                        "NOT_MODIFIED", 
                        "USE_PROXY", 
                        "TEMPORARY_REDIRECT", 
                        "PERMANENT_REDIRECT", 
                        "BAD_REQUEST", 
                        "UNAUTHORIZED", 
                        "PAYMENT_REQUIRED", 
                        "FORBIDDEN", 
                        "NOT_FOUND", 
                        "METHOD_NOT_ALLOWED", 
                        "NOT_ACCEPTABLE", 
                        "PROXY_AUTHENTICATION_REQUIRED", 
                        "REQUEST_TIMEOUT", 
                        "CONFLICT", 
                        "GONE", 
                        "LENGTH_REQUIRED", 
                        "PRECONDITION_FAILED", 
                        "PAYLOAD_TOO_LARGE", 
                        "REQUEST_ENTITY_TOO_LARGE", 
                        "URI_TOO_LONG", 
                        "REQUEST_URI_TOO_LONG", 
                        "UNSUPPORTED_MEDIA_TYPE", 
                        "REQUESTED_RANGE_NOT_SATISFIABLE", 
                        "EXPECTATION_FAILED", 
                        "I_AM_A_TEAPOT", 
                        "INSUFFICIENT_SPACE_ON_RESOURCE", 
                        "METHOD_FAILURE", 
                        "DESTINATION_LOCKED", 
                        "UNPROCESSABLE_ENTITY", 
                        "LOCKED", 
                        "FAILED_DEPENDENCY", 
                        "UPGRADE_REQUIRED", 
                        "PRECONDITION_REQUIRED", 
                        "TOO_MANY_REQUESTS", 
                        "REQUEST_HEADER_FIELDS_TOO_LARGE", 
                        "INTERNAL_SERVER_ERROR", 
                        "NOT_IMPLEMENTED", 
                        "BAD_GATEWAY", 
                        "SERVICE_UNAVAILABLE", 
                        "GATEWAY_TIMEOUT", 
                        "HTTP_VERSION_NOT_SUPPORTED", 
                        "VARIANT_ALSO_NEGOTIATES", 
                        "INSUFFICIENT_STORAGE", 
                        "LOOP_DETECTED", 
                        "BANDWIDTH_LIMIT_EXCEEDED", 
                        "NOT_EXTENDED", 
                        "NETWORK_AUTHENTICATION_REQUIRED"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "MandatoryConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaximumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "HealthConfig": {
            "type": "object", 
            "properties": {
                "protocol": {
                    "type": "string"
                }, 
                "ignoreOnProvision": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "urlPath": {
                    "type": "string"
                }, 
                "timeoutMillis": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "unhealthyThreshold": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "healthyThreshold": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "httpMethod": {
                    "type": "string"
                }, 
                "autoredeploy": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "command": {
                    "type": "string"
                }, 
                "port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "httpVersion": {
                    "type": "string"
                }
            }
        }, 
        "RegexpConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "errorMessage": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "WrapperClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "BindingPlaceholder": {
            "type": "object", 
            "properties": {
                "defaultValue": {
                    "type": "string"
                }, 
                "bindingExpression": {
                    "type": "string"
                }
            }
        }, 
        "ConditionalEvaluatorCase": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "condition": {
                    "$ref": "#/definitions/Clause"
                }
            }
        }, 
        "PrimitiveDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "typeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ClosureDescription": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "inputs": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "runtime": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "outputNames": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "notifyUrl": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "logConfiguration": {
                    "$ref": "#/definitions/LogConfig"
                }, 
                "source": {
                    "type": "string"
                }, 
                "sourceURL": {
                    "type": "string"
                }, 
                "entrypoint": {
                    "type": "string"
                }, 
                "resources": {
                    "$ref": "#/definitions/ResourceConstraints"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "dependencies": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "catalogOrganizationReference": {
            "xml": {
                "name": "catalogOrganizationReference"
            }, 
            "type": "object", 
            "properties": {
                "subtenantLabel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tenantLabel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "subtenantRef": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tenantRef": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "GreaterThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NetworkState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "authCredentialsLink": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "resourcePoolLink": {
                    "type": "string"
                }, 
                "endpointLink": {
                    "type": "string"
                }, 
                "regionId": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "instanceAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "subnetCIDR": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ResourceCosts": {
            "type": "object", 
            "properties": {
                "leaseRate": {
                    "$ref": "#/definitions/moneyTimeRate"
                }
            }
        }, 
        "requestCompletion": {
            "xml": {
                "name": "requestCompletion"
            }, 
            "type": "object", 
            "properties": {
                "resourceBindingIds": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "requestCompletionState": {
                    "enum": [
                        "SUCCESSFUL", 
                        "PARTIALLY_SUCCESSFUL", 
                        "FAILED", 
                        "REJECTED"
                    ], 
                    "type": "string"
                }, 
                "completionDetails": {
                    "type": "string"
                }
            }
        }, 
        "LiteralMapEntry": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/literal"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "ContainerVolumeDescription": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "parentDescriptionLink": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "driver": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "options": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "externalName": {
                    "type": "string"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "instanceAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }
            }
        }, 
        "LayoutFlowElement": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ResetValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "providerRequest": {
            "xml": {
                "name": "providerRequest"
            }, 
            "type": "object", 
            "properties": {
                "callbackServiceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestedFor": {
                    "type": "string"
                }, 
                "requestNumber": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "description": {
                    "type": "string"
                }, 
                "requestType": {
                    "enum": [
                        "CATALOG_ITEM", 
                        "RESOURCE_ACTION"
                    ], 
                    "type": "string"
                }, 
                "requestBindingId": {
                    "type": "string"
                }, 
                "requestedObjectId": {
                    "type": "string"
                }, 
                "solution": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "catalogItemTypeId": {
                    "type": "string"
                }, 
                "requestData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "targetResourceTypeId": {
                    "type": "string"
                }, 
                "rootCafeResourceId": {
                    "type": "string"
                }, 
                "targetResourceId": {
                    "type": "string"
                }, 
                "targetResourceProviderId": {
                    "type": "string"
                }, 
                "organization": {
                    "$ref": "#/definitions/catalogOrganizationReference"
                }, 
                "targetCafeResourceId": {
                    "type": "string"
                }, 
                "requestedBy": {
                    "type": "string"
                }, 
                "reasons": {
                    "type": "string"
                }, 
                "catalogRequestId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "dateTimeLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "dateTimeLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The date.", 
                            "format": "date-time"
                        }
                    }, 
                    "description": "Wraps a Date & Time value. This is a wrapper for the Java {@link Date} class."
                }
            ]
        }, 
        "IncrementBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "AndClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "MonetaryValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "literal"
                    }, 
                    "type": "object", 
                    "properties": {
                        "currencyCode": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The ISO 4217 code used to identify the currency (if any) associated with this value."
                        }
                    }, 
                    "description": "Base type for representing monetary values, encapsulating both some kind of quantity and a currency."
                }
            ]
        }, 
        "CompositeComponent": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "created": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "compositeDescriptionLink": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "componentLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ResourceActionRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/resourceActionRequest"
                }, 
                {
                    "xml": {
                        "name": "resourceActionRequest"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "CustomPropertyDefinitionMetadata": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "required": [
                        "field"
                    ], 
                    "type": "object", 
                    "properties": {
                        "field": {
                            "$ref": "#/definitions/Field"
                        }
                    }
                }
            ]
        }, 
        "PortBinding": {
            "type": "object", 
            "properties": {
                "hostPort": {
                    "type": "string"
                }, 
                "protocol": {
                    "type": "string"
                }, 
                "containerPort": {
                    "type": "string"
                }, 
                "hostIp": {
                    "type": "string"
                }
            }
        }, 
        "EqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "BootConfig": {
            "type": "object", 
            "properties": {
                "files": {
                    "items": {
                        "$ref": "#/definitions/FileEntry"
                    }, 
                    "type": "array"
                }, 
                "data": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "FileEntry": {
            "type": "object", 
            "properties": {
                "path": {
                    "type": "string"
                }, 
                "contentsReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "contents": {
                    "type": "string"
                }
            }
        }, 
        "RequestBrokerState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "taskSubStage": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "resourceType": {
                    "type": "string"
                }, 
                "resourceLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestTrackerLink": {
                    "type": "string"
                }, 
                "resourceDescriptionLink": {
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "groupResourcePlacementLink": {
                    "type": "string"
                }, 
                "serviceTaskCallback": {
                    "$ref": "#/definitions/ServiceTaskCallback"
                }, 
                "operation": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "resourceCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "taskInfo": {
                    "$ref": "#/definitions/TaskState"
                }
            }
        }, 
        "NullDisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ResourceLease": {
            "required": [
                "end", 
                "start"
            ], 
            "type": "object", 
            "properties": {
                "start": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "end": {
                    "type": "string", 
                    "format": "date-time"
                }
            }
        }, 
        "NotClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClause": {
                            "$ref": "#/definitions/Clause"
                        }
                    }
                }
            ]
        }, 
        "LayoutSection": {
            "type": "object", 
            "properties": {
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "rows": {
                    "xml": {
                        "wrapped": true, 
                        "name": "row"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutRow"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "securityTag": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "securityTag"
                    }, 
                    "type": "object", 
                    "properties": {
                        "securityTagTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ComputeNetwork": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "securityGroupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "networkProfileLink": {
                    "type": "string"
                }, 
                "assignment": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "subnetLink": {
                    "type": "string"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "networkType": {
                    "enum": [
                        "PUBLIC", 
                        "ISOLATED"
                    ], 
                    "type": "string"
                }, 
                "descriptionLink": {
                    "type": "string"
                }, 
                "parentLink": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ServiceStats": {
            "type": "object", 
            "properties": {
                "kind": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "extractedId": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "parentServiceId": {
                    "type": "string"
                }, 
                "entries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ServiceStat"
                    }, 
                    "type": "object"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "ComputeDiskState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "sourceImageReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "constraint": {
                    "$ref": "#/definitions/Constraint"
                }, 
                "type": {
                    "enum": [
                        "SSD", 
                        "HDD", 
                        "CDROM", 
                        "FLOPPY", 
                        "NETWORK"
                    ], 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "capacityMBytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "bootOrder": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "bootConfig": {
                    "$ref": "#/definitions/BootConfig"
                }, 
                "bootArguments": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ContainerNetworkDescription": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "parentDescriptionLink": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "ipam": {
                    "$ref": "#/definitions/Ipam"
                }, 
                "driver": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "options": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "externalName": {
                    "type": "string"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "instanceAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }
            }
        }, 
        "deploymentStorageProfile": {
            "xml": {
                "name": "deploymentStorageProfile"
            }, 
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "storageItems": {
                    "items": {
                        "$ref": "#/definitions/StorageItem"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "FormReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ImageState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "osFamily": {
                    "type": "string"
                }, 
                "endpointLink": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "regionId": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpointType": {
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "literal": {
            "xml": {
                "name": "literal"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "description": "Wraps a value such that values of different types can be treated generically."
        }, 
        "DynamicLayoutReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        }, 
        "ResourceGroupState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "StaticLayout": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutReference"
                }, 
                {
                    "required": [
                        "layout"
                    ], 
                    "type": "object", 
                    "properties": {
                        "layout": {
                            "$ref": "#/definitions/layout"
                        }
                    }
                }
            ]
        }, 
        "Condition": {
            "type": "object", 
            "properties": {
                "enforcement": {
                    "enum": [
                        "HARD", 
                        "SOFT"
                    ], 
                    "type": "string"
                }, 
                "expression": {
                    "$ref": "#/definitions/QueryTerm"
                }, 
                "type": {
                    "enum": [
                        "TAG", 
                        "FIELD"
                    ], 
                    "type": "string"
                }, 
                "occurrence": {
                    "enum": [
                        "MUST_OCCUR", 
                        "MUST_NOT_OCCUR", 
                        "SHOULD_OCCUR"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "entityRefEx": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRefEx"
                    }, 
                    "type": "object", 
                    "properties": {
                        "href": {
                            "type": "string", 
                            "description": "the Href"
                        }
                    }, 
                    "description": "Represents a reference to an entity by uri"
                }
            ]
        }, 
        "NotificationsState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "activeRequestsCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "recentEventLogsCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "externalProviderResource": {
            "xml": {
                "name": "externalProviderResource"
            }, 
            "type": "object", 
            "properties": {
                "resourceData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "resourceTypeId": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }
            }
        }, 
        "TaskState": {
            "type": "object", 
            "properties": {
                "failure": {
                    "$ref": "#/definitions/ServiceErrorResponse"
                }, 
                "isDirect": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "stage": {
                    "enum": [
                        "CREATED", 
                        "STARTED", 
                        "FINISHED", 
                        "FAILED", 
                        "CANCELLED"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "EventTopicState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "blockable": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "topicTaskInfo": {
                    "$ref": "#/definitions/TopicTaskInfo"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "schema": {
                    "type": "string"
                }
            }
        }, 
        "pagedEntities": {
            "xml": {
                "name": "pagedEntities"
            }, 
            "type": "object", 
            "properties": {
                "content": {
                    "xml": {
                        "wrapped": true
                    }, 
                    "items": {
                        "$ref": "#/definitions/EndpointState"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "links": {
                    "xml": {
                        "wrapped": true, 
                        "name": "links"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Link"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "metadata": {
                    "readOnly": true, 
                    "$ref": "#/definitions/PageMetadata"
                }
            }
        }, 
        "resourceActionRequest": {
            "xml": {
                "name": "resourceActionRequest"
            }, 
            "type": "object", 
            "properties": {
                "dateCompleted": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "reasons": {
                    "type": "string"
                }, 
                "stateName": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "resourceRef": {
                    "$ref": "#/definitions/labelledReference"
                }, 
                "dateSubmitted": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "resourceActionRef": {
                    "$ref": "#/definitions/labelledReference"
                }, 
                "id": {
                    "type": "string"
                }, 
                "waitingStatus": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "NOT_WAITING", 
                        "WAITING_FOR_APPROVAL", 
                        "WAITING_FOR_PROVIDER"
                    ], 
                    "type": "string"
                }, 
                "requestedFor": {
                    "type": "string"
                }, 
                "retriesRemaining": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "approvalStatus": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "PENDING", 
                        "PRE_APPROVED", 
                        "POST_APPROVED", 
                        "REJECTED"
                    ], 
                    "type": "string"
                }, 
                "iconId": {
                    "type": "string"
                }, 
                "requestedItemName": {
                    "type": "string"
                }, 
                "state": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "UNSUBMITTED", 
                        "SUBMITTED", 
                        "DELETED", 
                        "PENDING_PRE_APPROVAL", 
                        "PRE_APPROVAL_SEND_ERROR", 
                        "PRE_APPROVED", 
                        "PRE_REJECTED", 
                        "PROVIDER_DELETION_ERROR", 
                        "IN_PROGRESS", 
                        "PROVIDER_SEND_ERROR", 
                        "PROVIDER_COMPLETED", 
                        "PROVIDER_FAILED", 
                        "PENDING_POST_APPROVAL", 
                        "POST_APPROVAL_SEND_ERROR", 
                        "POST_APPROVED", 
                        "POST_REJECTION_RECEIVED", 
                        "ROLLBACK_ERROR", 
                        "POST_REJECTED", 
                        "SUCCESSFUL", 
                        "PARTIALLY_SUCCESSFUL", 
                        "FAILED"
                    ], 
                    "type": "string"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "executionStatus": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "NOT_STARTED", 
                        "STARTED", 
                        "STOPPED"
                    ], 
                    "type": "string"
                }, 
                "requestedBy": {
                    "type": "string"
                }, 
                "requestorEntitlementId": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "requestedItemDescription": {
                    "type": "string"
                }, 
                "quote": {
                    "$ref": "#/definitions/RequestQuote"
                }, 
                "lastUpdated": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "dateCreated": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "requestData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "preApprovalId": {
                    "type": "string"
                }, 
                "requestNumber": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "phase": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "UNSUBMITTED", 
                        "PENDING_PRE_APPROVAL", 
                        "IN_PROGRESS", 
                        "PENDING_POST_APPROVAL", 
                        "SUCCESSFUL", 
                        "FAILED", 
                        "REJECTED"
                    ], 
                    "type": "string"
                }, 
                "postApprovalId": {
                    "type": "string"
                }, 
                "requestCompletion": {
                    "$ref": "#/definitions/requestCompletion"
                }, 
                "organization": {
                    "$ref": "#/definitions/catalogOrganizationReference"
                }, 
                "dateApproved": {
                    "type": "string", 
                    "format": "date-time"
                }
            }
        }, 
        "loadBalancerMember": {
            "xml": {
                "name": "loadBalancerMember"
            }, 
            "type": "object", 
            "properties": {
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "address": {
                    "type": "string"
                }
            }
        }, 
        "LayoutReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "BooleanLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "booleanLiteral"
                    }, 
                    "type": "object", 
                    "description": "Wraps a boolean value."
                }
            ]
        }, 
        "ExternalSchemaReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/SchemaReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "schemaId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ServiceStat": {
            "type": "object", 
            "properties": {
                "kind": {
                    "type": "string"
                }, 
                "lastUpdateMicrosUtc": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "serviceReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "latestValue": {
                    "type": "number", 
                    "format": "double"
                }, 
                "logHistogram": {
                    "$ref": "#/definitions/ServiceStatLogHistogram"
                }, 
                "version": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "accumulatedValue": {
                    "type": "number", 
                    "format": "double"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "IaasPropertyNameBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "CustomValidationConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ProviderRequestValidation": {
            "type": "object", 
            "properties": {
                "quote": {
                    "$ref": "#/definitions/RequestQuote"
                }, 
                "updatedData": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "Expression": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "operator": {
                            "$ref": "#/definitions/CriteriaOperator"
                        }, 
                        "rightOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }, 
                        "leftOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "ComputeDescription": {
            "type": "object", 
            "properties": {
                "bootAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "networkInterfaceDescLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "environmentName": {
                    "type": "string"
                }, 
                "regionId": {
                    "type": "string"
                }, 
                "totalMemoryBytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "statsAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "healthAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "enumerationAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "id": {
                    "type": "string"
                }, 
                "dataStoreId": {
                    "type": "string"
                }, 
                "networkId": {
                    "type": "string"
                }, 
                "currencyUnit": {
                    "type": "string"
                }, 
                "statsAdapterReferences": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string", 
                        "format": "uri"
                    }, 
                    "type": "array"
                }, 
                "zoneId": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "supportedChildren": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "costPerMinute": {
                    "type": "number", 
                    "format": "double"
                }, 
                "name": {
                    "type": "string"
                }, 
                "gpuCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "endpointLink": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "powerAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "cpuCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "instanceAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "diskDescLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "authCredentialsLink": {
                    "type": "string"
                }, 
                "instanceType": {
                    "type": "string"
                }, 
                "cpuMhzPerCore": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "constraints": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Constraint"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "AuthCredentialsServiceState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "userEmail": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "type": {
                    "type": "string"
                }, 
                "privateKey": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tokenReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "publicKey": {
                    "type": "string"
                }, 
                "userLink": {
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "privateKeyId": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "DynamicValueContext": {
            "required": [
                "parameterMappings"
            ], 
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "providerEntityId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "providerRollbackRequest": {
            "xml": {
                "name": "providerRollbackRequest"
            }, 
            "type": "object", 
            "properties": {
                "resourceIds": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "WithinOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DefaultValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "timeSpan": {
            "xml": {
                "name": "timeSpan"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "amount": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "description": "The amount for the time span.", 
                    "format": "int64"
                }, 
                "unit": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "MILLISECONDS", 
                        "SECONDS", 
                        "MINUTES", 
                        "HOURS", 
                        "DAYS", 
                        "WEEKS", 
                        "MONTHS", 
                        "YEARS"
                    ], 
                    "type": "string", 
                    "description": "The unit of measure for the time span. e.g: days."
                }
            }, 
            "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
        }, 
        "PhotonModelAdapterConfig": {
            "type": "object", 
            "properties": {
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "adapterEndpoints": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }
            }
        }, 
        "MaxValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NetworkInterfaceDescription": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "deviceIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "networkLink": {
                    "type": "string"
                }, 
                "assignment": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "firewallLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "address": {
                    "type": "string"
                }, 
                "subnetLink": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "networkProviderRequest": {
            "xml": {
                "name": "networkProviderRequest"
            }, 
            "type": "object", 
            "properties": {
                "callbackServiceId": {
                    "type": "string"
                }, 
                "blueprintRequestId": {
                    "type": "string"
                }, 
                "operationType": {
                    "enum": [
                        "UNREGISTER", 
                        "DEALLOCATE", 
                        "UPDATE", 
                        "CREATE", 
                        "READ", 
                        "ALLOCATE", 
                        "DELETE"
                    ], 
                    "type": "string"
                }, 
                "rootCafeDeploymentId": {
                    "type": "string"
                }, 
                "resourceId": {
                    "type": "string"
                }, 
                "networkObject": {
                    "$ref": "#/definitions/networkObject"
                }, 
                "originalCallbackServiceId": {
                    "type": "string"
                }, 
                "blueprintName": {
                    "type": "string"
                }, 
                "callbackAdditionalUrlPath": {
                    "type": "string"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "componentData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "componentTypeId": {
                    "type": "string"
                }, 
                "rootCafeRequestId": {
                    "type": "string"
                }, 
                "requestId": {
                    "type": "string"
                }, 
                "subtenantId": {
                    "type": "string"
                }, 
                "componentId": {
                    "type": "string"
                }, 
                "blueprintId": {
                    "type": "string"
                }, 
                "previousComponentData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "requestInputData": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "EntityReferenceDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ContainerDescription": {
            "type": "object", 
            "properties": {
                "capDrop": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "links": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "image": {
                    "type": "string"
                }, 
                "networks": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ServiceNetwork"
                    }, 
                    "type": "object"
                }, 
                "device": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "memorySwapLimit": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "volumeDriver": {
                    "type": "string"
                }, 
                "pod": {
                    "type": "string"
                }, 
                "cpuShares": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "id": {
                    "type": "string"
                }, 
                "restartPolicy": {
                    "type": "string"
                }, 
                "parentDescriptionLink": {
                    "type": "string"
                }, 
                "networkMode": {
                    "type": "string"
                }, 
                "deploymentPolicyId": {
                    "type": "string"
                }, 
                "hostname": {
                    "type": "string"
                }, 
                "workingDir": {
                    "type": "string"
                }, 
                "zoneId": {
                    "type": "string"
                }, 
                "_cluster": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "affinity": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "env": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "extraHosts": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "privileged": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "dns": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "maximumRetryCount": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "portBindings": {
                    "items": {
                        "$ref": "#/definitions/PortBinding"
                    }, 
                    "type": "array"
                }, 
                "capAdd": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "memoryLimit": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "entryPoint": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "user": {
                    "type": "string"
                }, 
                "pidMode": {
                    "type": "string"
                }, 
                "imageReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "logConfig": {
                    "$ref": "#/definitions/LogConfig"
                }, 
                "publishAll": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "name": {
                    "type": "string"
                }, 
                "domainName": {
                    "type": "string"
                }, 
                "healthConfig": {
                    "$ref": "#/definitions/HealthConfig"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "command": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "instanceAdapterReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "volumes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "dependsOn": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "dnsSearch": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "volumesFrom": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "LogServiceState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "logs": {
                    "type": "string"
                }
            }
        }, 
        "InternalConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DeploymentPolicy": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "RegistryHostSpec": {
            "type": "object", 
            "properties": {
                "sslTrust": {
                    "$ref": "#/definitions/SslTrustCertificateState"
                }, 
                "acceptCertificate": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "hostState": {
                    "$ref": "#/definitions/RegistryState"
                }, 
                "acceptHostAddress": {
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "TimeSpan": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "timeSpan"
                    }, 
                    "type": "object", 
                    "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
                }
            ]
        }, 
        "EventLogState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "eventLogType": {
                    "enum": [
                        "INFO", 
                        "WARNING", 
                        "ERROR"
                    ], 
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "resourceType": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "ExternalValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "dynamicValueProviderInfo"
                    ], 
                    "type": "object", 
                    "properties": {
                        "dynamicValueProviderInfo": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "ContainsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ClosureState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "inputs": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "errorMsg": {
                    "type": "string"
                }, 
                "resourceLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "closureSemaphore": {
                    "type": "string"
                }, 
                "state": {
                    "enum": [
                        "CREATED", 
                        "STARTED", 
                        "FINISHED", 
                        "FAILED", 
                        "CANCELLED"
                    ], 
                    "type": "string"
                }, 
                "lastLeasedTimeMillis": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "outputs": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "descriptionLink": {
                    "type": "string"
                }, 
                "parentLink": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "logs": {
                    "items": {
                        "type": "string", 
                        "format": "byte"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "Field": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "dataType": {
                    "$ref": "#/definitions/DataType"
                }, 
                "permissibleValues": {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                "label": {
                    "type": "string"
                }, 
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "displayAdvice": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "TEXTBOX", 
                        "HYPERLINK", 
                        "EMAIL", 
                        "TEXTAREA", 
                        "DATE_TIME_PICKER", 
                        "CHECKBOX", 
                        "YES_NO", 
                        "CHECKBOX_GROUP", 
                        "DUAL_LIST", 
                        "RADIO_GROUP", 
                        "DROPDOWN", 
                        "LIST", 
                        "SEARCHER", 
                        "TREE", 
                        "FORM", 
                        "IMAGE", 
                        "SLIDER", 
                        "DATA_TABLE", 
                        "VALUE_PICKER"
                    ], 
                    "type": "string"
                }, 
                "orderIndex": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "isMultiValued": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "columns": {
                    "xml": {
                        "wrapped": true, 
                        "name": "column"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "VirtualServer": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "networkObject"
                    }, 
                    "type": "object", 
                    "properties": {
                        "connectionRate": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "protocol": {
                            "type": "string"
                        }, 
                        "enabled": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "applicationProfileId": {
                            "type": "string"
                        }, 
                        "enableServiceInsertion": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "applicationRulesIds": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "connectionLimit": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "poolId": {
                            "type": "string"
                        }, 
                        "accelerationEnabled": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "ipAddress": {
                            "type": "string"
                        }, 
                        "port": {
                            "type": "integer", 
                            "format": "int32"
                        }
                    }
                }
            ]
        }, 
        "catalogPrincipal": {
            "xml": {
                "name": "catalogPrincipal"
            }, 
            "type": "object", 
            "properties": {
                "type": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "GROUP", 
                        "USER", 
                        "CUSTOM_GROUP", 
                        "SSO_GROUP"
                    ], 
                    "type": "string"
                }, 
                "tenantName": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "ref": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "value": {
                    "type": "string"
                }
            }
        }, 
        "UnspecifiedEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "integerLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "integerLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "integer", 
                            "description": "The integer value.", 
                            "format": "int64"
                        }
                    }, 
                    "description": "Wraps a signed 64-bit integer value."
                }
            ]
        }, 
        "CostToDate": {
            "required": [
                "asOnDate", 
                "currencyCode"
            ], 
            "type": "object", 
            "properties": {
                "amount": {
                    "type": "number", 
                    "format": "double"
                }, 
                "currencyCode": {
                    "type": "string"
                }, 
                "asOnDate": {
                    "type": "string", 
                    "format": "date-time"
                }
            }
        }, 
        "SslTrustCertificateState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "validSince": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "certificate": {
                    "type": "string"
                }, 
                "validTo": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "commonName": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "resourceLink": {
                    "type": "string"
                }, 
                "fingerprint": {
                    "type": "string"
                }, 
                "issuerName": {
                    "type": "string"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "serial": {
                    "type": "string"
                }, 
                "subscriptionLink": {
                    "type": "string"
                }
            }
        }, 
        "HttpEntityString": {
            "type": "object", 
            "properties": {
                "body": {
                    "type": "string"
                }, 
                "headers": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "IsDefinedOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Schema": {
            "type": "object", 
            "properties": {
                "fields": {
                    "xml": {
                        "name": "field"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                }
            }
        }, 
        "Sort": {
            "type": "object"
        }, 
        "FieldReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "path": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "LayoutExtension": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "fieldPrefix": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "extensionId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "extensionPointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ConditionalEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "cases": {
                            "xml": {
                                "name": "case"
                            }, 
                            "items": {
                                "$ref": "#/definitions/ConditionalEvaluatorCase"
                            }, 
                            "type": "array"
                        }, 
                        "defaulValue": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "MinValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "allocateComponentRequest": {
            "xml": {
                "name": "allocateComponentRequest"
            }, 
            "type": "object", 
            "properties": {
                "callbackServiceId": {
                    "type": "string"
                }, 
                "blueprintRequestId": {
                    "type": "string"
                }, 
                "userContext": {
                    "$ref": "#/definitions/requestUserContext"
                }, 
                "requestType": {
                    "enum": [
                        "PROVISION", 
                        "UPDATE", 
                        "ALLOCATE", 
                        "DEALLOCATE"
                    ], 
                    "type": "string"
                }, 
                "targetResourceId": {
                    "type": "string"
                }, 
                "blueprintName": {
                    "type": "string"
                }, 
                "callbackAdditionalUrlPath": {
                    "type": "string"
                }, 
                "rootCafeRequestId": {
                    "type": "string"
                }, 
                "allocationConstraint": {
                    "$ref": "#/definitions/allocationConstraint"
                }, 
                "componentInfo": {
                    "$ref": "#/definitions/componentRequestInfo"
                }, 
                "requestId": {
                    "type": "string"
                }, 
                "blueprintId": {
                    "type": "string"
                }, 
                "rootCafeDeploymentId": {
                    "type": "string"
                }
            }
        }, 
        "LayoutPlaceholderCell": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ProfileMappingState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "mappings": {
                    "xml": {
                        "wrapped": true
                    }, 
                    "additionalProperties": {
                        "type": "object"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "ContainerVolumeState": {
            "type": "object", 
            "properties": {
                "status": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "compositeComponentLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "mountpoint": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "parentLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "adapterManagementReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "originatingHostLink": {
                    "type": "string"
                }, 
                "scope": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "driver": {
                    "type": "string"
                }, 
                "connected": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "descriptionLink": {
                    "type": "string"
                }, 
                "powerState": {
                    "enum": [
                        "UNKNOWN", 
                        "PROVISIONING", 
                        "CONNECTED", 
                        "RETIRED", 
                        "ERROR"
                    ], 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "parentLink": {
                    "type": "string"
                }, 
                "options": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "ResourcePoolState": {
            "type": "object", 
            "properties": {
                "minDiskCapacityBytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "id": {
                    "type": "string"
                }, 
                "minMemoryBytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "currencyUnit": {
                    "type": "string"
                }, 
                "maxDiskCostPerMinute": {
                    "type": "number", 
                    "format": "double"
                }, 
                "maxCpuCostPerMinute": {
                    "type": "number", 
                    "format": "double"
                }, 
                "maxDiskCapacityBytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "projectName": {
                    "type": "string"
                }, 
                "minCpuCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "maxCpuCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "maxMemoryBytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "maxGpuCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "properties": {
                    "items": {
                        "enum": [
                            "ELASTIC", 
                            "HYBRID"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string"
                }, 
                "computeResourceQueryLink": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "minGpuCount": {
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "ReadOnlyConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MultipleEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "items"
                    ], 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ContainerHostSpec": {
            "type": "object", 
            "properties": {
                "sslTrust": {
                    "$ref": "#/definitions/SslTrustCertificateState"
                }, 
                "acceptCertificate": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "isUpdateOperation": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "hostState": {
                    "$ref": "#/definitions/ComputeState"
                }, 
                "acceptHostAddress": {
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "MinCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutText": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutFlowElement"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "PageMetadata": {
            "type": "object", 
            "properties": {
                "totalPages": {
                    "xml": {
                        "attribute": true
                    }, 
                    "readOnly": true, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "offset": {
                    "xml": {
                        "attribute": true
                    }, 
                    "readOnly": true, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "totalElements": {
                    "xml": {
                        "attribute": true
                    }, 
                    "readOnly": true, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "number": {
                    "xml": {
                        "attribute": true
                    }, 
                    "readOnly": true, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "size": {
                    "xml": {
                        "attribute": true
                    }, 
                    "readOnly": true, 
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "SslTrustImportRequest": {
            "type": "object", 
            "properties": {
                "resourceLink": {
                    "type": "string"
                }, 
                "hostUri": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "acceptCertificate": {
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "secureString": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "secureString"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a secured string value, such as a password."
                }
            ]
        }, 
        "LayoutPage": {
            "type": "object", 
            "properties": {
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "sections": {
                    "xml": {
                        "wrapped": true, 
                        "name": "section"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutSection"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "ElasticPlacementZoneConfigurationState": {
            "type": "object", 
            "properties": {
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "epzState": {
                    "$ref": "#/definitions/ElasticPlacementZoneState"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "resourcePoolState": {
                    "$ref": "#/definitions/ResourcePoolState"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "moneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "basis": {
                            "description": "The span of time to calculate the rate of money for.", 
                            "$ref": "#/definitions/timeSpan"
                        }
                    }, 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "multipleLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "multipleLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "xml": {
                                "name": "item"
                            }, 
                            "items": {
                                "$ref": "#/definitions/literal"
                            }, 
                            "type": "array", 
                            "description": "The list of specified values. NOTE: All values must be of the same data type."
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string", 
                            "description": "The data type of the items in the list."
                        }
                    }, 
                    "description": "A literal which represents multiple values. All of these component values must be of the same data type."
                }
            ]
        }, 
        "stringLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "stringLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a String value."
                }
            ]
        }, 
        "ResourceConstraints": {
            "type": "object", 
            "properties": {
                "ramMB": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "cpuShares": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "timeoutSeconds": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "decimalLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "decimalLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "number", 
                            "description": "The decimal value.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Wraps a decimal value."
                }
            ]
        }, 
        "ContainerNetworkState": {
            "type": "object", 
            "properties": {
                "compositeComponentLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "id": {
                    "type": "string"
                }, 
                "parentLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "adapterManagementReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "originatingHostLink": {
                    "type": "string"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "connectedContainersCount": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "driver": {
                    "type": "string"
                }, 
                "connected": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "descriptionLink": {
                    "type": "string"
                }, 
                "powerState": {
                    "enum": [
                        "UNKNOWN", 
                        "PROVISIONING", 
                        "CONNECTED", 
                        "RETIRED", 
                        "ERROR"
                    ], 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "ipam": {
                    "$ref": "#/definitions/Ipam"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "parentLink": {
                    "type": "string"
                }, 
                "options": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }
            }
        }, 
        "CriteriaOperator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ContainerType": {
            "required": [
                "schemaReference"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "serviceTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "schemaReference": {
                    "$ref": "#/definitions/SchemaReference"
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }
            }
        }, 
        "booleanLiteral": {
            "xml": {
                "name": "booleanLiteral"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "value": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "The boolean value."
                }
            }, 
            "description": "Wraps a boolean value."
        }, 
        "ComputeState": {
            "type": "object", 
            "properties": {
                "environmentName": {
                    "type": "string"
                }, 
                "hostName": {
                    "type": "string"
                }, 
                "totalMemoryBytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "customProperties": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "zoneId": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "primaryMAC": {
                    "type": "string"
                }, 
                "resourcePoolLink": {
                    "type": "string"
                }, 
                "networkInterfaceLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "instanceType": {
                    "type": "string"
                }, 
                "adapterManagementReference": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "tagLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "enum": [
                        "VM_HOST", 
                        "VM_GUEST", 
                        "DOCKER_CONTAINER", 
                        "PHYSICAL", 
                        "OS_ON_PHYSICAL", 
                        "ZONE"
                    ], 
                    "type": "string"
                }, 
                "creationTimeMicros": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "groupLinks": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "tenantLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "regionId": {
                    "type": "string"
                }, 
                "documentUpdateTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "lifecycleState": {
                    "type": "string"
                }, 
                "address": {
                    "type": "string"
                }, 
                "descriptionLink": {
                    "type": "string"
                }, 
                "diskLinks": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "powerState": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "gpuCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "documentExpirationTimeMicros": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpointLink": {
                    "type": "string"
                }, 
                "documentSelfLink": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "cpuCount": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "parentLink": {
                    "type": "string"
                }, 
                "cpuMhzPerCore": {
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "DataType": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "typeId": {
                    "enum": [
                        "STRING", 
                        "INTEGER", 
                        "DECIMAL", 
                        "MONEY", 
                        "MONEY_RANGE", 
                        "MONEY_TIME_RATE", 
                        "BOOLEAN", 
                        "ENTITY_REFERENCE", 
                        "DATE_TIME", 
                        "TIME_SPAN", 
                        "SECURE_STRING", 
                        "COMPLEX"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "ResourceForms": {
            "type": "object", 
            "properties": {
                "catalogRequestInfoHidden": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "requestFormScale": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "SMALL", 
                        "BIG"
                    ], 
                    "type": "string"
                }, 
                "catalogResourceInfoHidden": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "details": {
                    "$ref": "#/definitions/FormReference"
                }
            }
        }, 
        "EditableBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DynamicPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }, 
                        "context": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "securityGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "securityGroup"
                    }, 
                    "type": "object", 
                    "properties": {
                        "securityGroupTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "internal": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "ipAddressCollection": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "machineIdCollection": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "EncryptedBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "requestUserContext": {
            "xml": {
                "name": "requestUserContext"
            }, 
            "type": "object", 
            "properties": {
                "requestedFor": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "reasons": {
                    "type": "string"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "subtenantId": {
                    "type": "string"
                }, 
                "requestedBy": {
                    "type": "string"
                }
            }
        }, 
        "ObjectDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "label": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "RequestQuote": {
            "type": "object", 
            "properties": {
                "totalLeaseCost": {
                    "$ref": "#/definitions/MonetaryValue"
                }, 
                "leaseRate": {
                    "$ref": "#/definitions/moneyTimeRate"
                }, 
                "leasePeriod": {
                    "$ref": "#/definitions/timeSpan"
                }
            }
        }, 
        "QueryTerm": {
            "type": "object", 
            "properties": {
                "matchValue": {
                    "type": "string"
                }, 
                "range": {
                    "$ref": "#/definitions/NumericRange"
                }, 
                "propertyName": {
                    "type": "string"
                }, 
                "matchType": {
                    "enum": [
                        "WILDCARD", 
                        "TERM", 
                        "PHRASE"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "NumericRange": {
            "type": "object", 
            "properties": {
                "isMaxInclusive": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "precisionStep": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "max": {
                    "type": "number", 
                    "format": "double"
                }, 
                "min": {
                    "type": "number", 
                    "format": "double"
                }, 
                "isMinInclusive": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "type": {
                    "enum": [
                        "LONG", 
                        "STRING", 
                        "BYTES", 
                        "PODO", 
                        "COLLECTION", 
                        "MAP", 
                        "BOOLEAN", 
                        "DOUBLE", 
                        "InternetAddressV4", 
                        "InternetAddressV6", 
                        "DATE", 
                        "URI", 
                        "ENUM", 
                        "ARRAY"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "LogConfig": {
            "type": "object", 
            "properties": {
                "config": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "type": {
                    "type": "string"
                }
            }
        }, 
        "MinLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }
    }, 
    "swagger": "2.0"
}