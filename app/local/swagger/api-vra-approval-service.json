{
    "info": {
        "version": "7.3.0-SNAPSHOT", 
        "description": "# Approval Service API Specification", 
        "title": "Approval Service API"
    }, 
    "paths": {
        "/api/info/approvals/{approvalId}/form/source/{elementId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Retrieves a paged list of permissible values for a specific field on the approval source details form.", 
                "description": "Retrieves a paged list of permissible values for a specific field on the approval source details form. ", 
                "parameters": [
                    {
                        "description": "The approval id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "approvalId"
                    }, 
                    {
                        "description": "The element id", 
                        "required": true, 
                        "type": "string", 
                        "name": "elementId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-info"
                ]
            }
        }, 
        "/api/policytypes/{policyTypeId}/schema/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "summary": "Get the state of a field in the schema associated with the given policy type.", 
                "description": "Get the state of a field in the schema associated with the given policy type.", 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "policyTypeId"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ]
            }
        }, 
        "/api/policytypes/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }, 
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicyType"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ], 
                "description": "Updates an existing approval policy type.", 
                "summary": "Updates an existing approval policy type.", 
                "operationId": "Update-Approval-Policy-Type"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "Policy type deleted successfully"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ], 
                "description": "Deletes an approval policy type with the given ID.", 
                "summary": "Deletes an approval policy type with the given ID.", 
                "operationId": "Delete-Approval-Policy-Type"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicyType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ], 
                "description": "Retrieves an approval policy type given its identifier.", 
                "summary": "Retrieves an approval policy type given its identifier.", 
                "operationId": "Retrieve-Approval-Policy-Type"
            }
        }, 
        "/api/data-service/schema/{classId}/instances/{id}/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "description": "Get the state of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique identifier of an instance of the object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Get the state of a field in the specified schema"
            }
        }, 
        "/api/data-service/schema/{classId}/default/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "description": "Get the state of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Get the state of a field in the specified schema"
            }
        }, 
        "/api/data-service/list/{classId}/default": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "description": "Retrieves the list of possible values for a given type of object.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Retrieves the list of possible values for a given type of object"
            }
        }, 
        "/api/policies/upgrade/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "summary": "Updates an Approval Policy while ignoring few of the validations. This is an internal API which is used for upgrade.", 
                "description": "Updates an Approval Policy while ignoring few of the validations. This is an internal API which is used for upgrade.", 
                "parameters": [
                    {
                        "description": "The policy id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicy"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }
        }, 
        "/api/info/approvals/{approvalId}/form/source/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "summary": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.", 
                "description": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.", 
                "parameters": [
                    {
                        "description": "The approval id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "approvalId"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-info"
                ]
            }
        }, 
        "/api/data-service/data/{classId}/{id}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/DynamicDataResponse"
                        }
                    }
                }, 
                "description": "Get a set of data for the specified object.", 
                "parameters": [
                    {
                        "description": "The identifier of the type of object to get data for.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique id of the object to get data for. This should be sufficient to identify the object given classId.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/DynamicDataRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Get a set of data for the specified object"
            }
        }, 
        "/api/info/approvalrequests/{requestId}/form/source": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/form"
                        }
                    }
                }, 
                "summary": "Retrieve a read-only form providing detailed information about the source of an approval associated with a specific approval request. ", 
                "description": "Retrieve a read-only form providing detailed information about the sourceof an approval associated with a specific approval request. There is no method-level security on this method because no single permission gives users access to approvals in general. However, there is a programmatic check to ascertain that the user has a specific relationship to the approval request that enables them to see it.", 
                "parameters": [
                    {
                        "description": "The request id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "requestId"
                    }
                ], 
                "tags": [
                    "approval-info"
                ]
            }
        }, 
        "/api/info/approvalrequests/{requestId}/form/source/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "summary": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.", 
                "description": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.", 
                "parameters": [
                    {
                        "description": "The request id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "requestId"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-info"
                ]
            }
        }, 
        "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "description": "Get the permissible values of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "A type filter defining the specific subtype that owns the field.", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a field on the schema of the specified object class.", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Get the permissible values of a field in the specified schema"
            }
        }, 
        "/api/info/approvals/{approvalId}/form/source": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/form"
                        }
                    }
                }, 
                "summary": "Retrieve a read-only form providing detailed information about the source of a specific approval.", 
                "description": "Retrieve a read-only form providing detailed information about the source of a specific approval. There is no method-level security on this method because no single permission gives usersaccess to approvals in general. However, there is a programmatic check to ascertain that theuser has a specific relationship to the approval that enables them to see it.", 
                "parameters": [
                    {
                        "description": "The approval id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "approvalId"
                    }
                ], 
                "tags": [
                    "approval-info"
                ]
            }
        }, 
        "/api/info/approvals/{approvalId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ApprovalInfo"
                        }
                    }
                }, 
                "summary": "Retrieve information about a specific approval by its unique identifier.", 
                "description": "Retrieve information about a specific approval by its unique identifier. There is no method-level security on this method because no single permission gives usersaccess to approvals in general. However, there is a programmatic check to ascertain that theuser has a specific relationship to the approval that enables them to see it.", 
                "parameters": [
                    {
                        "description": "The approval id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "approvalId"
                    }
                ], 
                "tags": [
                    "approval-info"
                ]
            }
        }, 
        "/api/info/approvalrequests/{requestId}/form/source/{elementId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Retrieves a paged list of permissible values for a specific field on the approval source details form, accessed via an approval request.", 
                "description": "Retrieves a paged list of permissible values for a specific field on the approval source details form, accessed via an approval request.", 
                "parameters": [
                    {
                        "description": "The request id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "requestId"
                    }, 
                    {
                        "description": "The element id", 
                        "required": true, 
                        "type": "string", 
                        "name": "elementId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-info"
                ]
            }
        }, 
        "/api/evaluations/workitems": {
            "post": {
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }, 
                "summary": "Work-items service invokes this API to notify that work item is completed.", 
                "description": "Work-items service invokes this API to notify that work item is completed.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/workItemCallbackAction"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-work-item"
                ]
            }
        }, 
        "/api/policytypes/{policyTypeId}/schema/{fieldId}/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "policyTypeId"
                    }, 
                    {
                        "description": "The field id", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ], 
                "description": "Get the schema of a sub-field in the schema associated with the given policy type.", 
                "summary": "Get the schema of a sub-field in the schema associated with the given policy type.", 
                "operationId": "Get-subfield-schema-using-typefilter"
            }
        }, 
        "/api/policytypes": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Approval policy type created successfully", 
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicyType"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicyType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicyType"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ], 
                "description": "Creates a new approval policy type.", 
                "summary": "Creates a new approval policy type.", 
                "operationId": "Create-Approval-Policy-Type"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "summary": "Returns a page of the resources"
            }
        }, 
        "/api/services/{serviceTypeId}/approvable-items": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageApprovableItem"
                        }
                    }
                }, 
                "summary": "Returns approvable items on which approval policy can be defined.", 
                "description": "Returns approvable items on which approval policy can be defined. Using an approvable does not automatically make that policy applicable for all requests for the item, i.e. entitlements still need to be used to link the approval policy.", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "serviceTypeId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "approvable-item"
                ]
            }
        }, 
        "/api/data-service/schema/{classId}/types/{typeFilter}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "description": "This returns the schema of a particular type within a class of object.", 
                "parameters": [
                    {
                        "description": "The class of object to retrieve the schema for.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "A type filter defining the specific subtype that owns the field.", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }
                ], 
                "summary": "Get the schema for the specified object type"
            }
        }, 
        "/api/policytypes/{policyTypeId}/schema/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Get the permissible values of a field in the schema associated with the given policy type.", 
                "description": "Get the permissible values of a field in the schema associated with the given policy type.", 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "policyTypeId"
                    }, 
                    {
                        "description": "The field id", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ]
            }
        }, 
        "/api/policies/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Updated approval policy", 
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicy"
                        }
                    }
                }, 
                "summary": "Updates an approval policy.", 
                "description": "Updates an approval policy", 
                "parameters": [
                    {
                        "description": "The approval policy id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicy"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "summary": "Deletes an approval policy.", 
                "description": "Deletes an approval policy.", 
                "parameters": [
                    {
                        "description": "The policy id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicy"
                        }
                    }
                }, 
                "summary": "Retrieves an approval policy.", 
                "description": "Retrieves an approval policy", 
                "parameters": [
                    {
                        "description": "The approval policy id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }
        }, 
        "/api/evaluations/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Approval"
                        }
                    }
                }, 
                "summary": "Retrieves an Approval instance given its unique identifier.", 
                "description": "Retrieves an Approval instance given its unique identifier.", 
                "parameters": [
                    {
                        "description": "The approval id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "approval-evaluation"
                ]
            }
        }, 
        "/api/cafe-forms/forms/{formId}/{instanceId}/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "summary": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.", 
                "description": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.", 
                "parameters": [
                    {
                        "description": "The form id", 
                        "required": true, 
                        "type": "string", 
                        "name": "formId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The instance id", 
                        "required": true, 
                        "type": "string", 
                        "name": "instanceId", 
                        "in": "path"
                    }, 
                    {
                        "required": true, 
                        "type": "object", 
                        "name": "", 
                        "in": "query"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }
        }, 
        "/api/data-service/schema/{classId}/default/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "description": "Get the permissible values of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a field on the schema of the specified object class.", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Get the permissible values of a field in the specified schema"
            }
        }, 
        "/api/data-service/list/{classId}/types/{typeFilter}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "description": "Retrieves the list of possible values for a given type of object.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "A type filter defining the specific subtype that owns the field.", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Retrieves the list of possible values for a given type of object"
            }
        }, 
        "/api/policies": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicy"
                        }
                    }
                }, 
                "summary": "Creates a new approval policy.", 
                "description": "Creates a new approval policy", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicy"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "List of approval policies", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "summary": "Lists the approval policies.", 
                "description": "Lists the approval policies", 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }
        }, 
        "/api/policytypes/{policyTypeId}/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "summary": "Get the schema associated with the policy type identified by the given id.", 
                "description": "Get the schema associated with the policy type identified by the given id.A policy type is associated with a class-id and an optional type filter that restricts the sub-types of class-id.This call basically retrieves the root schema of the class-id contained in the policy type.", 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "policyTypeId"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ]
            }
        }, 
        "/api/info/approvalrequests/{requestId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/ApprovalRequestInfo"
                        }
                    }
                }, 
                "summary": "Retrieve information about a specific approval request by its unique identifier for version 7.0 or newer.", 
                "description": "Retrieve information about a specific approval request by its unique identifier for version 7.0 or newer. There is no method-level security on this method because no single permission gives usersaccess to approvals in general. However, there is a programmatic check to ascertain that theuser has a specific relationship to the approval that enables them to see it.", 
                "parameters": [
                    {
                        "description": "The request id", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "requestId"
                    }
                ], 
                "tags": [
                    "approval-info"
                ]
            }
        }, 
        "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "description": "Get the permissible values of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique identifier of an instance of the object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a field on the schema of the specified object class.", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Get the permissible values of a field in the specified schema"
            }
        }, 
        "/api/data-service/schema/{classId}/types/{typeFilter}/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "description": "Get the state of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "A type filter defining the specific subtype that owns the field.", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Get the state of a field in the specified schema"
            }
        }, 
        "/api/policytypes/{policyTypeId}/schema/types/{typeFilter}/{fieldId}/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "summary": "Get the schema of a sub-field in the schema associated with the given policy type identified by the given id.", 
                "description": "Get the schema of a sub-field in the schema associated with the given policy type identified by the given id.", 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "policyTypeId"
                    }, 
                    {
                        "description": "The type filter", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }, 
                    {
                        "description": "The field id", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ]
            }
        }, 
        "/api/data-service/schema/{classId}/default": {
            "get": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "description": "Get the schema for the specified object class.", 
                "parameters": [
                    {
                        "description": "The class of object to retrieve the schema for.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }
                ], 
                "summary": "Get the schema for the specified object class"
            }
        }, 
        "/api/data-service/schema/{classId}/instances/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "description": "This returns the schema of a particular type adjusted to the state of a specific instance..", 
                "parameters": [
                    {
                        "description": "The class of object to retrieve the schema for.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique identifier of an instance of the object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "summary": "Get the schema for the specified object"
            }
        }, 
        "/api/cafe-forms/forms/{formId}/{instanceId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/form"
                        }
                    }
                }, 
                "summary": "Retrieve a form.", 
                "description": "Retrieve a form.", 
                "parameters": [
                    {
                        "description": "The form id", 
                        "required": true, 
                        "type": "string", 
                        "name": "formId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The instance id", 
                        "required": true, 
                        "type": "string", 
                        "name": "instanceId", 
                        "in": "path"
                    }, 
                    {
                        "required": true, 
                        "type": "object", 
                        "name": "", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }
        }, 
        "/api/cafe-forms/forms/{formId}/{instanceId}/{elementId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Retrieves a paged list of permissible values that can be assigned to a specific field.", 
                "description": "Retrieves a paged list of permissible values that can be assigned to a specific field.", 
                "parameters": [
                    {
                        "description": "The form id", 
                        "required": true, 
                        "type": "string", 
                        "name": "formId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The instance id", 
                        "required": true, 
                        "type": "string", 
                        "name": "instanceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The context", 
                        "required": true, 
                        "type": "object", 
                        "name": "context", 
                        "in": "query"
                    }, 
                    {
                        "description": "The element id", 
                        "required": true, 
                        "type": "string", 
                        "name": "elementId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-policy"
                ]
            }
        }, 
        "/api/evaluations": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Approval"
                        }
                    }
                }, 
                "summary": "Evaluates a request for the given approval policy.", 
                "description": "Evaluates a request for the given approval policy. This is an asynchronous call. The service creates a new {@link Approval} that would contain the result of the evaluation and returns it to the client and then asynchronously triggers the evaluation. Clients can check the status of the evaluation by retrieving this Approval instance. The service also has a callback mechanism to notify the clients when the evaluation is complete.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ApprovalPolicyEvaluationSpec"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "approval-evaluation"
                ]
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageApproval"
                        }
                    }
                }, 
                "summary": "List all approval instances.", 
                "description": "List all approval instances.", 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "approval-evaluation"
                ]
            }
        }, 
        "/api/policytypes/{policyTypeId}/schema/types/{typeFilter}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "summary": "Get the schema associated with the policy type identified by the given id.", 
                "description": "Get the schema associated with the policy type identified by the given id.A policy type is associated with a class-id and an optional type filter that restricts the sub-types of class-id.This call basically retrieves the root schema of the class-id contained in the policy type.", 
                "parameters": [
                    {
                        "description": "The approval policy type id", 
                        "pattern": ".+", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "policyTypeId"
                    }, 
                    {
                        "description": "The type filter", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "approval-policy-type"
                ]
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "tags": [
        {
            "name": "approvable-item"
        }, 
        {
            "name": "approval-evaluation"
        }, 
        {
            "name": "approval-info"
        }, 
        {
            "name": "approval-policy"
        }, 
        {
            "name": "approval-policy-type"
        }, 
        {
            "name": "approval-work-item"
        }
    ], 
    "basePath": "/approval-service", 
    "definitions": {
        "ConstantValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/literal"
                        }
                    }
                }
            ]
        }, 
        "GreaterThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutRow": {
            "type": "object", 
            "properties": {
                "items": {
                    "xml": {
                        "wrapped": true, 
                        "name": "item"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutCell"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "MinValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "complexLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "complexLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's class."
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component type."
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The type filter for this literal."
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component."
                        }, 
                        "values": {
                            "description": "Map of values, keyed by the field ids of some complex type.", 
                            "$ref": "#/definitions/literalMap"
                        }
                    }, 
                    "description": "A complex value composed of multiple values keyed by the field ids of some complex type."
                }
            ]
        }, 
        "ParameterMapping": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "SubsetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "moneyRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRange"
                    }, 
                    "type": "object", 
                    "properties": {
                        "maxValue": {
                            "type": "number", 
                            "description": "The upper limit of the range.", 
                            "format": "double"
                        }, 
                        "minValue": {
                            "type": "number", 
                            "description": "The lower limit of the range.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a range of money values, between some defined minimums and maximums."
                }
            ]
        }, 
        "EndsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "VisibilityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ParameterMappingCollection": {
            "type": "object", 
            "properties": {
                "params": {
                    "xml": {
                        "wrapped": true, 
                        "name": "param"
                    }, 
                    "items": {
                        "$ref": "#/definitions/ParameterMapping"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "EmbeddedDataContext": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataContext"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/literalMap"
                        }
                    }
                }
            ]
        }, 
        "DisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "booleanLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "booleanLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "The boolean value."
                        }
                    }, 
                    "description": "Wraps a boolean value."
                }
            ]
        }, 
        "ApprovalDescriptiveReference": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "NotEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "OrClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "ApprovalRequestItemInfo": {
            "required": [
                "approval", 
                "level"
            ], 
            "type": "object", 
            "properties": {
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "approval": {
                    "$ref": "#/definitions/RequestedItemApprovalStatusInfo"
                }, 
                "approver": {
                    "items": {
                        "$ref": "#/definitions/ApprovalPrincipal"
                    }, 
                    "type": "array"
                }, 
                "businessJustification": {
                    "type": "string"
                }, 
                "level": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }
            }
        }, 
        "moneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "basis": {
                            "description": "The span of time to calculate the rate of money for.", 
                            "$ref": "#/definitions/timeSpan"
                        }
                    }, 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "ExternalDataContext": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataContext"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "instanceId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "UniqueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ExtensionForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "extensionId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "extensionPointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "stringLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "stringLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a String value."
                }
            ]
        }, 
        "EqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "RequestedItemApprovalInfo": {
            "discriminator": "type", 
            "required": [
                "context", 
                "phase", 
                "policy", 
                "policyType", 
                "requestClassId", 
                "requestInstanceId", 
                "requestedItemName", 
                "requestingServiceId"
            ], 
            "type": "object", 
            "properties": {
                "requestingServiceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestClassId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "subTenantId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestedItemDescription": {
                    "type": "string"
                }, 
                "requestedItemName": {
                    "type": "string"
                }, 
                "requestReasons": {
                    "type": "string"
                }, 
                "state": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "UNINITIATED", 
                        "PENDING", 
                        "APPROVED", 
                        "REJECTED", 
                        "IN_ERROR"
                    ], 
                    "type": "string"
                }, 
                "policy": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }, 
                "requestedBy": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestInstanceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "currentLevel": {
                    "$ref": "#/definitions/ApprovalLevelStatusInfo"
                }, 
                "requestedFor": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "completionTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "policyType": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }, 
                "startTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "phase": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }, 
                "hasSourceDetailsForm": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "futureLevel": {
                    "items": {
                        "$ref": "#/definitions/ApprovalLevelStatusInfo"
                    }, 
                    "type": "array"
                }, 
                "costs": {
                    "$ref": "#/definitions/ApprovalRequestCosts"
                }, 
                "requestDescription": {
                    "type": "string"
                }, 
                "context": {
                    "$ref": "#/definitions/DataContext"
                }, 
                "requestRef": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "pastLevel": {
                    "items": {
                        "$ref": "#/definitions/ApprovalLevelStatusInfo"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "entityRef": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRef"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier of the type or category to which the referenced entity belongs."
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The unique identifier of the referenced entity, encoded as a string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The durable identifier of a component registered in the suite component registry that owns and manages the referenced entity. This can be omitted if this component can be derived from the context within which this entity reference occurs. It must be specified, if no such context exists or if the component differs from that defined by the context."
                        }
                    }, 
                    "description": "Represents a reference to an entity defined somewhere in the suite."
                }
            ]
        }, 
        "CallbackEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaxCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ElementState": {
            "type": "object", 
            "properties": {
                "facets": {
                    "xml": {
                        "wrapped": true, 
                        "name": "facet"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }, 
                    "type": "array"
                }, 
                "dependencies": {
                    "xml": {
                        "wrapped": true, 
                        "name": "dependency"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "type": "string"
                    }
                }
            }
        }, 
        "FieldReferenceInsinuation": {
            "allOf": [
                {
                    "$ref": "#/definitions/FieldInsinuation"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "path": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "MinimumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "Clause": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ApprovalPolicyType": {
            "type": "object", 
            "properties": {
                "classId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 50
                }, 
                "typeFilter": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 1000
                }, 
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 1023
                }, 
                "phaseTypes": {
                    "minItems": 1, 
                    "items": {
                        "$ref": "#/definitions/ApprovalPhaseType"
                    }, 
                    "type": "array", 
                    "maxItems": 2147483647
                }, 
                "id": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "serviceTypeId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "StartsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LessThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "multipleLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "multipleLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "xml": {
                                "name": "item"
                            }, 
                            "items": {
                                "$ref": "#/definitions/literal"
                            }, 
                            "type": "array", 
                            "description": "The list of specified values. NOTE: All values must be of the same data type."
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string", 
                            "description": "The data type of the items in the list."
                        }
                    }, 
                    "description": "A literal which represents multiple values. All of these component values must be of the same data type."
                }
            ]
        }, 
        "literalMap": {
            "xml": {
                "name": "literalMap"
            }, 
            "type": "object", 
            "properties": {
                "entries": {
                    "xml": {
                        "name": "entry"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LiteralMapEntry"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Equivalent of java.util.Map"
        }, 
        "LayoutFlow": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "parts": {
                            "xml": {
                                "wrapped": true, 
                                "name": "part"
                            }, 
                            "items": {
                                "$ref": "#/definitions/LayoutFlowElement"
                            }, 
                            "type": "array"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ContextPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaxLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PhaseDecision": {
            "type": "object", 
            "properties": {
                "phaseNumber": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "state": {
                    "enum": [
                        "UNINITIATED", 
                        "PENDING", 
                        "APPROVED", 
                        "REJECTED", 
                        "IN_ERROR"
                    ], 
                    "type": "string"
                }, 
                "completionTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "startTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "phase": {
                    "$ref": "#/definitions/Phase"
                }, 
                "decisions": {
                    "items": {
                        "$ref": "#/definitions/ApprovalLevelDecision"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }
            }
        }, 
        "RefreshOnChangeBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SkipExportBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutCell": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "size": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "FixedValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "value": {
            "xml": {
                "name": "value"
            }, 
            "type": "object", 
            "properties": {
                "label": {
                    "type": "string"
                }, 
                "underlyingValue": {
                    "$ref": "#/definitions/literal"
                }
            }
        }, 
        "CoalesceEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "ComplexEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "values": {
                            "additionalProperties": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "object"
                        }
                    }
                }
            ]
        }, 
        "MoneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "StaticForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "required": [
                        "layout"
                    ], 
                    "type": "object", 
                    "properties": {
                        "layout": {
                            "$ref": "#/definitions/layout"
                        }
                    }
                }
            ]
        }, 
        "ComplexDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }
            ]
        }, 
        "elementValues": {
            "xml": {
                "name": "elementValues"
            }, 
            "type": "object", 
            "properties": {
                "values": {
                    "xml": {
                        "wrapped": true, 
                        "name": "value"
                    }, 
                    "items": {
                        "$ref": "#/definitions/value"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ExternalFormReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "formId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "PermissibleValueList": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "customAllowed": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "Evaluator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ConstantClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/booleanLiteral"
                        }
                    }
                }
            ]
        }, 
        "ApprovalForms": {
            "type": "object", 
            "properties": {
                "detailsForm": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "approvalForm": {
                    "$ref": "#/definitions/FormReference"
                }
            }
        }, 
        "ExtensionRendererContext": {
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "extensionId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "elementValuesRequest": {
            "xml": {
                "name": "elementValuesRequest"
            }, 
            "type": "object", 
            "properties": {
                "text": {
                    "type": "string"
                }, 
                "userId": {
                    "type": "string"
                }, 
                "associateValue": {
                    "$ref": "#/definitions/literal"
                }, 
                "headers": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "pagingInfo": {
                    "$ref": "#/definitions/ElementValuesPagingInfo"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "dependencyValues": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "ApprovalWorkItemInfo": {
            "type": "object", 
            "properties": {
                "status": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "number": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "assignedTo": {
                    "items": {
                        "$ref": "#/definitions/ApprovalPrincipal"
                    }, 
                    "type": "array"
                }, 
                "completedBy": {
                    "type": "string"
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "assignedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "completedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "EmbeddedFieldInsinuation": {
            "allOf": [
                {
                    "$ref": "#/definitions/FieldInsinuation"
                }, 
                {
                    "required": [
                        "definition"
                    ], 
                    "type": "object", 
                    "properties": {
                        "definition": {
                            "$ref": "#/definitions/Field"
                        }
                    }
                }
            ]
        }, 
        "ApprovalPolicyEvaluationSpec": {
            "required": [
                "requestClassId", 
                "requestInstanceId", 
                "requestedItems", 
                "requestingServiceId"
            ], 
            "type": "object", 
            "properties": {
                "requestInstanceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedItemDescription": {
                    "type": "string"
                }, 
                "requestingServiceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "requestedFor": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedItems": {
                    "items": {
                        "$ref": "#/definitions/RequestedItem"
                    }, 
                    "type": "array"
                }, 
                "detailsForm": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "requestClassId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 50
                }, 
                "requestedItemName": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 1023
                }, 
                "requestReasons": {
                    "type": "string"
                }, 
                "costs": {
                    "$ref": "#/definitions/ApprovalRequestCosts"
                }, 
                "requestDescription": {
                    "type": "string"
                }, 
                "subTenantId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestRef": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedBy": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "MandatoryConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaximumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "RegexpConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "errorMessage": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "formUpdateResponse": {
            "xml": {
                "name": "formUpdateResponse"
            }, 
            "type": "object", 
            "properties": {
                "elementUpdates": {
                    "xml": {
                        "wrapped": true, 
                        "name": "elementUpdate"
                    }, 
                    "items": {
                        "$ref": "#/definitions/updateElementEntry"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "WrapperClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "PrimitiveDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "typeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ApprovalInfo": {
            "required": [
                "requestClassId", 
                "requestInstanceId", 
                "requestedItemName", 
                "requestingServiceId"
            ], 
            "type": "object", 
            "properties": {
                "requestInstanceId": {
                    "type": "string"
                }, 
                "requestedItemDescription": {
                    "type": "string"
                }, 
                "requestingServiceId": {
                    "type": "string"
                }, 
                "requestedFor": {
                    "type": "string"
                }, 
                "requestClassId": {
                    "type": "string"
                }, 
                "requestedItemName": {
                    "type": "string"
                }, 
                "requestReasons": {
                    "type": "string"
                }, 
                "requestedItemApprovals": {
                    "items": {
                        "$ref": "#/definitions/RequestedItemApprovalInfo"
                    }, 
                    "type": "array"
                }, 
                "state": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "UNINITIATED", 
                        "PENDING", 
                        "APPROVED", 
                        "REJECTED", 
                        "IN_ERROR"
                    ], 
                    "type": "string"
                }, 
                "costs": {
                    "$ref": "#/definitions/ApprovalRequestCosts"
                }, 
                "requestDescription": {
                    "type": "string"
                }, 
                "subTenantId": {
                    "type": "string"
                }, 
                "requestRef": {
                    "type": "string"
                }, 
                "requestedBy": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "GreaterThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "RequestedItemApprovalStatusInfo": {
            "discriminator": "type", 
            "required": [
                "context", 
                "phase", 
                "policy", 
                "policyType", 
                "requestClassId", 
                "requestInstanceId", 
                "requestedItemName", 
                "requestingServiceId"
            ], 
            "type": "object", 
            "properties": {
                "requestInstanceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedItemDescription": {
                    "type": "string"
                }, 
                "subTenantId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestingServiceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedFor": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "startTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "hasSourceDetailsForm": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "completionTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "requestRef": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestClassId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedItemName": {
                    "type": "string"
                }, 
                "requestReasons": {
                    "type": "string"
                }, 
                "phase": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }, 
                "state": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "UNINITIATED", 
                        "PENDING", 
                        "APPROVED", 
                        "REJECTED", 
                        "IN_ERROR"
                    ], 
                    "type": "string"
                }, 
                "costs": {
                    "$ref": "#/definitions/ApprovalRequestCosts"
                }, 
                "policyType": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }, 
                "requestDescription": {
                    "type": "string"
                }, 
                "context": {
                    "$ref": "#/definitions/DataContext"
                }, 
                "policy": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }, 
                "requestedBy": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "StaticPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "values": {
                            "xml": {
                                "name": "value"
                            }, 
                            "items": {
                                "$ref": "#/definitions/value"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "LiteralMapEntry": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/literal"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "LayoutFlowElement": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ResetValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "dateTimeLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "dateTimeLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The date.", 
                            "format": "date-time"
                        }
                    }, 
                    "description": "Wraps a Date & Time value. This is a wrapper for the Java {@link Date} class."
                }
            ]
        }, 
        "IncrementBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "AndClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "RequestedItemApproval": {
            "required": [
                "context", 
                "phaseId", 
                "policy", 
                "requestClassId", 
                "requestInstanceId", 
                "requestedItemName", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "requestInstanceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedItemDescription": {
                    "type": "string"
                }, 
                "phaseDecision": {
                    "$ref": "#/definitions/PhaseDecision"
                }, 
                "context": {
                    "$ref": "#/definitions/DataContext"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "completionTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "requestClassId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 50
                }, 
                "requestedItemName": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 1023
                }, 
                "costs": {
                    "$ref": "#/definitions/ApprovalRequestCosts"
                }, 
                "state": {
                    "enum": [
                        "UNINITIATED", 
                        "PENDING", 
                        "APPROVED", 
                        "REJECTED", 
                        "IN_ERROR"
                    ], 
                    "type": "string"
                }, 
                "version": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "startTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "policy": {
                    "$ref": "#/definitions/ApprovalPolicy"
                }, 
                "phaseId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "phaseNumber": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "CustomPropertyDefinitionMetadata": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "required": [
                        "field"
                    ], 
                    "type": "object", 
                    "properties": {
                        "field": {
                            "$ref": "#/definitions/Field"
                        }
                    }
                }
            ]
        }, 
        "batchElementUpdateRequest": {
            "xml": {
                "name": "batchElementUpdateRequest"
            }, 
            "required": [
                "formValues"
            ], 
            "type": "object", 
            "properties": {
                "trigger": {
                    "type": "string"
                }, 
                "affectedElements": {
                    "xml": {
                        "wrapped": true
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "formValues": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "triggeredDetailsLayout": {
                    "$ref": "#/definitions/layout"
                }
            }
        }, 
        "LayoutField": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutFlowElement"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "extensionRendererContext": {
                            "$ref": "#/definitions/ExtensionRendererContext"
                        }, 
                        "description": {
                            "type": "string"
                        }, 
                        "dataType": {
                            "$ref": "#/definitions/DataType"
                        }, 
                        "permissibleValues": {
                            "$ref": "#/definitions/PermissibleValueList"
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "displayAdvice": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "TEXTBOX", 
                                "HYPERLINK", 
                                "EMAIL", 
                                "TEXTAREA", 
                                "DATE_TIME_PICKER", 
                                "CHECKBOX", 
                                "YES_NO", 
                                "CHECKBOX_GROUP", 
                                "DUAL_LIST", 
                                "RADIO_GROUP", 
                                "DROPDOWN", 
                                "LIST", 
                                "SEARCHER", 
                                "TREE", 
                                "FORM", 
                                "IMAGE", 
                                "SLIDER", 
                                "DATA_TABLE", 
                                "VALUE_PICKER"
                            ], 
                            "type": "string"
                        }, 
                        "orderIndex": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "isMultiValued": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "labelSize": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "columns": {
                            "xml": {
                                "wrapped": true, 
                                "name": "column"
                            }, 
                            "items": {
                                "$ref": "#/definitions/LayoutField"
                            }, 
                            "type": "array"
                        }, 
                        "detailLayout": {
                            "$ref": "#/definitions/LayoutReference"
                        }
                    }
                }
            ]
        }, 
        "NullDisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SupersetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ApprovalLevel": {
            "xml": {
                "name": "ApprovalLevel"
            }, 
            "required": [
                "approvalMode", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "levelNumber": {
                    "minimum": 1.0, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "editSchema": {
                    "$ref": "#/definitions/FieldList"
                }, 
                "approvers": {
                    "items": {
                        "$ref": "#/definitions/ApprovalPrincipal"
                    }, 
                    "type": "array"
                }, 
                "external": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "criteria": {
                    "$ref": "#/definitions/Clause"
                }, 
                "approvalMode": {
                    "enum": [
                        "ANY", 
                        "ALL"
                    ], 
                    "type": "string"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "NotClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClause": {
                            "$ref": "#/definitions/Clause"
                        }
                    }
                }
            ]
        }, 
        "LayoutSection": {
            "type": "object", 
            "properties": {
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "rows": {
                    "xml": {
                        "wrapped": true, 
                        "name": "row"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutRow"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "ConditionalEvaluatorCase": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "condition": {
                    "$ref": "#/definitions/Clause"
                }
            }
        }, 
        "FormReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "literal": {
            "xml": {
                "name": "literal"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "description": "Wraps a value such that values of different types can be treated generically."
        }, 
        "FieldList": {
            "type": "object", 
            "properties": {
                "fields": {
                    "items": {
                        "$ref": "#/definitions/FieldInsinuation"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "DynamicLayoutReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        }, 
        "Approval": {
            "required": [
                "requestedItemApprovals", 
                "requestingServiceId", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "requestingServiceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "requestClassId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 50
                }, 
                "subTenantId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "requestedItemDescription": {
                    "type": "string"
                }, 
                "requestedItemName": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 1023
                }, 
                "requestReasons": {
                    "type": "string"
                }, 
                "state": {
                    "enum": [
                        "UNINITIATED", 
                        "PENDING", 
                        "APPROVED", 
                        "REJECTED", 
                        "IN_ERROR"
                    ], 
                    "type": "string"
                }, 
                "version": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "requestedBy": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestInstanceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedFor": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedItemApprovals": {
                    "items": {
                        "$ref": "#/definitions/RequestedItemApproval"
                    }, 
                    "type": "array"
                }, 
                "completionTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "startTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "detailsForm": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "costs": {
                    "$ref": "#/definitions/ApprovalRequestCosts"
                }, 
                "requestDescription": {
                    "type": "string"
                }, 
                "requestRef": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "PageApproval": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/Approval"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "entityRefEx": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRefEx"
                    }, 
                    "type": "object", 
                    "properties": {
                        "href": {
                            "type": "string", 
                            "description": "the Href"
                        }
                    }, 
                    "description": "Represents a reference to an entity by uri"
                }
            ]
        }, 
        "ApprovalRequestInfo": {
            "required": [
                "level", 
                "requestedItemApproval"
            ], 
            "type": "object", 
            "properties": {
                "workItem": {
                    "$ref": "#/definitions/ApprovalWorkItemInfo"
                }, 
                "level": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }, 
                "infoItems": {
                    "items": {
                        "$ref": "#/definitions/ApprovalRequestItemInfo"
                    }, 
                    "type": "array"
                }, 
                "approver": {
                    "items": {
                        "$ref": "#/definitions/ApprovalPrincipal"
                    }, 
                    "type": "array"
                }, 
                "completionAction": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "APPROVE", 
                        "REJECT", 
                        "NONE"
                    ], 
                    "type": "string"
                }, 
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "state": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "NOT_REQUESTED_YET", 
                        "PENDING", 
                        "COMPLETED", 
                        "NOT_NECESSARY"
                    ], 
                    "type": "string"
                }, 
                "businessJustification": {
                    "type": "string"
                }, 
                "requestedItemApproval": {
                    "$ref": "#/definitions/RequestedItemApprovalStatusInfo"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "form": {
            "xml": {
                "name": "form"
            }, 
            "type": "object", 
            "properties": {
                "values": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "layout": {
                    "$ref": "#/definitions/layout"
                }, 
                "fieldPrefixes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "Constraint": {
            "discriminator": "type", 
            "required": [
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }
            }
        }, 
        "ApprovalRequestStatusInfo": {
            "type": "object", 
            "properties": {
                "completionDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "assignDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "workItemNumber": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "workItemId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "completionAction": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "APPROVE", 
                        "REJECT", 
                        "NONE"
                    ], 
                    "type": "string"
                }, 
                "state": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "NOT_REQUESTED_YET", 
                        "PENDING", 
                        "COMPLETED", 
                        "NOT_NECESSARY"
                    ], 
                    "type": "string"
                }, 
                "completedBy": {
                    "type": "string"
                }, 
                "approvers": {
                    "items": {
                        "$ref": "#/definitions/ApprovalPrincipal"
                    }, 
                    "type": "array"
                }, 
                "businessJustification": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "DynamicDataResponse": {
            "type": "object", 
            "properties": {
                "values": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "LayoutReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "BooleanLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "booleanLiteral"
                    }, 
                    "type": "object", 
                    "description": "Wraps a boolean value."
                }
            ]
        }, 
        "IaasPropertyNameBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "CustomValidationConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "workItemCallbackAction": {
            "xml": {
                "name": "workItemCallbackAction"
            }, 
            "type": "object", 
            "properties": {
                "completeActionId": {
                    "type": "string"
                }, 
                "formData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "workItemId": {
                    "type": "string"
                }, 
                "targetId": {
                    "type": "string"
                }, 
                "workItemTypeId": {
                    "type": "string"
                }, 
                "assignee": {
                    "type": "string"
                }, 
                "completedDate": {
                    "type": "string", 
                    "format": "date-time"
                }
            }
        }, 
        "ApprovalPolicy": {
            "xml": {
                "name": "ApprovalPolicy"
            }, 
            "required": [
                "name", 
                "phases", 
                "policyType", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "phases": {
                    "minItems": 1, 
                    "items": {
                        "$ref": "#/definitions/Phase"
                    }, 
                    "type": "array", 
                    "maxItems": 2147483647
                }, 
                "typeFilter": {
                    "type": "string"
                }, 
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "approvableItemServiceTypeId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "stateName": {
                    "type": "string"
                }, 
                "lastModifiedBy": {
                    "type": "string"
                }, 
                "state": {
                    "enum": [
                        "DRAFT", 
                        "PUBLISHED", 
                        "RETIRED"
                    ], 
                    "type": "string"
                }, 
                "version": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "policyType": {
                    "$ref": "#/definitions/ApprovalPolicyType"
                }, 
                "approvableItemName": {
                    "type": "string"
                }, 
                "createdBy": {
                    "type": "string"
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "approvableItemId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "Expression": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "operator": {
                            "$ref": "#/definitions/CriteriaOperator"
                        }, 
                        "rightOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }, 
                        "leftOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "ElementValuesPagingInfo": {
            "type": "object", 
            "properties": {
                "count": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "offset": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "DynamicValueContext": {
            "required": [
                "parameterMappings"
            ], 
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "providerEntityId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "RequestedItem": {
            "required": [
                "context", 
                "phaseId", 
                "policyId", 
                "requestClassId", 
                "requestInstanceId", 
                "requestedItemName"
            ], 
            "type": "object", 
            "properties": {
                "requestInstanceId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "requestedItemDescription": {
                    "type": "string"
                }, 
                "requestClassId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 50
                }, 
                "requestedItemName": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 1023
                }, 
                "costs": {
                    "$ref": "#/definitions/ApprovalRequestCosts"
                }, 
                "policyId": {
                    "type": "string"
                }, 
                "context": {
                    "$ref": "#/definitions/DataContext"
                }, 
                "phaseId": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "WithinOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DefaultValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "StaticLayout": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutReference"
                }, 
                {
                    "required": [
                        "layout"
                    ], 
                    "type": "object", 
                    "properties": {
                        "layout": {
                            "$ref": "#/definitions/layout"
                        }
                    }
                }
            ]
        }, 
        "ApprovalPhaseType": {
            "required": [
                "id"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "allowUpdates": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "phaseOrder": {
                    "minimum": 0.0, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "forms": {
                    "$ref": "#/definitions/ApprovalForms"
                }, 
                "id": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "MaxValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "FieldInsinuation": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "EntityReferenceDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DynamicDataRequest": {
            "type": "object", 
            "properties": {
                "ignoreUnknownFields": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "ids": {
                    "xml": {
                        "name": "id"
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "tenantId": {
                    "type": "string"
                }
            }
        }, 
        "MonetaryValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "literal"
                    }, 
                    "type": "object", 
                    "properties": {
                        "currencyCode": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The ISO 4217 code used to identify the currency (if any) associated with this value."
                        }
                    }, 
                    "description": "Base type for representing monetary values, encapsulating both some kind of quantity and a currency."
                }
            ]
        }, 
        "DataContext": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "money": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "money"
                    }, 
                    "type": "object", 
                    "properties": {
                        "amount": {
                            "type": "number", 
                            "description": "The amount associated with this value (with no specific currency).", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a single, precise monetary value."
                }
            ]
        }, 
        "ApprovalLevelDecision": {
            "type": "object", 
            "properties": {
                "level": {
                    "$ref": "#/definitions/ApprovalLevel"
                }, 
                "phaseNumber": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "state": {
                    "enum": [
                        "UNINITIATED", 
                        "PENDING", 
                        "APPROVED", 
                        "REJECTED", 
                        "IN_ERROR"
                    ], 
                    "type": "string"
                }, 
                "completionTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "startTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "approvalMode": {
                    "enum": [
                        "ANY", 
                        "ALL"
                    ], 
                    "type": "string"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "approvalRequests": {
                    "items": {
                        "$ref": "#/definitions/ApprovalRequest"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "TimeSpan": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "timeSpan"
                    }, 
                    "type": "object", 
                    "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
                }
            ]
        }, 
        "ExternalValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "dynamicValueProviderInfo"
                    ], 
                    "type": "object", 
                    "properties": {
                        "dynamicValueProviderInfo": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "ContainsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Field": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "dataType": {
                    "$ref": "#/definitions/DataType"
                }, 
                "permissibleValues": {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                "label": {
                    "type": "string"
                }, 
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "displayAdvice": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "TEXTBOX", 
                        "HYPERLINK", 
                        "EMAIL", 
                        "TEXTAREA", 
                        "DATE_TIME_PICKER", 
                        "CHECKBOX", 
                        "YES_NO", 
                        "CHECKBOX_GROUP", 
                        "DUAL_LIST", 
                        "RADIO_GROUP", 
                        "DROPDOWN", 
                        "LIST", 
                        "SEARCHER", 
                        "TREE", 
                        "FORM", 
                        "IMAGE", 
                        "SLIDER", 
                        "DATA_TABLE", 
                        "VALUE_PICKER"
                    ], 
                    "type": "string"
                }, 
                "orderIndex": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "isMultiValued": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "columns": {
                    "xml": {
                        "wrapped": true, 
                        "name": "column"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "FacetValueMap": {
            "type": "object", 
            "properties": {
                "facets": {
                    "xml": {
                        "wrapped": true, 
                        "name": "facet"
                    }, 
                    "items": {
                        "$ref": "#/definitions/FacetValueMapEntry"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "UnspecifiedEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "integerLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "integerLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "integer", 
                            "description": "The integer value.", 
                            "format": "int64"
                        }
                    }, 
                    "description": "Wraps a signed 64-bit integer value."
                }
            ]
        }, 
        "LessThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "IsDefinedOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Schema": {
            "type": "object", 
            "properties": {
                "fields": {
                    "xml": {
                        "name": "field"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                }
            }
        }, 
        "Sort": {
            "type": "object"
        }, 
        "moneyRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "cost": {
                            "description": "The cost (including optional currency code).", 
                            "$ref": "#/definitions/literal"
                        }
                    }, 
                    "description": "A base type for literals representing a rate of some monetary value over a specified basis. E.g. $5 / hour; $1-2 / GB."
                }
            ]
        }, 
        "FieldReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "path": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "LayoutExtension": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "fieldPrefix": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "extensionId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "extensionPointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ConditionalEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "cases": {
                            "xml": {
                                "name": "case"
                            }, 
                            "items": {
                                "$ref": "#/definitions/ConditionalEvaluatorCase"
                            }, 
                            "type": "array"
                        }, 
                        "defaulValue": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "ApprovalPrincipal": {
            "required": [
                "type", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "displayName": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "type": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "USER", 
                        "GROUP", 
                        "EXPRESSION"
                    ], 
                    "type": "string"
                }, 
                "value": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 5000
                }
            }
        }, 
        "ApprovableItem": {
            "type": "object", 
            "properties": {
                "typeFilter": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "resourceType": {
                    "type": "string"
                }, 
                "policyTypeId": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "LayoutPlaceholderCell": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "layout": {
            "xml": {
                "name": "layout"
            }, 
            "type": "object", 
            "properties": {
                "pages": {
                    "xml": {
                        "wrapped": true, 
                        "name": "page"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutPage"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ReadOnlyConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MultipleEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "items"
                    ], 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "Phase": {
            "xml": {
                "name": "Phase"
            }, 
            "required": [
                "phasetype"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "levels": {
                    "items": {
                        "$ref": "#/definitions/ApprovalLevel"
                    }, 
                    "type": "array"
                }, 
                "phasetype": {
                    "$ref": "#/definitions/ApprovalPhaseType"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "MinCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ApprovalRequest": {
            "type": "object", 
            "properties": {
                "version": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "workItemNumber": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "wiqServiceId": {
                    "type": "string"
                }, 
                "workItemId": {
                    "type": "string"
                }, 
                "creationTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "state": {
                    "enum": [
                        "NOT_REQUESTED_YET", 
                        "PENDING", 
                        "COMPLETED", 
                        "NOT_NECESSARY"
                    ], 
                    "type": "string"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "assignTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "completionTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "approvers": {
                    "items": {
                        "$ref": "#/definitions/ApprovalPrincipal"
                    }, 
                    "type": "array"
                }, 
                "businessJustification": {
                    "type": "string"
                }, 
                "action": {
                    "enum": [
                        "APPROVE", 
                        "REJECT", 
                        "NONE"
                    ], 
                    "type": "string"
                }, 
                "completedBy": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }
            }
        }, 
        "LayoutText": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutFlowElement"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "timeSpan": {
            "xml": {
                "name": "timeSpan"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "amount": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "description": "The amount for the time span.", 
                    "format": "int64"
                }, 
                "unit": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "MILLISECONDS", 
                        "SECONDS", 
                        "MINUTES", 
                        "HOURS", 
                        "DAYS", 
                        "WEEKS", 
                        "MONTHS", 
                        "YEARS"
                    ], 
                    "type": "string", 
                    "description": "The unit of measure for the time span. e.g: days."
                }
            }, 
            "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
        }, 
        "ApprovalLevelStatusInfo": {
            "required": [
                "level"
            ], 
            "type": "object", 
            "properties": {
                "currentApprover": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/ApprovalPrincipal"
                    }, 
                    "type": "array"
                }, 
                "level": {
                    "$ref": "#/definitions/ApprovalDescriptiveReference"
                }, 
                "request": {
                    "items": {
                        "$ref": "#/definitions/ApprovalRequestStatusInfo"
                    }, 
                    "type": "array"
                }, 
                "state": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "UNINITIATED", 
                        "PENDING", 
                        "APPROVED", 
                        "REJECTED", 
                        "IN_ERROR"
                    ], 
                    "type": "string"
                }, 
                "completionTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "mode": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "ANY", 
                        "ALL"
                    ], 
                    "type": "string"
                }, 
                "startTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "secureString": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "secureString"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a secured string value, such as a password."
                }
            ]
        }, 
        "FacetValueMapEntry": {
            "type": "object", 
            "properties": {
                "type": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "value": {
                    "$ref": "#/definitions/literal"
                }
            }
        }, 
        "LayoutPage": {
            "type": "object", 
            "properties": {
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "sections": {
                    "xml": {
                        "wrapped": true, 
                        "name": "section"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutSection"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "PageApprovableItem": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/ApprovableItem"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "decimalLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "decimalLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "number", 
                            "description": "The decimal value.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Wraps a decimal value."
                }
            ]
        }, 
        "CriteriaOperator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "InternalConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "updateElementEntry": {
            "xml": {
                "name": "updateElementEntry"
            }, 
            "type": "object", 
            "properties": {
                "errors": {
                    "xml": {
                        "wrapped": true, 
                        "name": "error"
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "detailLayout": {
                    "$ref": "#/definitions/layout"
                }, 
                "facetValues": {
                    "$ref": "#/definitions/FacetValueMap"
                }, 
                "permissibleValues": {
                    "xml": {
                        "wrapped": true, 
                        "name": "value"
                    }, 
                    "items": {
                        "$ref": "#/definitions/value"
                    }, 
                    "type": "array"
                }, 
                "extensionRendererContext": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "DataType": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "typeId": {
                    "enum": [
                        "STRING", 
                        "INTEGER", 
                        "DECIMAL", 
                        "MONEY", 
                        "MONEY_RANGE", 
                        "MONEY_TIME_RATE", 
                        "BOOLEAN", 
                        "ENTITY_REFERENCE", 
                        "DATE_TIME", 
                        "TIME_SPAN", 
                        "SECURE_STRING", 
                        "COMPLEX"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "EditableBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DynamicPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }, 
                        "context": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "EncryptedBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ObjectDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "label": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ApprovalRequestCosts": {
            "type": "object", 
            "properties": {
                "quoteProvided": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "totalLeaseCost": {
                    "$ref": "#/definitions/literal"
                }, 
                "leaseForDisplay": {
                    "$ref": "#/definitions/timeSpan"
                }, 
                "leaseRate": {
                    "$ref": "#/definitions/moneyTimeRate"
                }, 
                "lease": {
                    "$ref": "#/definitions/timeSpan"
                }
            }
        }, 
        "MinLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }
    }, 
    "swagger": "2.0"
}