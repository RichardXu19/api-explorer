{
    "info": {
        "version": "7.3.0-SNAPSHOT", 
        "description": "# Portal Service", 
        "title": "Portal Services API"
    }, 
    "paths": {
        "/api/portals/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "UUID of the portal to update", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/Portal"
                        }, 
                        "description": "UUID of the portal to update", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portal"
                ], 
                "description": "Updates the portal with the changed attributes supplied in the PUT request. Sets the userIDbased on the value received in the SSO token. Overrides the implementation in the AbstractCrudController.", 
                "summary": "Update portal", 
                "operationId": "updateOrCreatePortal"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "the id of the portal", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "portal"
                ], 
                "description": "Remove the portal matching the provided id.", 
                "summary": "Remove a portal", 
                "operationId": "deletePortal"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Portal"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the id of the portal", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "portal"
                ], 
                "description": "", 
                "summary": "Gets the portal identified by id", 
                "operationId": "getPortalById"
            }
        }, 
        "/api/portals": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Portal"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Portal"
                        }, 
                        "description": "The portal to create", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portal"
                ], 
                "description": "Creates the portal with populated attributes. Sets the userID based on the value received inthe SSO token. Invokes the base class implementation to create the portal.", 
                "summary": "Create portal", 
                "operationId": "createPortal"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "summary": "Returns a page of the resources"
            }
        }, 
        "/api/portals/name/{name}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Portal"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The name of the portal to get", 
                        "required": true, 
                        "type": "string", 
                        "name": "name", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "portal"
                ], 
                "description": "Retrieves the portal corresponding to the name.", 
                "summary": "Get portal", 
                "operationId": "getPortalByName"
            }
        }, 
        "/api/portletconfigurations/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The UUID of the config to update", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/PortletConfiguration"
                        }, 
                        "description": "The portlet config to update", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portlet-config"
                ], 
                "description": "Updates the portlet config corresponding to the UUID.", 
                "summary": "Update portlet configuration", 
                "operationId": "createOrUpdatePortletConfig"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The UUID of the config to delete", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "portlet-config"
                ], 
                "description": "Deletes the portlet config corresponding to the UUID.", 
                "summary": "Delete a portlet configuration", 
                "operationId": "deletePortletConfig"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PortletConfiguration"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the id of the portlet configuration", 
                        "format": "uuid", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "portlet-config"
                ], 
                "description": "", 
                "summary": "Gets the portlet configuration identified by id", 
                "operationId": "getPortletConfig"
            }
        }, 
        "/api/portletconfigurations": {
            "post": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PortletConfiguration"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PortletConfiguration"
                        }, 
                        "description": "The portlet config to create", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portlet-config"
                ], 
                "description": "Creates a new portlet config.", 
                "summary": "Create a portlet configuration", 
                "operationId": "createPortletConfig"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "summary": "Returns a page of the resources"
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "tags": [
        {
            "name": "portal"
        }, 
        {
            "name": "portlet-config"
        }
    ], 
    "basePath": "/", 
    "definitions": {
        "PortletPreferenceValue": {
            "type": "object", 
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        }, 
        "PortletPreference": {
            "type": "object", 
            "properties": {
                "portletPreferenceValues": {
                    "items": {
                        "$ref": "#/definitions/PortletPreferenceValue"
                    }, 
                    "type": "array"
                }, 
                "key": {
                    "type": "string"
                }
            }
        }, 
        "Portal": {
            "type": "object", 
            "properties": {
                "portletConfigurations": {
                    "items": {
                        "$ref": "#/definitions/PortletConfiguration"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string"
                }, 
                "userId": {
                    "type": "string"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "columnLengths": {
                    "items": {
                        "type": "integer", 
                        "format": "int32"
                    }, 
                    "type": "array"
                }, 
                "layoutType": {
                    "enum": [
                        "SINGLE_COLUMN", 
                        "TWO_COLUMN_EVEN", 
                        "TWO_COLUMN_WIDE_RIGHT", 
                        "TWO_COLUMN_WIDE_LEFT", 
                        "THREE_COLUMN_EVEN", 
                        "THREE_COLUMN_WIDE_CENTER", 
                        "FOUR_COLUMN_EVEN"
                    ], 
                    "type": "string"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }
            }
        }, 
        "PortletConfiguration": {
            "type": "object", 
            "properties": {
                "portletPreferences": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PortletPreference"
                    }, 
                    "type": "object"
                }, 
                "state": {
                    "enum": [
                        "NORMAL", 
                        "MINIMIZED", 
                        "MAXIMIZED"
                    ], 
                    "type": "string"
                }, 
                "extensionId": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "mode": {
                    "type": "string"
                }
            }
        }
    }, 
    "swagger": "2.0"
}