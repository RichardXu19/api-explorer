{
    "info": {
        "version": "7.3.0-SNAPSHOT", 
        "description": "# Network Service API Specification", 
        "title": "Network Service API"
    }, 
    "paths": {
        "/api/data-service/schema/{classId}/instances/{id}/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "summary": "Get the state of a field in the specified schema", 
                "description": "Get the state of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique identifier of an instance of the object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/security-policies/types/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Security policy type created or updated successfully", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security Policy type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityPolicyType"
                        }, 
                        "description": "Security Policy type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Updates a security policy type by its ID", 
                "operationId": "updateOrCreateSecurityPolicyType"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "Security policy type deleted successfully"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security Policy type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Deletes a security policy type by its ID", 
                "operationId": "deleteSecurityPolicyType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned security policy type", 
                        "schema": {
                            "$ref": "#/definitions/SecurityPolicyType"
                        }
                    }, 
                    "404": {
                        "description": "Security policy type not found with provided id"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security Policy type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Get the security policy type by ID", 
                "operationId": "getSecurityPolicyType"
            }
        }, 
        "/api/data-service/schema/{classId}/default/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "summary": "Get the state of a field in the specified schema", 
                "description": "Get the state of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/data-service/list/{classId}/default": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Retrieves the list of possible values for a given type of object", 
                "description": "Retrieves the list of possible values for a given type of object.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/security-policies/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Security policy returned successfully", 
                        "schema": {
                            "$ref": "#/definitions/SecurityPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security policy ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": " Returns the security policy associated with the given id", 
                "operationId": "getSecurityPolicy"
            }
        }, 
        "/api/security-groups/{id}/machines": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Security group assigned to machine(s) successfully"
                    }
                }, 
                "summary": "Assign the security group to the specified machine(s)", 
                "description": "", 
                "parameters": [
                    {
                        "description": "The ID of the security group", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "description": "Collection of machine IDs", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component"
                ]
            }
        }, 
        "/api/security-groups": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SecurityGroup"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroup"
                        }, 
                        "description": "The security group to be found or created", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "In case of an existing security group, the api returns the security group object based on external id or name", 
                "summary": "Create and return the newly created on-demand security group", 
                "operationId": "createSecurityGroup"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageSecurityGroup"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging and sorting criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "description": "Endpoint name for filtering the security groups", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Returns a collection of security groups with specified paging, sorting and filtering parameters", 
                "operationId": "listSecurityGroups"
            }
        }, 
        "/api/providers/{providerId}/allocation-requests/{bindingId}/complete": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Indicate completion of a request"
                    }
                }, 
                "summary": "Method to be called by a provider to notify the network service that a previously submitted allocation request has been completed", 
                "description": "Callback called by the provider iaas-proxy", 
                "parameters": [
                    {
                        "description": "Provider ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "providerId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Binding ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "bindingId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/allocationRequestCompletion"
                        }, 
                        "description": "Status object returned from the provider", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ]
            }
        }, 
        "/api/security-tags/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Security tag returned successfully", 
                        "schema": {
                            "$ref": "#/definitions/SecurityTag"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security tag ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Returns the security tag associated with the given id", 
                "operationId": "getSecurityTags"
            }
        }, 
        "/api/security-tags/applyToMachine/{machineId}": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Successfully applied security tags to machines"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Machine ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "machineId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "description": "Collection of security tag IDs", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Apply a collection of security tags to a machine", 
                "operationId": "applyToMachineSecurityTags"
            }
        }, 
        "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Get the permissible values of a field in the specified schema", 
                "description": "Get the permissible values of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "A type filter defining the specific subtype that owns the field.", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a field on the schema of the specified object class.", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/load-balancers/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned Load balancer", 
                        "schema": {
                            "$ref": "#/definitions/LoadBalancer"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Load balancer ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Retrieve a load balancer by ID", 
                "operationId": "getLoadBalancer"
            }
        }, 
        "/api/networks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Network created successfully", 
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }, 
                        "description": "The network object to be created", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Create a network", 
                "operationId": "createNetwork"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageNetwork"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging and sorting criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Returns a collection of networks with specified paging, sorting and filtering parameters", 
                "operationId": "listNetworks"
            }
        }, 
        "/api/composition/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Provisioned request created", 
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/compositionProviderRequest"
                        }, 
                        "description": "Provisioning request from composition service", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ], 
                "description": "", 
                "summary": "New request for provisioning network or security components", 
                "operationId": "provision"
            }
        }, 
        "/api/security-groups/types": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Security group type created successfully", 
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupType"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupType"
                        }, 
                        "description": "Security group type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Create a security group type", 
                "operationId": "createSecurityGroupType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageSecurityGroupType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Returns a collection of security group types with specified paging, sorting and filtering parameters", 
                "operationId": "listSecurityGroupTypes"
            }
        }, 
        "/api/composition/componentdeallocator/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": "De-allocation of component initiated."
                    }
                }, 
                "summary": "De-allocate network or security component", 
                "description": "Destroy the network or security components. Called as day-2 destroy operation. ", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/compositionProviderRequest"
                        }, 
                        "description": "Composition request, includes component info", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ]
            }
        }, 
        "/api/security-policies/types": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Security policy type created successfully", 
                        "schema": {
                            "$ref": "#/definitions/SecurityPolicyType"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SecurityPolicyType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityPolicyType"
                        }, 
                        "description": "Security policy type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Create a security policy type", 
                "operationId": "createSecurityPolicyType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageSecurityPolicyType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging, sorting and filtering criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Returns a collection of security policy types with specified paging, sorting and filtering parameters", 
                "operationId": "listSecurityPolicyType"
            }
        }, 
        "/api/data-service/schema/{classId}/types/{typeFilter}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "summary": "Get the schema for the specified object type", 
                "description": "This returns the schema of a particular type within a class of object.", 
                "parameters": [
                    {
                        "description": "The class of object to retrieve the schema for.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "A type filter defining the specific subtype that owns the field.", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/composition/allocationconstraints/resourcetypes/{resTypeId}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Retrieve allocation constraint", 
                        "schema": {
                            "$ref": "#/definitions/allocationConstraint"
                        }
                    }
                }, 
                "summary": "Retrieve allocation constraint for network or security component", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/compositionProviderRequest"
                        }, 
                        "description": "Provisioning request from the composition service", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Component type ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "resTypeId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Component type ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "componenttypeid", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-request"
                ]
            }
        }, 
        "/api/networks/{id}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "Network deleted successfully"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Network ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Delete a network", 
                "operationId": "deleteNetwork"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned network", 
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }, 
                    "404": {
                        "description": "Network not found with the provided id"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Network ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Retrieve a network", 
                "operationId": "getNetwork"
            }
        }, 
        "/api/data-service/data/{classId}/{id}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/DynamicDataResponse"
                        }
                    }
                }, 
                "summary": "Get a set of data for the specified object", 
                "description": "Get a set of data for the specified object.", 
                "parameters": [
                    {
                        "description": "The identifier of the type of object to get data for.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique id of the object to get data for. This should be sufficient to identify the object given classId.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/DynamicDataRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/data-service/schema/{classId}/default/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Get the permissible values of a field in the specified schema", 
                "description": "Get the permissible values of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a field on the schema of the specified object class.", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/load-balancers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageLoadBalancer"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging and sorting criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Returns a collection of load balancers with specified paging, sorting and filtering parameters", 
                "operationId": "listLoadBalancers"
            }
        }, 
        "/api/security-groups/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the security group", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroup"
                        }, 
                        "description": "The security group to be updated", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Update the security group identified by its ID", 
                "operationId": "updateSecurityGroup"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "Security group deleted successfully"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the security group", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Delete the security group identified by its ID", 
                "operationId": "deleteSecurityGroup"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Security group returned successfully", 
                        "schema": {
                            "$ref": "#/definitions/SecurityGroup"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the security group", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Retrieve the security group identified by its ID", 
                "operationId": "getSecurityGroup"
            }
        }, 
        "/api/networks/types/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Network type created or updated successfully", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Network type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkType"
                        }, 
                        "description": "Network type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Create or update a network type", 
                "operationId": "createOrUpdateNetworkType"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successfully deleted network type"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the network type", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Delete a network type", 
                "operationId": "deleteNetworkType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned network type", 
                        "schema": {
                            "$ref": "#/definitions/NetworkType"
                        }
                    }, 
                    "404": {
                        "description": "Network type not found with the provided id"
                    }
                }, 
                "parameters": [
                    {
                        "description": "The network type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Get a network type by ID", 
                "operationId": "getNetworkType"
            }
        }, 
        "/api/load-balancers/types": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Load balancer type created successfully", 
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerType"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerType"
                        }, 
                        "description": "Load balancer type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Create a load balancer type", 
                "operationId": "createLoadBalancerType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageLoadBalancerType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging and sorting criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Returns a collection of load balancer types with specified paging, sorting and filtering parameters", 
                "operationId": "listLoadBalancerTypes"
            }
        }, 
        "/api/security-groups/types/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Security group type created or updated successfully", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security group type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupType"
                        }, 
                        "description": "Security group type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Updates a security group type by its ID", 
                "operationId": "updateOrCreateSecurityGroupType"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "Security group type deleted successfully"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security group type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Deletes a security group type by its ID", 
                "operationId": "deleteSecurityGroupType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned security group type", 
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupType"
                        }
                    }, 
                    "404": {
                        "description": "Security group type not found with provided id"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security group type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Get the security group type by ID", 
                "operationId": "getSecurityGroupType"
            }
        }, 
        "/api/load-balancers/types/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Load balancer type created or updated successfully", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Load balancer type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerType"
                        }, 
                        "description": "Load balancer type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Create or update a load balancer type", 
                "operationId": "updateOrCreateLoadBalancerType"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "Load balancer type deleted Successfully"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Load balancer type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Delete a load balancer type", 
                "operationId": "deleteLoadBalancerType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned load balancer type", 
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerType"
                        }
                    }, 
                    "404": {
                        "description": "Load balancer type not found with the provided id"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Load balancer type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Retrieve load balancer type by ID", 
                "operationId": "getLoadBalancerType"
            }
        }, 
        "/api/security-groups/{id}/security-policies": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Added a list of security policies to an on-demand security group successfully"
                    }
                }, 
                "summary": "Add a list of security policies to an on-demand security group", 
                "description": "", 
                "parameters": [
                    {
                        "description": "The ID of the security group", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "description": "List of security policy IDs", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component"
                ]
            }
        }, 
        "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Get the permissible values of a field in the specified schema", 
                "description": "Get the permissible values of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique identifier of an instance of the object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a field on the schema of the specified object class.", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/requestValidations": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRequest"
                        }, 
                        "description": "Service Catalog representation of a blueprint request.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ], 
                "description": "", 
                "summary": "Validate catalog request", 
                "operationId": "validateRequest"
            }
        }, 
        "/api/data-service/schema/{classId}/types/{typeFilter}/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/formUpdateResponse"
                        }
                    }
                }, 
                "summary": "Get the state of a field in the specified schema", 
                "description": "Get the state of a field in the specified schema.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "A type filter defining the specific subtype that owns the field.", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/batchElementUpdateRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/catalog/providers/{providerId}/requests/{bindingId}/complete": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Indicate completion of a request"
                    }
                }, 
                "summary": "FIXME AARON HACKED THIS METHOD Method to be called by a composition-service to notify the network-service that a previously submitted deployment update request has been completed", 
                "description": "Callback called by composition", 
                "parameters": [
                    {
                        "description": "Provider ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "providerId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Binding ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "bindingId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/requestCompletion"
                        }, 
                        "description": "Status object returned from the provider", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request", 
                    "some-fixme-tag", 
                    "A Tag With Spaces", 
                    "data-service"
                ]
            }
        }, 
        "/api/data-service/schema/{classId}/default": {
            "get": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "summary": "Get the schema for the specified object class", 
                "description": "Get the schema for the specified object class.", 
                "parameters": [
                    {
                        "description": "The class of object to retrieve the schema for.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/data-service/list/{classId}/types/{typeFilter}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "summary": "Retrieves the list of possible values for a given type of object", 
                "description": "Retrieves the list of possible values for a given type of object.", 
                "parameters": [
                    {
                        "description": "The class of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "A type filter defining the specific subtype that owns the field.", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/networks/types": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Network type created successfully", 
                        "schema": {
                            "$ref": "#/definitions/NetworkType"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/NetworkType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkType"
                        }, 
                        "description": "Network type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Create a network type", 
                "operationId": "createNetworkType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageNetworkType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging and sorting criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Returns a collection of network types with specified paging, sorting and filtering parameters", 
                "operationId": "listNetworkTypes"
            }
        }, 
        "/api/data-service/schema/{classId}/instances/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "'Success' with the data", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "summary": "Get the schema for the specified object", 
                "description": "This returns the schema of a particular type adjusted to the state of a specific instance..", 
                "parameters": [
                    {
                        "description": "The class of object to retrieve the schema for.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The unique identifier of an instance of the object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data-service"
                ]
            }
        }, 
        "/api/composition/componentvalidator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component validated", 
                        "schema": {
                            "$ref": "#/definitions/validationResponse"
                        }
                    }
                }, 
                "summary": "Validates a single network or security component", 
                "description": "Called by the composition service when the blueprint is saved", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/compositionProviderRequest"
                        }, 
                        "description": "Composition request, includes component info", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ]
            }
        }, 
        "/api/providers/{providerId}/requests/{bindingId}/complete": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Indicate completion of a request"
                    }
                }, 
                "summary": "Method to be called by a provider to notify the network service that a previously submitted request has been completed", 
                "description": "Callback called by the provider iaas-proxy", 
                "parameters": [
                    {
                        "description": "Provider ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "providerId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Binding ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "bindingId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkRequestCompletion"
                        }, 
                        "description": "Status object returned from the provider", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ]
            }
        }, 
        "/api/security-tags/types/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Security tag type created or updated successfully", 
                        "schema": {
                            "type": "object"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security Tag type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityTagType"
                        }, 
                        "description": "Security Tag type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Updates or creates a security tag type by its ID", 
                "operationId": "updateOrCreateSecurityTagType"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "Security tag type deleted successfully"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security Tag type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Deletes a security tag type by its ID", 
                "operationId": "deleteSecurityTagType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned security tag type", 
                        "schema": {
                            "$ref": "#/definitions/SecurityTagType"
                        }
                    }, 
                    "404": {
                        "description": "Security tag type not found with provided id"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Security tag type ID", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Get the security tag type by ID", 
                "operationId": "getSecurityTagType"
            }
        }, 
        "/api/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Network resource created", 
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRequest"
                        }, 
                        "description": "Provider request with the resource parameters", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ], 
                "description": "", 
                "summary": "New request for network or security resource, or any day-two operation request on an existing resource", 
                "operationId": "createNetworkResource"
            }
        }, 
        "/api/providers/{providerId}/deallocation-requests/{bindingId}/complete": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Indicate completion of a request"
                    }
                }, 
                "summary": "Method to be called by a provider to notify the network service that a previously submitted de-allocation request has been completed", 
                "description": "Callback called by the provider iaas-proxy", 
                "parameters": [
                    {
                        "description": "Provider ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "providerId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Binding ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "bindingId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/deallocationRequestCompletion"
                        }, 
                        "description": "Status object returned from the provider", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ]
            }
        }, 
        "/api/security-tags": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageSecurityTag"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging and sorting criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "description": "Endpoint name for filtering the security tags", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Returns a collection of security tags with specified paging, sorting and filtering parameters", 
                "operationId": "listSecurityTags"
            }
        }, 
        "/api/composition/componentallocator/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Retrieve allocation component", 
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                }, 
                "summary": "Allocate network or security component", 
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/allocateComponentRequest"
                        }, 
                        "description": "Allocation request, includes allocation constraints and component info", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request"
                ]
            }
        }, 
        "/api/security-tags/types": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Security tag type created successfully", 
                        "schema": {
                            "$ref": "#/definitions/SecurityTagType"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/SecurityTagType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityTagType"
                        }, 
                        "description": "Security tag type object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Creates a security tag type", 
                "operationId": "createSecurityTagType"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageSecurityTagType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Paging, sorting and filtering criteria", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component-type"
                ], 
                "description": "", 
                "summary": "Returns a collection of security tag types with specified paging, sorting and filtering parameters", 
                "operationId": "listSecurityTagType"
            }
        }, 
        "/api/security-policies": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/PageSecurityPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PageAndSortRequest"
                        }, 
                        "description": "Pagination Information", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-component"
                ], 
                "description": "", 
                "summary": "Returns a collection of security policies with specified paging, sorting and filtering parameters", 
                "operationId": "ListSecurityPolicy"
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "tags": [
        {
            "name": "data-service"
        }, 
        {
            "name": "network-component"
        }, 
        {
            "name": "network-component-type"
        }, 
        {
            "name": "network-request"
        }, 
        {
            "name": "schema"
        }
    ], 
    "basePath": "/network-service/", 
    "definitions": {
        "BoolCommonExpression": {
            "type": "object"
        }, 
        "ConstantValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/literal"
                        }
                    }
                }
            ]
        }, 
        "GreaterThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutRow": {
            "type": "object", 
            "properties": {
                "items": {
                    "xml": {
                        "wrapped": true, 
                        "name": "item"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutCell"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "NotEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "compositionProviderRequest": {
            "xml": {
                "name": "compositionProviderRequest"
            }, 
            "type": "object", 
            "properties": {
                "callbackServiceId": {
                    "type": "string"
                }, 
                "blueprintRequestId": {
                    "type": "string"
                }, 
                "userContext": {
                    "$ref": "#/definitions/requestUserContext"
                }, 
                "requestType": {
                    "enum": [
                        "PROVISION", 
                        "UPDATE", 
                        "ALLOCATE", 
                        "DEALLOCATE"
                    ], 
                    "type": "string"
                }, 
                "targetResourceId": {
                    "type": "string"
                }, 
                "blueprintName": {
                    "type": "string"
                }, 
                "callbackAdditionalUrlPath": {
                    "type": "string"
                }, 
                "rootCafeRequestId": {
                    "type": "string"
                }, 
                "componentInfo": {
                    "$ref": "#/definitions/componentRequestInfo"
                }, 
                "requestId": {
                    "type": "string"
                }, 
                "blueprintId": {
                    "type": "string"
                }, 
                "rootCafeDeploymentId": {
                    "type": "string"
                }
            }
        }, 
        "deallocationRequestCompletion": {
            "xml": {
                "name": "deallocationRequestCompletion"
            }, 
            "type": "object", 
            "properties": {
                "serviceCallbackId": {
                    "type": "string"
                }, 
                "requestId": {
                    "type": "string"
                }, 
                "errMsg": {
                    "type": "string"
                }, 
                "requestCallbackAdditionalUrlPath": {
                    "type": "string"
                }
            }
        }, 
        "complexLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "complexLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's class."
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component type."
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The type filter for this literal."
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component."
                        }, 
                        "values": {
                            "description": "Map of values, keyed by the field ids of some complex type.", 
                            "$ref": "#/definitions/literalMap"
                        }
                    }, 
                    "description": "A complex value composed of multiple values keyed by the field ids of some complex type."
                }
            ]
        }, 
        "ParameterMapping": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "PageSecurityPolicyType": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/SecurityPolicyType"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "SubsetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "moneyRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRange"
                    }, 
                    "type": "object", 
                    "properties": {
                        "maxValue": {
                            "type": "number", 
                            "description": "The upper limit of the range.", 
                            "format": "double"
                        }, 
                        "minValue": {
                            "type": "number", 
                            "description": "The lower limit of the range.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a range of money values, between some defined minimums and maximums."
                }
            ]
        }, 
        "EndsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "VisibilityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ParameterMappingCollection": {
            "type": "object", 
            "properties": {
                "params": {
                    "xml": {
                        "wrapped": true, 
                        "name": "param"
                    }, 
                    "items": {
                        "$ref": "#/definitions/ParameterMapping"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "layout": {
            "xml": {
                "name": "layout"
            }, 
            "type": "object", 
            "properties": {
                "pages": {
                    "xml": {
                        "wrapped": true, 
                        "name": "page"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutPage"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "DisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageLoadBalancer": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/LoadBalancer"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "validationResponse": {
            "xml": {
                "name": "validationResponse"
            }, 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/validationError"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "booleanLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "booleanLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "The boolean value."
                        }
                    }, 
                    "description": "Wraps a boolean value."
                }
            ]
        }, 
        "money": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "money"
                    }, 
                    "type": "object", 
                    "properties": {
                        "amount": {
                            "type": "number", 
                            "description": "The amount associated with this value (with no specific currency).", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a single, precise monetary value."
                }
            ]
        }, 
        "OrClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "moneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "basis": {
                            "description": "The span of time to calculate the rate of money for.", 
                            "$ref": "#/definitions/timeSpan"
                        }
                    }, 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "batchElementUpdateRequest": {
            "xml": {
                "name": "batchElementUpdateRequest"
            }, 
            "required": [
                "formValues"
            ], 
            "type": "object", 
            "properties": {
                "trigger": {
                    "type": "string"
                }, 
                "affectedElements": {
                    "xml": {
                        "wrapped": true
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "formValues": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "triggeredDetailsLayout": {
                    "$ref": "#/definitions/layout"
                }
            }
        }, 
        "UniqueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ExtensionForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "extensionId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "extensionPointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "stringLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "stringLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a String value."
                }
            ]
        }, 
        "LayoutField": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutFlowElement"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "extensionRendererContext": {
                            "$ref": "#/definitions/ExtensionRendererContext"
                        }, 
                        "description": {
                            "type": "string"
                        }, 
                        "dataType": {
                            "$ref": "#/definitions/DataType"
                        }, 
                        "permissibleValues": {
                            "$ref": "#/definitions/PermissibleValueList"
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "displayAdvice": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "TEXTBOX", 
                                "HYPERLINK", 
                                "EMAIL", 
                                "TEXTAREA", 
                                "DATE_TIME_PICKER", 
                                "CHECKBOX", 
                                "YES_NO", 
                                "CHECKBOX_GROUP", 
                                "DUAL_LIST", 
                                "RADIO_GROUP", 
                                "DROPDOWN", 
                                "LIST", 
                                "SEARCHER", 
                                "TREE", 
                                "FORM", 
                                "IMAGE", 
                                "SLIDER", 
                                "DATA_TABLE", 
                                "VALUE_PICKER"
                            ], 
                            "type": "string"
                        }, 
                        "orderIndex": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "isMultiValued": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "labelSize": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "columns": {
                            "xml": {
                                "wrapped": true, 
                                "name": "column"
                            }, 
                            "items": {
                                "$ref": "#/definitions/LayoutField"
                            }, 
                            "type": "array"
                        }, 
                        "detailLayout": {
                            "$ref": "#/definitions/LayoutReference"
                        }
                    }
                }
            ]
        }, 
        "entityRef": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRef"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier of the type or category to which the referenced entity belongs."
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The unique identifier of the referenced entity, encoded as a string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The durable identifier of a component registered in the suite component registry that owns and manages the referenced entity. This can be omitted if this component can be derived from the context within which this entity reference occurs. It must be specified, if no such context exists or if the component differs from that defined by the context."
                        }
                    }, 
                    "description": "Represents a reference to an entity defined somewhere in the suite."
                }
            ]
        }, 
        "SecurityTag": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkObject"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "securityTagTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "minLength": 1, 
                            "type": "string", 
                            "maxLength": 255
                        }
                    }
                }
            ]
        }, 
        "CallbackEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaxCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ElementState": {
            "type": "object", 
            "properties": {
                "facets": {
                    "xml": {
                        "wrapped": true, 
                        "name": "facet"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }, 
                    "type": "array"
                }, 
                "dependencies": {
                    "xml": {
                        "wrapped": true, 
                        "name": "dependency"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "type": "string"
                    }
                }
            }
        }, 
        "Clause": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ComplexEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "values": {
                            "additionalProperties": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "object"
                        }
                    }
                }
            ]
        }, 
        "StartsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LessThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LoadBalancerPool": {
            "required": [
                "extensionData", 
                "members", 
                "monitorIds"
            ], 
            "type": "object", 
            "properties": {
                "protocol": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "uniqueMonitorId": {
                    "type": "string"
                }, 
                "connectionLimit": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "acceleration": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "servicePortId": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "persistenceMethod": {
                    "type": "string"
                }, 
                "externalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "persistenceExpiration": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memberMinConnections": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "monitorPort": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "connectionRate": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "monitorIds": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "persistenceCookieName": {
                    "type": "string"
                }, 
                "members": {
                    "items": {
                        "$ref": "#/definitions/LoadBalancerMember"
                    }, 
                    "type": "array"
                }, 
                "algorithmParameter": {
                    "type": "string"
                }, 
                "transparent": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "persistenceCookieMode": {
                    "type": "string"
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "algorithm": {
                    "type": "string"
                }, 
                "healthCheckProtocol": {
                    "type": "string"
                }, 
                "memberMaxConnections": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memberPort": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "multipleLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "multipleLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "xml": {
                                "name": "item"
                            }, 
                            "items": {
                                "$ref": "#/definitions/literal"
                            }, 
                            "type": "array", 
                            "description": "The list of specified values. NOTE: All values must be of the same data type."
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string", 
                            "description": "The data type of the items in the list."
                        }
                    }, 
                    "description": "A literal which represents multiple values. All of these component values must be of the same data type."
                }
            ]
        }, 
        "LayoutFlow": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "parts": {
                            "xml": {
                                "wrapped": true, 
                                "name": "part"
                            }, 
                            "items": {
                                "$ref": "#/definitions/LayoutFlowElement"
                            }, 
                            "type": "array"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ContextPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaxLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Network": {
            "required": [
                "extensionData", 
                "networkProfileType"
            ], 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "networkBackings": {
                    "items": {
                        "$ref": "#/definitions/NetworkBacking"
                    }, 
                    "type": "array"
                }, 
                "networkProfileType": {
                    "enum": [
                        "NONE", 
                        "EXTERNAL", 
                        "PRIVATE", 
                        "NAT", 
                        "ROUTED"
                    ], 
                    "type": "string"
                }, 
                "networkTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "machineIdCollection": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "externalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "natRules": {
                    "items": {
                        "$ref": "#/definitions/NatRule"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "PageNetwork": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/Network"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "RefreshOnChangeBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NatRule": {
            "type": "object", 
            "properties": {
                "protocol": {
                    "type": "string"
                }, 
                "peerInterfaceIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "tag": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "edgeId": {
                    "type": "string"
                }, 
                "translatedAddress": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "type": {
                    "type": "string"
                }, 
                "componentId": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "componentName": {
                    "type": "string"
                }, 
                "originalAddress": {
                    "type": "string"
                }, 
                "targetType": {
                    "type": "string"
                }, 
                "originalPort": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "userDefined": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "machineId": {
                    "type": "string"
                }, 
                "networkInterfaceId": {
                    "type": "string"
                }, 
                "enabled": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "interfaceIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "translatedPort": {
                    "type": "string"
                }, 
                "action": {
                    "type": "string"
                }, 
                "order": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "SecurityTagType": {
            "required": [
                "formReference"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "formReference": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "allocationRelatedResourceTypes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "schema": {
                    "items": {
                        "$ref": "#/definitions/NetworkObjectSchema"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "serviceTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "SkipExportBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutCell": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "size": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "FixedValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "value": {
            "xml": {
                "name": "value"
            }, 
            "type": "object", 
            "properties": {
                "label": {
                    "type": "string"
                }, 
                "underlyingValue": {
                    "$ref": "#/definitions/literal"
                }
            }
        }, 
        "CoalesceEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "moneyRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "cost": {
                            "description": "The cost (including optional currency code).", 
                            "$ref": "#/definitions/literal"
                        }
                    }, 
                    "description": "A base type for literals representing a rate of some monetary value over a specified basis. E.g. $5 / hour; $1-2 / GB."
                }
            ]
        }, 
        "MoneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "LoadBalancerVirtualIp": {
            "required": [
                "extensionData"
            ], 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "address": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "externalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "poolId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "StaticForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "required": [
                        "layout"
                    ], 
                    "type": "object", 
                    "properties": {
                        "layout": {
                            "$ref": "#/definitions/layout"
                        }
                    }
                }
            ]
        }, 
        "ComplexDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }
            ]
        }, 
        "elementValues": {
            "xml": {
                "name": "elementValues"
            }, 
            "type": "object", 
            "properties": {
                "values": {
                    "xml": {
                        "wrapped": true, 
                        "name": "value"
                    }, 
                    "items": {
                        "$ref": "#/definitions/value"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "componentRequestInfo": {
            "xml": {
                "name": "componentRequestInfo"
            }, 
            "type": "object", 
            "properties": {
                "previousComponentData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "requestInputData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "resourceId": {
                    "type": "string"
                }, 
                "componentSchema": {
                    "$ref": "#/definitions/Schema"
                }, 
                "componentData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "componentTypeId": {
                    "type": "string"
                }, 
                "componentId": {
                    "type": "string"
                }
            }
        }, 
        "PageSecurityGroupType": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/SecurityGroupType"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "ExternalFormReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/FormReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "formId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "CommonExpression": {
            "type": "object"
        }, 
        "PermissibleValueList": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "customAllowed": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "Evaluator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ConstantClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/booleanLiteral"
                        }
                    }
                }
            ]
        }, 
        "literalMap": {
            "xml": {
                "name": "literalMap"
            }, 
            "type": "object", 
            "properties": {
                "entries": {
                    "xml": {
                        "name": "entry"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LiteralMapEntry"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Equivalent of java.util.Map"
        }, 
        "ExtensionRendererContext": {
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "extensionId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "elementValuesRequest": {
            "xml": {
                "name": "elementValuesRequest"
            }, 
            "type": "object", 
            "properties": {
                "text": {
                    "type": "string"
                }, 
                "userId": {
                    "type": "string"
                }, 
                "associateValue": {
                    "$ref": "#/definitions/literal"
                }, 
                "headers": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "pagingInfo": {
                    "$ref": "#/definitions/ElementValuesPagingInfo"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "dependencyValues": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "integerLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "integerLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "integer", 
                            "description": "The integer value.", 
                            "format": "int64"
                        }
                    }, 
                    "description": "Wraps a signed 64-bit integer value."
                }
            ]
        }, 
        "MinimumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "allocationConstraint": {
            "xml": {
                "name": "allocationConstraint"
            }, 
            "type": "object", 
            "properties": {
                "filter": {
                    "type": "string"
                }
            }
        }, 
        "StaticPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "values": {
                            "xml": {
                                "name": "value"
                            }, 
                            "items": {
                                "$ref": "#/definitions/value"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "ResponseEntity": {
            "type": "object", 
            "properties": {
                "body": {
                    "type": "object"
                }, 
                "headers": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object"
                }, 
                "statusCode": {
                    "enum": [
                        "CONTINUE", 
                        "SWITCHING_PROTOCOLS", 
                        "PROCESSING", 
                        "CHECKPOINT", 
                        "OK", 
                        "CREATED", 
                        "ACCEPTED", 
                        "NON_AUTHORITATIVE_INFORMATION", 
                        "NO_CONTENT", 
                        "RESET_CONTENT", 
                        "PARTIAL_CONTENT", 
                        "MULTI_STATUS", 
                        "ALREADY_REPORTED", 
                        "IM_USED", 
                        "MULTIPLE_CHOICES", 
                        "MOVED_PERMANENTLY", 
                        "FOUND", 
                        "MOVED_TEMPORARILY", 
                        "SEE_OTHER", 
                        "NOT_MODIFIED", 
                        "USE_PROXY", 
                        "TEMPORARY_REDIRECT", 
                        "PERMANENT_REDIRECT", 
                        "BAD_REQUEST", 
                        "UNAUTHORIZED", 
                        "PAYMENT_REQUIRED", 
                        "FORBIDDEN", 
                        "NOT_FOUND", 
                        "METHOD_NOT_ALLOWED", 
                        "NOT_ACCEPTABLE", 
                        "PROXY_AUTHENTICATION_REQUIRED", 
                        "REQUEST_TIMEOUT", 
                        "CONFLICT", 
                        "GONE", 
                        "LENGTH_REQUIRED", 
                        "PRECONDITION_FAILED", 
                        "PAYLOAD_TOO_LARGE", 
                        "REQUEST_ENTITY_TOO_LARGE", 
                        "URI_TOO_LONG", 
                        "REQUEST_URI_TOO_LONG", 
                        "UNSUPPORTED_MEDIA_TYPE", 
                        "REQUESTED_RANGE_NOT_SATISFIABLE", 
                        "EXPECTATION_FAILED", 
                        "I_AM_A_TEAPOT", 
                        "INSUFFICIENT_SPACE_ON_RESOURCE", 
                        "METHOD_FAILURE", 
                        "DESTINATION_LOCKED", 
                        "UNPROCESSABLE_ENTITY", 
                        "LOCKED", 
                        "FAILED_DEPENDENCY", 
                        "UPGRADE_REQUIRED", 
                        "PRECONDITION_REQUIRED", 
                        "TOO_MANY_REQUESTS", 
                        "REQUEST_HEADER_FIELDS_TOO_LARGE", 
                        "INTERNAL_SERVER_ERROR", 
                        "NOT_IMPLEMENTED", 
                        "BAD_GATEWAY", 
                        "SERVICE_UNAVAILABLE", 
                        "GATEWAY_TIMEOUT", 
                        "HTTP_VERSION_NOT_SUPPORTED", 
                        "VARIANT_ALSO_NEGOTIATES", 
                        "INSUFFICIENT_STORAGE", 
                        "LOOP_DETECTED", 
                        "BANDWIDTH_LIMIT_EXCEEDED", 
                        "NOT_EXTENDED", 
                        "NETWORK_AUTHENTICATION_REQUIRED"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "MandatoryConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaximumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "SecurityGroupType": {
            "required": [
                "formReference"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "formReference": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "allocationRelatedResourceTypes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "schema": {
                    "items": {
                        "$ref": "#/definitions/NetworkObjectSchema"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "serviceTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "RegexpConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "errorMessage": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "formUpdateResponse": {
            "xml": {
                "name": "formUpdateResponse"
            }, 
            "type": "object", 
            "properties": {
                "elementUpdates": {
                    "xml": {
                        "wrapped": true, 
                        "name": "elementUpdate"
                    }, 
                    "items": {
                        "$ref": "#/definitions/updateElementEntry"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "NetworkBacking": {
            "required": [
                "extensionData"
            ], 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "computeResourceName": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "computeResourceNetworkId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "externalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "computeResourceId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }
            }
        }, 
        "catalogOrganizationReference": {
            "xml": {
                "name": "catalogOrganizationReference"
            }, 
            "type": "object", 
            "properties": {
                "subtenantLabel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tenantLabel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "subtenantRef": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tenantRef": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "GreaterThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SecurityPolicy": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkObject"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "securityPolicyTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "minLength": 1, 
                            "type": "string", 
                            "maxLength": 255
                        }, 
                        "internal": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }
                    }
                }
            ]
        }, 
        "requestCompletion": {
            "xml": {
                "name": "requestCompletion"
            }, 
            "type": "object", 
            "properties": {
                "resourceBindingIds": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "requestCompletionState": {
                    "enum": [
                        "SUCCESSFUL", 
                        "PARTIALLY_SUCCESSFUL", 
                        "FAILED", 
                        "REJECTED"
                    ], 
                    "type": "string"
                }, 
                "completionDetails": {
                    "type": "string"
                }
            }
        }, 
        "LiteralMapEntry": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/literal"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "LayoutFlowElement": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ResetValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "providerRequest": {
            "xml": {
                "name": "providerRequest"
            }, 
            "type": "object", 
            "properties": {
                "callbackServiceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestedFor": {
                    "type": "string"
                }, 
                "requestNumber": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "description": {
                    "type": "string"
                }, 
                "requestType": {
                    "enum": [
                        "CATALOG_ITEM", 
                        "RESOURCE_ACTION"
                    ], 
                    "type": "string"
                }, 
                "requestBindingId": {
                    "type": "string"
                }, 
                "requestedObjectId": {
                    "type": "string"
                }, 
                "solution": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "catalogItemTypeId": {
                    "type": "string"
                }, 
                "requestData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "targetResourceTypeId": {
                    "type": "string"
                }, 
                "rootCafeResourceId": {
                    "type": "string"
                }, 
                "targetResourceId": {
                    "type": "string"
                }, 
                "targetResourceProviderId": {
                    "type": "string"
                }, 
                "organization": {
                    "$ref": "#/definitions/catalogOrganizationReference"
                }, 
                "targetCafeResourceId": {
                    "type": "string"
                }, 
                "requestedBy": {
                    "type": "string"
                }, 
                "reasons": {
                    "type": "string"
                }, 
                "catalogRequestId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "dateTimeLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "dateTimeLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The date.", 
                            "format": "date-time"
                        }
                    }, 
                    "description": "Wraps a Date & Time value. This is a wrapper for the Java {@link Date} class."
                }
            ]
        }, 
        "IncrementBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "AndClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "CustomPropertyDefinitionMetadata": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "required": [
                        "field"
                    ], 
                    "type": "object", 
                    "properties": {
                        "field": {
                            "$ref": "#/definitions/Field"
                        }
                    }
                }
            ]
        }, 
        "LoadBalancerMonitor": {
            "required": [
                "extensionData"
            ], 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "newEntity": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "receive": {
                    "type": "string"
                }, 
                "interval": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "send": {
                    "type": "string"
                }, 
                "method": {
                    "type": "string"
                }, 
                "monitorPath": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "timeout": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "maxRetries": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }
            }
        }, 
        "EqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SecurityGroup": {
            "required": [
                "extensionData"
            ], 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "securityGroupTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "internal": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "externalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "ipAddressCollection": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "machineIdCollection": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "PageSecurityPolicy": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/SecurityPolicy"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "timeSpan": {
            "xml": {
                "name": "timeSpan"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "amount": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "description": "The amount for the time span.", 
                    "format": "int64"
                }, 
                "unit": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "MILLISECONDS", 
                        "SECONDS", 
                        "MINUTES", 
                        "HOURS", 
                        "DAYS", 
                        "WEEKS", 
                        "MONTHS", 
                        "YEARS"
                    ], 
                    "type": "string", 
                    "description": "The unit of measure for the time span. e.g: days."
                }
            }, 
            "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
        }, 
        "NullDisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SupersetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NotClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClause": {
                            "$ref": "#/definitions/Clause"
                        }
                    }
                }
            ]
        }, 
        "LayoutSection": {
            "type": "object", 
            "properties": {
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "rows": {
                    "xml": {
                        "wrapped": true, 
                        "name": "row"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutRow"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "ConditionalEvaluatorCase": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "condition": {
                    "$ref": "#/definitions/Clause"
                }
            }
        }, 
        "FormReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "literal": {
            "xml": {
                "name": "literal"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "description": "Wraps a value such that values of different types can be treated generically."
        }, 
        "DynamicLayoutReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutReference"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        }, 
        "OrderByExpression": {
            "type": "object", 
            "properties": {
                "direction": {
                    "enum": [
                        "ASCENDING", 
                        "DESCENDING"
                    ], 
                    "type": "string"
                }, 
                "expression": {
                    "$ref": "#/definitions/CommonExpression"
                }
            }
        }, 
        "StaticLayout": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutReference"
                }, 
                {
                    "required": [
                        "layout"
                    ], 
                    "type": "object", 
                    "properties": {
                        "layout": {
                            "$ref": "#/definitions/layout"
                        }
                    }
                }
            ]
        }, 
        "entityRefEx": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRefEx"
                    }, 
                    "type": "object", 
                    "properties": {
                        "href": {
                            "type": "string", 
                            "description": "the Href"
                        }
                    }, 
                    "description": "Represents a reference to an entity by uri"
                }
            ]
        }, 
        "NetworkObjectSchema": {
            "type": "object", 
            "properties": {
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "schemaClassId": {
                    "type": "string"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "schema": {
                    "$ref": "#/definitions/Schema"
                }
            }
        }, 
        "LoadBalancerMember": {
            "required": [
                "extensionData"
            ], 
            "type": "object", 
            "properties": {
                "port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "address": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "FacetValueMap": {
            "type": "object", 
            "properties": {
                "facets": {
                    "xml": {
                        "wrapped": true, 
                        "name": "facet"
                    }, 
                    "items": {
                        "$ref": "#/definitions/FacetValueMapEntry"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "Constraint": {
            "discriminator": "type", 
            "required": [
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }
            }
        }, 
        "NetworkObject": {
            "required": [
                "extensionData"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "externalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "DynamicDataResponse": {
            "type": "object", 
            "properties": {
                "values": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "LayoutReference": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "BooleanLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/booleanLiteral"
                }, 
                {
                    "xml": {
                        "name": "booleanLiteral"
                    }, 
                    "type": "object", 
                    "description": "Wraps a boolean value."
                }
            ]
        }, 
        "IaasPropertyNameBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "CustomValidationConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ProviderRequestValidation": {
            "type": "object", 
            "properties": {
                "quote": {
                    "$ref": "#/definitions/RequestQuote"
                }, 
                "updatedData": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "networkRequestCompletion": {
            "xml": {
                "name": "networkRequestCompletion"
            }, 
            "type": "object", 
            "properties": {
                "operationType": {
                    "enum": [
                        "CREATE", 
                        "READ", 
                        "UPDATE", 
                        "DELETE", 
                        "ALLOCATE", 
                        "DEALLOCATE", 
                        "UNREGISTER"
                    ], 
                    "type": "string"
                }, 
                "resourceId": {
                    "type": "string"
                }, 
                "networkObject": {
                    "$ref": "#/definitions/NetworkObject"
                }, 
                "originalCallbackServiceId": {
                    "type": "string"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "rootCafeRequestId": {
                    "type": "string"
                }, 
                "subtenantId": {
                    "type": "string"
                }, 
                "requestSuccessful": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "completionDetails": {
                    "type": "string"
                }
            }
        }, 
        "Expression": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "operator": {
                            "$ref": "#/definitions/CriteriaOperator"
                        }, 
                        "rightOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }, 
                        "leftOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "ElementValuesPagingInfo": {
            "type": "object", 
            "properties": {
                "count": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "offset": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "DynamicValueContext": {
            "required": [
                "parameterMappings"
            ], 
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "providerEntityId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "WithinOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageAndSortRequest": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "queryInfo": {
                    "$ref": "#/definitions/OdataQueryInfo"
                }, 
                "pageNumber": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "pageSize": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "offset": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "DefaultValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "WrapperClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "MaxValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "EntityReferenceDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NetworkType": {
            "required": [
                "formReference"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "formReference": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "allocationRelatedResourceTypes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "schema": {
                    "items": {
                        "$ref": "#/definitions/NetworkObjectSchema"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "serviceTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "validationError": {
            "xml": {
                "name": "validationError"
            }, 
            "type": "object", 
            "properties": {
                "errorCode": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "errorMessage": {
                    "type": "string"
                }
            }
        }, 
        "DynamicDataRequest": {
            "type": "object", 
            "properties": {
                "ignoreUnknownFields": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "ids": {
                    "xml": {
                        "name": "id"
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "tenantId": {
                    "type": "string"
                }
            }
        }, 
        "MonetaryValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "literal"
                    }, 
                    "type": "object", 
                    "properties": {
                        "currencyCode": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The ISO 4217 code used to identify the currency (if any) associated with this value."
                        }
                    }, 
                    "description": "Base type for representing monetary values, encapsulating both some kind of quantity and a currency."
                }
            ]
        }, 
        "PrimitiveDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "typeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "TimeSpan": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "timeSpan"
                    }, 
                    "type": "object", 
                    "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
                }
            ]
        }, 
        "ExternalValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "dynamicValueProviderInfo"
                    ], 
                    "type": "object", 
                    "properties": {
                        "dynamicValueProviderInfo": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "ContainsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Field": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "dataType": {
                    "$ref": "#/definitions/DataType"
                }, 
                "permissibleValues": {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                "label": {
                    "type": "string"
                }, 
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "displayAdvice": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "TEXTBOX", 
                        "HYPERLINK", 
                        "EMAIL", 
                        "TEXTAREA", 
                        "DATE_TIME_PICKER", 
                        "CHECKBOX", 
                        "YES_NO", 
                        "CHECKBOX_GROUP", 
                        "DUAL_LIST", 
                        "RADIO_GROUP", 
                        "DROPDOWN", 
                        "LIST", 
                        "SEARCHER", 
                        "TREE", 
                        "FORM", 
                        "IMAGE", 
                        "SLIDER", 
                        "DATA_TABLE", 
                        "VALUE_PICKER"
                    ], 
                    "type": "string"
                }, 
                "orderIndex": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "isMultiValued": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "columns": {
                    "xml": {
                        "wrapped": true, 
                        "name": "column"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "PageSecurityTag": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/SecurityTag"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "UnspecifiedEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "allocationRequestCompletion": {
            "xml": {
                "name": "allocationRequestCompletion"
            }, 
            "type": "object", 
            "properties": {
                "serviceCallbackId": {
                    "type": "string"
                }, 
                "requestCallbackAdditionalUrlPath": {
                    "type": "string"
                }, 
                "allocationResult": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "errMsg": {
                    "type": "string"
                }, 
                "requestId": {
                    "type": "string"
                }
            }
        }, 
        "LessThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "allocateComponentRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/compositionProviderRequest"
                }, 
                {
                    "xml": {
                        "name": "allocateComponentRequest"
                    }, 
                    "type": "object", 
                    "properties": {
                        "allocationConstraint": {
                            "$ref": "#/definitions/allocationConstraint"
                        }
                    }
                }
            ]
        }, 
        "IsDefinedOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Schema": {
            "type": "object", 
            "properties": {
                "fields": {
                    "xml": {
                        "name": "field"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                }
            }
        }, 
        "Sort": {
            "type": "object"
        }, 
        "PageSecurityTagType": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/SecurityTagType"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "FieldReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "path": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "PageLoadBalancerType": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/LoadBalancerType"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "LayoutExtension": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "fieldPrefix": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "extensionId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "extensionPointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ConditionalEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "cases": {
                            "xml": {
                                "name": "case"
                            }, 
                            "items": {
                                "$ref": "#/definitions/ConditionalEvaluatorCase"
                            }, 
                            "type": "array"
                        }, 
                        "defaulValue": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "MinValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LayoutPlaceholderCell": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutCell"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SecurityPolicyType": {
            "required": [
                "formReference"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "formReference": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "allocationRelatedResourceTypes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "schema": {
                    "items": {
                        "$ref": "#/definitions/NetworkObjectSchema"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "serviceTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "ReadOnlyConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MultipleEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "items"
                    ], 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "MinCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "OdataQueryInfo": {
            "type": "object", 
            "properties": {
                "orderBy": {
                    "items": {
                        "$ref": "#/definitions/OrderByExpression"
                    }, 
                    "type": "array"
                }, 
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "rawOrderBy": {
                    "type": "string"
                }, 
                "skip": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "top": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "inlineCount": {
                    "enum": [
                        "NONE", 
                        "ALLPAGES"
                    ], 
                    "type": "string"
                }, 
                "filter": {
                    "$ref": "#/definitions/BoolCommonExpression"
                }, 
                "select": {
                    "items": {
                        "$ref": "#/definitions/EntitySimpleProperty"
                    }, 
                    "type": "array"
                }, 
                "rawFilter": {
                    "type": "string"
                }, 
                "customOptions": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }, 
                "skipToken": {
                    "type": "string"
                }, 
                "expand": {
                    "items": {
                        "$ref": "#/definitions/EntitySimpleProperty"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "LayoutText": {
            "allOf": [
                {
                    "$ref": "#/definitions/LayoutFlowElement"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/ElementState"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "RequestQuote": {
            "type": "object", 
            "properties": {
                "totalLeaseCost": {
                    "$ref": "#/definitions/literal"
                }, 
                "leaseRate": {
                    "$ref": "#/definitions/moneyTimeRate"
                }, 
                "leasePeriod": {
                    "$ref": "#/definitions/timeSpan"
                }
            }
        }, 
        "PageSecurityGroup": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/SecurityGroup"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "FacetValueMapEntry": {
            "type": "object", 
            "properties": {
                "type": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "value": {
                    "$ref": "#/definitions/literal"
                }
            }
        }, 
        "LayoutPage": {
            "type": "object", 
            "properties": {
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "sections": {
                    "xml": {
                        "wrapped": true, 
                        "name": "section"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LayoutSection"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "label": {
                    "type": "string"
                }
            }
        }, 
        "secureString": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "secureString"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a secured string value, such as a password."
                }
            ]
        }, 
        "LoadBalancerType": {
            "required": [
                "formReference"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "formReference": {
                    "$ref": "#/definitions/FormReference"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "allocationRelatedResourceTypes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "schema": {
                    "items": {
                        "$ref": "#/definitions/NetworkObjectSchema"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "serviceTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "decimalLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "decimalLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "number", 
                            "description": "The decimal value.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Wraps a decimal value."
                }
            ]
        }, 
        "CriteriaOperator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "InternalConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "updateElementEntry": {
            "xml": {
                "name": "updateElementEntry"
            }, 
            "type": "object", 
            "properties": {
                "errors": {
                    "xml": {
                        "wrapped": true, 
                        "name": "error"
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "detailLayout": {
                    "$ref": "#/definitions/layout"
                }, 
                "facetValues": {
                    "$ref": "#/definitions/FacetValueMap"
                }, 
                "permissibleValues": {
                    "xml": {
                        "wrapped": true, 
                        "name": "value"
                    }, 
                    "items": {
                        "$ref": "#/definitions/value"
                    }, 
                    "type": "array"
                }, 
                "extensionRendererContext": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "PageNetworkType": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/NetworkType"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "DataType": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "typeId": {
                    "enum": [
                        "STRING", 
                        "INTEGER", 
                        "DECIMAL", 
                        "MONEY", 
                        "MONEY_RANGE", 
                        "MONEY_TIME_RATE", 
                        "BOOLEAN", 
                        "ENTITY_REFERENCE", 
                        "DATE_TIME", 
                        "TIME_SPAN", 
                        "SECURE_STRING", 
                        "COMPLEX"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "EditableBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DynamicPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }, 
                        "context": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "EncryptedBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "requestUserContext": {
            "xml": {
                "name": "requestUserContext"
            }, 
            "type": "object", 
            "properties": {
                "requestedFor": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "reasons": {
                    "type": "string"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "subtenantId": {
                    "type": "string"
                }, 
                "requestedBy": {
                    "type": "string"
                }
            }
        }, 
        "ObjectDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "label": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "LoadBalancer": {
            "required": [
                "extensionData", 
                "monitors", 
                "pools", 
                "virtualIps"
            ], 
            "type": "object", 
            "properties": {
                "vipNicIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "description": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "virtualIps": {
                    "items": {
                        "$ref": "#/definitions/LoadBalancerVirtualIp"
                    }, 
                    "type": "array"
                }, 
                "tierNicIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "monitors": {
                    "items": {
                        "$ref": "#/definitions/LoadBalancerMonitor"
                    }, 
                    "type": "array"
                }, 
                "vipNetwork": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "externalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "loggingLevel": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "pools": {
                    "items": {
                        "$ref": "#/definitions/LoadBalancerPool"
                    }, 
                    "type": "array"
                }, 
                "tierNetwork": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "loadBalancerTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 40
                }, 
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "EntitySimpleProperty": {
            "type": "object", 
            "properties": {
                "propertyName": {
                    "type": "string"
                }
            }
        }, 
        "MinLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }
    }, 
    "swagger": "2.0"
}