{
    "info": {
        "version": "7.3.0-SNAPSHOT", 
        "description": "# IaaS Proxy Service API Specification", 
        "title": "IaaS Proxy Provider Service API"
    }, 
    "paths": {
        "/api/currency": {
            "delete": {
                "operationId": "deleteCurrencyService", 
                "responses": {
                    "204": {
                        "description": "The currency symbol cache is invalidated."
                    }
                }, 
                "summary": "Invalidates currency symbol cache", 
                "description": "Invalidates currency symbol cache", 
                "tags": [
                    "currency"
                ]
            }
        }, 
        "/api/machines/register": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful registration."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/registerMachineInfo"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "internal"
                ], 
                "description": "Registers an unmanaged machine.", 
                "summary": "Registers an unmanaged machine.", 
                "operationId": "registerMachine"
            }
        }, 
        "/api/services/{serviceId}/network/networks/{id}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "The Network is deleted."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a Network.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network"
                ], 
                "description": "Deletes a Network corresponding to its unique Id.", 
                "summary": "Deletes a Network", 
                "operationId": "deleteNetwork"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The network is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/network"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "the id of the Network.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network"
                ], 
                "description": "Returns the Network associated with the given id.", 
                "summary": "Returns the Network.", 
                "operationId": "getNetwork"
            }
        }, 
        "/api/services/{serviceId}/network/load-balancers-allocation-constraints": {
            "post": {
                "responses": {
                    "200": {
                        "description": "allocation constraint retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/allocationConstraint"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/loadBalancer"
                        }, 
                        "description": "The load balancer.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "The related CompTypeId", 
                        "required": false, 
                        "type": "string", 
                        "name": "relatedCompTypeId", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "load-balancer"
                ], 
                "description": "Get allocation constraint for load balancer", 
                "summary": "Get allocation constraint", 
                "operationId": "getAllocationConstraint"
            }
        }, 
        "/api/upgrade/governance": {
            "post": {
                "operationId": "upgradeGovernance", 
                "responses": {
                    "201": {
                        "description": "Governance content migrated."
                    }
                }, 
                "summary": "Migrates affected governance content", 
                "description": "Migrates affected governance content", 
                "tags": [
                    "entitlements", 
                    "internal", 
                    "upgrade"
                ]
            }
        }, 
        "/api/machine-actions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CustomMachineAction"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The platform type id.", 
                        "required": true, 
                        "type": "string", 
                        "name": "platformTypeId", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "machine-action"
                ], 
                "description": "Retrieves the list of available machine actions.", 
                "summary": "Retrieves the list of available machine actions.", 
                "operationId": "listCustomMachineAction"
            }
        }, 
        "/api/network/profiles/addresses/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The addresses for the network profile are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/StaticIPv4Address"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the network profile.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-profile"
                ], 
                "description": "Returns a list of IP addresses within the network profile.", 
                "summary": "Returns a list of IP addresses within the network profile.", 
                "operationId": "getNetworkProfileAddresses"
            }
        }, 
        "/api/services/{serviceId}/network/networks-allocation-constraints": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "$ref": "#/definitions/allocationConstraint"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/network"
                        }, 
                        "description": "The network containing the allocation constraint", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "The related CompTypeId", 
                        "required": false, 
                        "type": "string", 
                        "name": "relatedCompTypeId", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network"
                ], 
                "description": "Get allocation constraint for the network", 
                "summary": "Get allocation constraint", 
                "operationId": "getNetworkAllocationConstraint"
            }
        }, 
        "/api/services/{serviceId}/network/security-groups-deallocator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component Deallocated."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Deallocate Component for a NetworkProviderRequest object", 
                "summary": "Deallocate Component", 
                "operationId": "deallocateComponent"
            }
        }, 
        "/api/services/{serviceId}/network/security-tags": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/securityTag"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "description": "Endpoint name for filtering the security tags", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-tag"
                ], 
                "description": "Returns a page of the SecurityTag from the iaas provider.", 
                "summary": "Returns a page of the SecurityTag.", 
                "operationId": "listSecurityTag"
            }
        }, 
        "/api/services/{serviceId}/network/security-policies": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The security policy is created.", 
                        "schema": {
                            "$ref": "#/definitions/securityPolicy"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/securityPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/securityPolicy"
                        }, 
                        "description": "The security policy object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-policy"
                ], 
                "description": "Create and save a SecurityPolicy upon validation on SecurityPolicy fields", 
                "summary": "Create and save a SecurityPolicy", 
                "operationId": "createSecurityPolicy"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/securityPolicy"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-policy"
                ], 
                "description": "Returns a page of the SecurityPolicy from the iaas provider.", 
                "summary": "Returns a page of the SecurityPolicy.", 
                "operationId": "listSecurityPolicyList"
            }
        }, 
        "/api/services/{serviceId}/reservations/policies": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The reservation policy is created.", 
                        "schema": {
                            "$ref": "#/definitions/reservationPolicy"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/reservationPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/reservationPolicy"
                        }, 
                        "description": "The reservation policy object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reservation", 
                    "reservation-policy"
                ], 
                "description": "Create and save a reservation policy upon validation on reservation policy fields.", 
                "summary": "Create and save a reservation policy.", 
                "operationId": "Create Reservation Policy"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/reservationPolicy"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "reservation", 
                    "reservation-policy"
                ], 
                "description": "Returns a page of the reservation policy from iaas provider.", 
                "summary": "Returns a page of the reservation policy.", 
                "operationId": "Get Reservation Policies"
            }
        }, 
        "/api/network/profiles": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The network profile is created.", 
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }, 
                        "description": "The network profile to be created.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-profile"
                ], 
                "description": "Create a new NetworkProfile", 
                "summary": "Create a new NetworkProfile", 
                "operationId": "createNetworkProfile"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/NetworkProfile"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-profile"
                ], 
                "description": "Returns a page of the network profiles.", 
                "summary": "Returns a page of the network profiles.", 
                "operationId": "listNetworkProfile"
            }
        }, 
        "/api/business-groups/allocations/totals": {
            "get": {
                "operationId": "getAllocationsDataTotalsRpt", 
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BusinessGroupAllocationsData"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "summary": "Accumulated Allocations data for business groups.", 
                "description": "Accumulated Allocations data for all business groups in the current tenant.", 
                "tags": [
                    "allocations", 
                    "report", 
                    "business-groups"
                ]
            }
        }, 
        "/api/upgrade/complete": {
            "post": {
                "operationId": "cleanUpgradeFlag", 
                "responses": {
                    "201": {
                        "description": "Upgrade flag removed."
                    }
                }, 
                "summary": "Clean up the upgrade flag", 
                "description": "Clean up the upgrade flag in ConfigurationData(enabled features)", 
                "tags": [
                    "internal", 
                    "flag", 
                    "upgrade"
                ]
            }
        }, 
        "/api/services/{serviceId}/post-submission-extension": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "$ref": "#/definitions/ProviderRequestExtension"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRequest"
                        }, 
                        "description": "Service Catalog representation of a blueprint request.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "internal", 
                    "requests"
                ], 
                "description": "Perform post request submission actions. Retrieves the complete set of custom properties associated with a request for a blueprint.", 
                "summary": "Perform post request submission actions.", 
                "operationId": "Perform Post Submission Action"
            }
        }, 
        "/api/reports/reclamationSavingsReport/byOwner": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ReclamationSavingsByOwnerViewModel"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the name of the owner to show savings for, or null to include all machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "ownerName", 
                        "in": "query"
                    }, 
                    {
                        "description": "the type of machine to show, or null to include all types of machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "machineType", 
                        "in": "query"
                    }, 
                    {
                        "description": "the start of the report.", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "name": "beginDate"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "report", 
                    "groups", 
                    "reclamation"
                ], 
                "description": "Retrieve a reclamation cost savings report keyed by the machine owner.", 
                "summary": "Retrieve a reclamation cost savings report keyed by the machine owner.", 
                "operationId": "getReclamationSavingsByOwnerRpt"
            }
        }, 
        "/api/services/{serviceId}/data-service/schema/{classId}/default/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "The permissible values of the specified schema are retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The class id of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a field on the schema of the specified object class.", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "description": "The element values request object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data"
                ], 
                "description": "Get the permissible values of a field in the specified schema.", 
                "summary": "Get the permissible values.", 
                "operationId": "getDefaultSchemaFields"
            }
        }, 
        "/api/upgrade/buildProfile/{id}": {
            "post": {
                "responses": {
                    "201": {
                        "description": "IaaS build profile migrated."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the IaaS build profile.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "internal", 
                    "upgrade", 
                    "build-profile-migration"
                ], 
                "description": "Initiates the migration of a IaaS build profile", 
                "summary": "Initiates the migration of a IaaS build profile", 
                "operationId": "initiateIaasBuildProfileMigration"
            }
        }, 
        "/api/reports/capacityUsageReport/groups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "usage", 
                    "report", 
                    "capacity"
                ], 
                "description": "Collection of group names.", 
                "summary": "Collection of group names.", 
                "operationId": "getGroupsRpt"
            }
        }, 
        "/api/reports/chargebackReport/byOwner": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ChargebackByGroupViewModel"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the name of the group to show machines for, or null to include all groups", 
                        "required": false, 
                        "type": "string", 
                        "name": "groupName", 
                        "in": "query"
                    }, 
                    {
                        "description": "the type of machine to show, or null to include all types of machines", 
                        "required": false, 
                        "type": "string", 
                        "name": "machineType", 
                        "in": "query"
                    }, 
                    {
                        "description": "the start of the report, null is beginning of time", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "name": "startDate"
                    }, 
                    {
                        "description": "the end of the report, null is end of time", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "name": "endDate"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "chargeback", 
                    "report", 
                    "groups"
                ], 
                "description": "Retrieve a chargeback report keyed by the machine owner.", 
                "summary": "Retrieve a chargeback report keyed by the machine owner.", 
                "operationId": "getChargebackByOwnerRpt"
            }
        }, 
        "/api/services/{serviceId}/requestValidations": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRequest"
                        }, 
                        "description": "Service Catalog representation of a blueprint request.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "internal", 
                    "requests"
                ], 
                "description": "Validates un-submitted catalog request and gets the quotes for the request.The request could be a machine request or resource action request.", 
                "summary": "Validate catalog request.", 
                "operationId": "Validate Request"
            }
        }, 
        "/api/reports/capacityUsageReport/owners": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "usage", 
                    "report", 
                    "capacity"
                ], 
                "description": "Collection of user names, one for each user that is listed as the owner of at least one machine.", 
                "summary": "Collection of user names", 
                "operationId": "getMachineOwnersRpt"
            }
        }, 
        "/api/openstack/security-groups/businessgroup/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The Openstack security groups are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/OpenstackSecurityGroup"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The business group id.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "openstack-security-group"
                ], 
                "description": "Retrieves the available openstack security groups based on business group.", 
                "summary": "Retrieves the available openstack security groups.", 
                "operationId": "listOpenstackSecurityGroup"
            }
        }, 
        "/api/services/{serviceId}/network/security-groups-allocation-constraints": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "$ref": "#/definitions/allocationConstraint"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/securityGroup"
                        }, 
                        "description": "The security group.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "The related CompTypeId", 
                        "required": false, 
                        "type": "string", 
                        "name": "relatedCompTypeId", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Get allocation constraint for security group", 
                "summary": "Get allocation constraint", 
                "operationId": "getSecurityGroupAllocationConstraint"
            }
        }, 
        "/api/services/{serviceId}/network/load-balancers/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "The load balancer is updated.", 
                        "schema": {
                            "$ref": "#/definitions/loadBalancer"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "the id of the LoadBalancer to be updated", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/loadBalancer"
                        }, 
                        "description": "the LoadBalancer to be updated", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "load-balancer"
                ], 
                "description": "Updates an existing managed LoadBalancer", 
                "summary": "Updates an existing managed LoadBalancer", 
                "operationId": "updateLoadBalancer"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The load balancer is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/loadBalancer"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "the id of the LoadBalancer", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "load-balancer"
                ], 
                "description": "Returns the LoadBalancer associated with the given id.", 
                "summary": "Returns a LoadBalancer.", 
                "operationId": "getLoadBalancer"
            }
        }, 
        "/api/services/{serviceId}/network/networks-allocator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component allocation request sent."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network"
                ], 
                "description": "Allocate Network Component for a NetworkProviderRequest object", 
                "summary": "Allocate Network Component", 
                "operationId": "allocateNetworkComponent"
            }
        }, 
        "/api/services/{serviceId}/reservations": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The reservation is created.", 
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }, 
                        "description": "The reservation object", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reservation"
                ], 
                "description": "Create and save a reservation upon validation on Reservation fields.", 
                "summary": "Create and save a reservation in iaas provider.", 
                "operationId": "Create Reservation"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/reservation"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "IaaS reservation type e.g. Virtual, Cloud, Physical, Machine", 
                        "required": false, 
                        "type": "string", 
                        "name": "category", 
                        "in": "query"
                    }, 
                    {
                        "description": "Expand reservation on its extended data. e.g. reservation, reservationInfo, reservationId", 
                        "default": "reservation", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "name": "expandMode"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "reservation"
                ], 
                "description": "Returns a page of the reservations, with different content in extensionData depending on the parameter specified in expandMode.", 
                "summary": "Returns a page of the reservations from iaas provider.", 
                "operationId": "Get Reservations"
            }
        }, 
        "/api/services/{serviceId}/network/security-tags/applyToMachine/{machineId}": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The security tags applied to the machine."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id that identifies the machine to which to add the Security Tags.", 
                        "required": true, 
                        "type": "string", 
                        "name": "machineId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "description": "The list of Security Tags to be assigned to the machine.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-tag"
                ], 
                "description": "Add a list of security tags to a machine", 
                "summary": "Add a list of security tags to a machine", 
                "operationId": "aApplySecurityTagsToMachine"
            }
        }, 
        "/api/services/{serviceId}/resource-actions": {
            "post": {
                "responses": {
                    "204": {
                        "description": "The request is submitted."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The instance id of a ServiceInfo registration with Component Registry.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "callback-endpoint-registry"
                ], 
                "description": "Submit request from network service to the IaaS proxy provider service", 
                "summary": "Submit request from network service.", 
                "operationId": "registerRequest"
            }
        }, 
        "/api/services/{serviceId}/data-service/schema/{classId}/default": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The default schema is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The class id of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data"
                ], 
                "description": "Retrieve the default schema for service and class", 
                "summary": "Retrieve the default schema.", 
                "operationId": "getDefaultSchema"
            }
        }, 
        "/api/services/{serviceId}/network/load-balancers": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The load balancer is created.", 
                        "schema": {
                            "$ref": "#/definitions/loadBalancer"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/loadBalancer"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/loadBalancer"
                        }, 
                        "description": "The Load Balancer to be created and saved.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "load-balancer"
                ], 
                "description": "Create and save a LoadBalancer", 
                "summary": "Create and save a LoadBalancer", 
                "operationId": "createLoadBalancer"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/loadBalancer"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "load-balancer"
                ], 
                "description": "Returns a page of the LoadBalancer from the iaas provider.", 
                "summary": "Returns a page of the LoadBalancer.", 
                "operationId": "listLoadBalancer"
            }
        }, 
        "/api/services/{serviceId}/reservations/policies/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/reservationPolicy"
                        }
                    }, 
                    "204": {
                        "description": "The reservation policy is updated.", 
                        "schema": {
                            "$ref": "#/definitions/reservationPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Unique identifier of the reservation policy to be updated.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/reservationPolicy"
                        }, 
                        "description": "The reservation policy object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reservation", 
                    "reservation-policy"
                ], 
                "description": "Updates or creates a reservation policy upon validation on reservation policy fields.Returns the updated ReservationPolicy or RestEntity which wraps the newly created ReservationPolicy.", 
                "summary": "Updates or creates a reservation policy.", 
                "operationId": "Update or create Reservation Policy"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "The reservation policy is updated.", 
                        "schema": {
                            "$ref": "#/definitions/reservationPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Unique identifier of the reservation policy to be deleted.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "reservation", 
                    "reservation-policy"
                ], 
                "description": "Deletes a reservation policy corresponding to its unique Id.", 
                "summary": "Deletes a reservation policy.", 
                "operationId": "Delete Reservation Policy"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "$ref": "#/definitions/reservationPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Unique identifier of the reservation policy to be deleted.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "reservation", 
                    "reservation-policy"
                ], 
                "description": "Returns the reservation policy associated with the given id.", 
                "summary": "Returns the reservation policy.", 
                "operationId": "Get Reservation Policy"
            }
        }, 
        "/api/source-machines/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The virtual machine is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The platform type id.", 
                        "required": true, 
                        "type": "string", 
                        "name": "platformTypeId", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "vm-templates"
                ], 
                "description": "Retrieves a VM template by id with disks.", 
                "summary": "Retrieves a VM template by id with disks.", 
                "operationId": "getVirtualMachine"
            }
        }, 
        "/api/reports/capacityUsageReport/byBlueprint": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CapacityUsageByBlueprintViewModel"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the name of the blueprint to show machines for, or null to include all machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "blueprintName", 
                        "in": "query"
                    }, 
                    {
                        "description": "the type of machine to show, or null to include all types of machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "machineType", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "usage", 
                    "report", 
                    "capacity"
                ], 
                "description": "Retrieve a capacity usage report keyed by the blueprint.", 
                "summary": "Retrieve a capacity usage report keyed by the blueprint.", 
                "operationId": "getCapacityUsageByBlueprintRpt"
            }
        }, 
        "/api/services/{serviceId}": {
            "post": {
                "responses": {
                    "204": {
                        "description": "The request is submitted."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The instance id of a ServiceInfo registration with Component Registry.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "task", 
                        "required": false, 
                        "type": "boolean", 
                        "name": "task", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "callback-endpoint-registry"
                ], 
                "description": "Asynchronous call to find IaaS services by serviceId and add service catalog callback endpoint type UpdateCatalogItemType and ResourceType registrations for Iaas Service.", 
                "summary": "Asynchronous call to find IaaS services", 
                "operationId": "registerServiceCallbacks"
            }
        }, 
        "/api/services/{serviceId}/data-service/schema/{classId}/instances/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The specific instance schema is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The class id of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The instance id.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data"
                ], 
                "description": "Retrieve the instance schema for service and class", 
                "summary": "Retrieve the instance schema.", 
                "operationId": "getInstanceSchema"
            }
        }, 
        "/api/services/{serviceId}/network/networks-deallocator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component Deallocated."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network"
                ], 
                "description": "Deallocate Component for a NetworkProviderRequest object", 
                "summary": "Deallocate Component", 
                "operationId": "deallocateNetworkComponent"
            }
        }, 
        "/api/machine-prefixes": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The machine prefixes are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/MachinePrefix"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "machine-prefix"
                ], 
                "description": "Retrieves the list of available machine prefixes.", 
                "summary": "Retrieves the list of available machine prefixes.", 
                "operationId": "listMachinePrefix"
            }
        }, 
        "/api/data-center-locations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/HostProperty"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The business group id.", 
                        "required": false, 
                        "type": "string", 
                        "name": "groupId", 
                        "in": "query"
                    }, 
                    {
                        "description": "The platform type id.", 
                        "required": false, 
                        "type": "string", 
                        "name": "platformTypeId", 
                        "in": "query"
                    }, 
                    {
                        "description": "The reservation policy name.", 
                        "required": true, 
                        "type": "string", 
                        "name": "reservationPolicyName", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "data-center-location"
                ], 
                "description": "Retrieves a page of location properties.", 
                "summary": "Retrieves a page of location properties.", 
                "operationId": "listHostProperty"
            }
        }, 
        "/api/amazon/request-data": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AmazonRequestData"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The business group id", 
                        "required": true, 
                        "type": "string", 
                        "name": "businessGroupId", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "amazon-request-data"
                ], 
                "description": "Retrieves Amazon request form data.", 
                "summary": "Retrieves Amazon request form data.", 
                "operationId": "listAmazonRequestData"
            }
        }, 
        "/api/reports/chargebackReport/groups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "chargeback", 
                    "report", 
                    "groups"
                ], 
                "description": "Collection of group names.", 
                "summary": "Collection of group names.", 
                "operationId": "getGroupsRptChargebacks"
            }
        }, 
        "/api/services/{serviceId}/data-service/data/{classId}/{id}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "The specific instance data is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/DynamicDataResponse"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The class id of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The instance id.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/DynamicDataRequest"
                        }, 
                        "description": "The dynamic data request object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data"
                ], 
                "description": "Retrieve the instance data for service and class", 
                "summary": "Retrieve the instance data.", 
                "operationId": "getInstanceData"
            }
        }, 
        "/api/amazon/instance-types": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/InstanceType"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "instance-type"
                ], 
                "description": "Retrieves the list of available Instance types", 
                "summary": "Retrieves the list of available Instance types", 
                "operationId": "listInstanceType"
            }
        }, 
        "/api/services/{serviceId}/network/security-tag-load": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The security tag is loaded.", 
                        "schema": {
                            "$ref": "#/definitions/securityTag"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/securityTag"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/securityTag"
                        }, 
                        "description": "The security tag object to be loaded.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-tag"
                ], 
                "description": "Load a security tag", 
                "summary": "Load a security tag", 
                "operationId": "loadSecurityTag"
            }
        }, 
        "/api/services/{serviceId}/network/load-balancers-deallocator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component Deallocated."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "load-balancer"
                ], 
                "description": "Deallocate Component for a NetworkProviderRequest object", 
                "summary": "Deallocate Component", 
                "operationId": "deallocateComponent"
            }
        }, 
        "/api/network/nat-rule-components/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/NatRuleComponent"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "format": "int32", 
                        "required": true, 
                        "type": "integer", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "nat-rule-components"
                ], 
                "description": "Retrieves the list of NatRuleComponents.", 
                "summary": "Retrieves the list of NatRuleComponents.", 
                "operationId": "listNatRuleComponents"
            }
        }, 
        "/api/services/{serviceId}/network/security-groups/{id}/machines": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The machines are successfully assigned to the security group."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id that identifies the Security Group to add machine(s) to.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "description": "The list of virtualMachineIds to be assigned to the security group.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Add a list of machines to a security group", 
                "summary": "Add a list of machines to a security group", 
                "operationId": "assignMachinesToSecurityGroup"
            }
        }, 
        "/api/services/{serviceId}/network/security-groups/{id}/security-policies": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The machines are assigned to the security group."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id that identifies the Security Group to add security policies to", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "description": "The list of security policy ids to be assigned to the security group.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Add a list of security policies to a security group", 
                "summary": "Add a list of security policies", 
                "operationId": "assignSecurityPolicesToSecurityGroup"
            }
        }, 
        "/api/services/{serviceId}/network/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The request is submitted.", 
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "Network Service representation of a request.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-request", 
                    "network"
                ], 
                "description": "Submit request from network service to the IaaS proxy provider service", 
                "summary": "Submit request from network service.", 
                "operationId": "submitRequest"
            }
        }, 
        "/api/keyPairs/{id}": {
            "put": {
                "responses": {
                    "204": {
                        "description": "The key pair is updated."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The unique identifier for the key pair.", 
                        "format": "int32", 
                        "required": true, 
                        "in": "path", 
                        "type": "integer", 
                        "name": "id"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/KeyPair"
                        }, 
                        "description": "The key pair to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "key-pair"
                ], 
                "description": "Updates an existing KeyPair.", 
                "summary": "Updates an existing KeyPair", 
                "operationId": "updateKeyPair"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "The key pair is deleted."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the key pair to be deleted.", 
                        "format": "int32", 
                        "required": true, 
                        "in": "path", 
                        "type": "integer", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "key-pair"
                ], 
                "description": "Deletes a key pair corresponding to its unique Id", 
                "summary": "Deletes a key pair corresponding to its unique Id", 
                "operationId": "deleteKeyPair"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The key pair is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/KeyPair"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the key pair.", 
                        "format": "int32", 
                        "required": true, 
                        "in": "path", 
                        "type": "integer", 
                        "name": "id"
                    }
                ], 
                "tags": [
                    "key-pair"
                ], 
                "description": "Returns the key pair associated with the given id.", 
                "summary": "Returns a key pair.", 
                "operationId": "getKeyPair"
            }
        }, 
        "/api/reports/reclamationSavingsReport/owners": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "report", 
                    "groups", 
                    "reclamation"
                ], 
                "description": "Collection of user names, one for each user that is listed as the owner of at least one machine.", 
                "summary": "Collection of user names", 
                "operationId": "getMachineOwnersRptReclamation"
            }
        }, 
        "/api/network/profiles/tenant": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/NetworkProfile"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-profile"
                ], 
                "description": "Returns a page of the network profiles within the current tenant.", 
                "summary": "Returns a page of the network profiles within the current tenant.", 
                "operationId": "listNetworkProfileForTenant"
            }
        }, 
        "/api/business-groups/{groupId}/reservations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IaaSReservation"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the specific busines group id", 
                        "required": true, 
                        "type": "string", 
                        "name": "groupId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "allocations", 
                    "report", 
                    "business-groups"
                ], 
                "description": "List of the reservations for a specific business group.", 
                "summary": "List of the reservations for a specific business group.", 
                "operationId": "getReservationsRpt"
            }
        }, 
        "/api/services/{serviceId}/network/security-groups-allocator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component allocation request sent."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Allocate Security Group Component for a NetworkProviderRequest object", 
                "summary": "Allocate Security Group Component", 
                "operationId": "allocateSecurityGroup"
            }
        }, 
        "/api/endpoint-configuration/endpointoperations/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "$ref": "#/definitions/endpoint"
                        }
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointUpdateRequest"
                        }, 
                        "description": "Request of the endpoint to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API updates an existing endpoint.", 
                "summary": "Updates an existing endpoint", 
                "operationId": "Update an existing endpoint"
            }
        }, 
        "/api/reports/capacityUsageReport/byOwner": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CapacityUsageByOwnerViewModel"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the name of the owner to show machines for, or null to include all machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "ownerName", 
                        "in": "query"
                    }, 
                    {
                        "description": "the type of machine to show, or null to include all types of machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "machineType", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "usage", 
                    "report", 
                    "capacity"
                ], 
                "description": "Retrieve a capacity usage report keyed by the machine owner.", 
                "summary": "Retrieve a capacity usage report keyed by the machine owner.", 
                "operationId": "getCapacityUsageByOwnerRpt"
            }
        }, 
        "/api/services/{serviceId}/requests": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The request is submitted.", 
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRequest"
                        }, 
                        "description": "Service catalog representation of a blueprint request.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "internal", 
                    "requests"
                ], 
                "description": "Submit catalog request to iaas proxy provider service.", 
                "summary": "Submit request from service catalog.", 
                "operationId": "Submit Request"
            }
        }, 
        "/api/business-groups/allocations": {
            "put": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BusinessGroupAllocationsData"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "description": "The list of business group ids", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "allocations", 
                    "report", 
                    "business-groups"
                ], 
                "description": "Accumulated Allocations data for selected business groups in the current tenant.", 
                "summary": "Accumulated Allocations data for business groups.", 
                "operationId": "getAllocationsDataTotalsFilteredRpt"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BusinessGroupAllocationsData"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "allocations", 
                    "report", 
                    "business-groups"
                ], 
                "description": "Retrieve a paginated list of the allocations data for business groups in the current tenant.", 
                "summary": "List of the allocations data for business groups.", 
                "operationId": "getAllocationsDataRpt"
            }
        }, 
        "/api/services/{serviceId}/requests/{requestId}/rollback": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Successful operation."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Unique identifier for the request.", 
                        "required": true, 
                        "type": "string", 
                        "name": "requestId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/providerRollbackRequest"
                        }, 
                        "description": "Rollback request data such as resource identifiers etc.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "internal", 
                    "requests"
                ], 
                "description": "Rolls back a rejected request from the service catalog to IaaS.", 
                "summary": "Rollback a rejected catalog request.", 
                "operationId": "Rollback Request"
            }
        }, 
        "/api/transport-zones": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TransportZone"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "transport-zone"
                ], 
                "description": "Retrieves the list of available transport zones.", 
                "summary": "Retrieves the list of available transport zones.", 
                "operationId": "listTransportZone"
            }
        }, 
        "/api/reports/reclamationSavingsReport/byGroup": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ReclamationSavingsByGroupViewModel"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the name of the group to show savings for, or null to include all machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "groupName", 
                        "in": "query"
                    }, 
                    {
                        "description": "the type of machine to show, or null to include all types of machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "machineType", 
                        "in": "query"
                    }, 
                    {
                        "description": "the start of the report.", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "name": "beginDate"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "report", 
                    "groups", 
                    "reclamation"
                ], 
                "description": "Retrieve a reclamation cost savings report keyed by the group.", 
                "summary": "Retrieve a reclamation cost savings report keyed by the group.", 
                "operationId": "getReclamationSavingsByGroupRpt"
            }
        }, 
        "/api/services/{serviceId}/network/security-tags-deallocator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component Deallocated."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-tag"
                ], 
                "description": "Deallocate Component for a NetworkProviderRequest object", 
                "summary": "Deallocate Component", 
                "operationId": "deallocateComponent"
            }
        }, 
        "/api/services/{serviceId}/network/security-policy-load": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The security policy is loaded.", 
                        "schema": {
                            "$ref": "#/definitions/securityPolicy"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/securityPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/securityPolicy"
                        }, 
                        "description": "The SecurityPolicy to be loaded.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-policy"
                ], 
                "description": "Load a security policy", 
                "summary": "Load a security policy", 
                "operationId": "loadSecurityPolicy"
            }
        }, 
        "/api/services/{serviceId}/network/security-tags-allocation-constraints": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "$ref": "#/definitions/allocationConstraint"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/securityTag"
                        }, 
                        "description": "The security tag.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "name": "relatedCompTypeId", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-tag"
                ], 
                "description": "Get allocation constraint for security tag", 
                "summary": "Get allocation constraint", 
                "operationId": "getSecurityTagAllocationConstraint"
            }
        }, 
        "/api/reports/capacityUsageReport/byComputeResource": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CapacityUsageByComputeResourceViewModel"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the name of the compute resource to show machines for, or null to include all machines", 
                        "required": false, 
                        "type": "string", 
                        "name": "computeResourceName", 
                        "in": "query"
                    }, 
                    {
                        "description": "the type of machine to show, or null to include all types of machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "machineType", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "usage", 
                    "report", 
                    "capacity"
                ], 
                "description": "Retrieve a capacity usage report keyed by the compute resource.", 
                "summary": "Retrieve a capacity usage report keyed by the compute resource.", 
                "operationId": "getCapacityUsageByComputeResourceRpt"
            }
        }, 
        "/api/openstack/flavors": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The Openstack flavors are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Flavor"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The region id.", 
                        "required": false, 
                        "type": "string", 
                        "name": "regionId", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "openstack-flavors"
                ], 
                "description": "Retrieves the list of available Openstack flavors", 
                "summary": "Retrieves the list of available Openstack flavors", 
                "operationId": "listFlavor"
            }
        }, 
        "/api/network/profiles/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }
                    }, 
                    "204": {
                        "description": "The network profile is updated.", 
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The unique identifier for the network profile.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }, 
                        "description": "The network profile to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network-profile"
                ], 
                "description": "Updates an existing NetworkProfile.", 
                "summary": "Updates an existing NetworkProfile.", 
                "operationId": "updateOrCreateNetworkProfile"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "The network profile is deleted."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the network profile to be deleted.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-profile"
                ], 
                "description": "Deletes a network profile corresponding to its unique Id.", 
                "summary": "Deletes a network profile corresponding to its unique Id.", 
                "operationId": "deleteNetworkProfile"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The network profile is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the network profile.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "network-profile"
                ], 
                "description": "Returns the network profile associated with the given id.", 
                "summary": "Returns the network profile.", 
                "operationId": "getNetworkProfile"
            }
        }, 
        "/api/services/{serviceId}/network/security-tags/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The security tag is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/securityTag"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "the id of the SecurityTag", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-tag"
                ], 
                "description": "Returns the SecurityTag associated with the given id.", 
                "summary": "Returns a SecurityTag.", 
                "operationId": "getSecurityTag"
            }
        }, 
        "/api/services/{serviceId}/status/{taskId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The status updates are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IaasRegistrationTaskStatus"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The instance id of a ServiceInfo registration with Component Registry.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The task id returned by register().", 
                        "required": true, 
                        "type": "string", 
                        "name": "taskId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "callback-endpoint-registry"
                ], 
                "description": "Retrieves the list of status updates", 
                "summary": "Retrieves the list of status updates.", 
                "operationId": "listStatusUpdates"
            }
        }, 
        "/api/services/{serviceId}/reservations/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "object"
                        }
                    }, 
                    "204": {
                        "description": "Reservation is updated.", 
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Unique identifier of the reservation to be updated.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }, 
                        "description": "The id of the reservation to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reservation"
                ], 
                "description": "Returns the updated reservation or RestEntity which wraps the newly created reservation.", 
                "summary": "Updates or creates a reservation.", 
                "operationId": "Update or create Reservation"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "Reservation is deleted."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of the reservation to be deleted.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "reservation"
                ], 
                "description": "Deletes a Reservation corresponding to its unique Id.", 
                "summary": "Deletes a Reservation.", 
                "operationId": "Delete Reservation"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The reservation is found.", 
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }
                    }, 
                    "404": {
                        "description": "The reservation is not found."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of the reservation to be retrieved.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "reservation"
                ], 
                "description": "Returns the reservation associated with the given id.", 
                "summary": "Returns the reservation", 
                "operationId": "Get Reservation"
            }
        }, 
        "/api/services/{serviceId}/network/load-balancers-allocator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component allocation request sent."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "load-balancer"
                ], 
                "description": "Allocate Load Balancer Component for a NetworkProviderRequest object", 
                "summary": "Allocate Load Balancer Component", 
                "operationId": "allocateLoadBalancer"
            }
        }, 
        "/api/endpoint-configuration/endpointoperations/create": {
            "post": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "$ref": "#/definitions/endpoint"
                        }
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointCreateRequest"
                        }, 
                        "description": "Request of endpoint to be created.", 
                        "required": true, 
                        "name": "endpointRequest", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API creates a new endpoint. ", 
                "summary": "Creates an endpoint", 
                "operationId": "Create a new endpoint"
            }
        }, 
        "/api/services/{serviceId}/requests/{requestId}/complete": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Successful operation."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Unique idenfier for the request.", 
                        "required": true, 
                        "type": "string", 
                        "name": "requestId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Callback service identifier.", 
                        "required": false, 
                        "type": "string", 
                        "name": "callbackServiceId", 
                        "in": "query"
                    }, 
                    {
                        "description": "Resource action.", 
                        "required": false, 
                        "type": "string", 
                        "name": "resourceAction", 
                        "in": "query"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/requestCompletion"
                        }, 
                        "description": "Request completion details such as request state, resource identifiers and completion text.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "solution-user", 
                    "internal"
                ], 
                "description": "Updates the server catalog from IaaS service for request completion.It does not perform resource updating.", 
                "summary": "Signal catalog request completion.", 
                "operationId": "Complete Request"
            }
        }, 
        "/api/scvmm/virtual-hard-disks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The virtual hard disks are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/VirtualHardDisk"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "scvmm-virtual-hard-disk", 
                    "internal"
                ], 
                "description": "Retrieves the list of virtual hard disks", 
                "summary": "Retrieves the list of virtual hard disks", 
                "operationId": "listVirtualHardDisks"
            }
        }, 
        "/api/keyPairs": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The key pair is created.", 
                        "schema": {
                            "$ref": "#/definitions/KeyPair"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/KeyPair"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/KeyPair"
                        }, 
                        "description": "The key pair to be created.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "key-pair"
                ], 
                "description": "Create a new KeyPair", 
                "summary": "Create a new KeyPair", 
                "operationId": "createKeyPair"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/KeyPair"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "key-pair"
                ], 
                "description": "Returns a page of the key pairs.", 
                "summary": "Returns a page of the key pairs.", 
                "operationId": "listKeyPair"
            }
        }, 
        "/api/openstack/images": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The Openstack images are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/OpenstackImage"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "openstack-images"
                ], 
                "description": "Retrieves the list of available Openstack images.", 
                "summary": "Retrieves the list of available Openstack images.", 
                "operationId": "listOpenstackImage"
            }
        }, 
        "/api/services/{serviceId}/network/security-groups/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "The security group is updated.", 
                        "schema": {
                            "$ref": "#/definitions/securityGroup"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "the id of the SecurityGroup to be updated", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/securityGroup"
                        }, 
                        "description": "the SecurityGroup to be updated", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Updates an existing managed SecurityGroup upon validation on SecurityGroup fields.Returns the updated SecurityGroup or RestEntity which wraps the newly created SecurityGroup.", 
                "summary": "Updates an existing managed SecurityGroup", 
                "operationId": "updateSecurityGroup"
            }, 
            "delete": {
                "responses": {
                    "204": {
                        "description": "The security group is deleted."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of the SecurityGroup to be deleted.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Deletes a SecurityGroup corresponding to its unique Id.", 
                "summary": "Deletes a SecurityGroup", 
                "operationId": "deleteSecurityGroup"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The security group policy is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/securityGroup"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of the SecurityGroup to be retrieved.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Returns the SecurityGroup associated with the given id.", 
                "summary": "Returns the SecurityGroup.", 
                "operationId": "getSecurityGroupPolicy"
            }
        }, 
        "/api/source-machines": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The virtual machine are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Machine"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The platform type id.", 
                        "required": true, 
                        "type": "string", 
                        "name": "platformTypeId", 
                        "in": "query"
                    }, 
                    {
                        "description": "The action id.", 
                        "required": true, 
                        "type": "string", 
                        "name": "actionId", 
                        "in": "query"
                    }, 
                    {
                        "description": "Flag to include \"isTemplate\" in request filter.", 
                        "required": false, 
                        "type": "boolean", 
                        "name": "loadTemplates", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "vm-templates"
                ], 
                "description": "Retrieves the list of VM templates.", 
                "summary": "Retrieves the list of VM templates.", 
                "operationId": "listVirtualMachines"
            }
        }, 
        "/api/endpoint-configuration/endpointoperations/delete": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }, 
                    "404": {
                        "description": "Endpoint with the specified id does not exist."
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointDeleteRequest"
                        }, 
                        "description": "Request of the endpoint to be deleted.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API deletes an existing endpoint. The API returns an error, ifendpoint with the specified id does not exist.", 
                "summary": "Deletes an existing endpoint", 
                "operationId": "Delete an existing endpoint"
            }
        }, 
        "/api/management-endpoints": {
            "get": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "$ref": "#/definitions/ManagementEndpoint"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal"
                ], 
                "description": "Returns a page of management endpoints with support for OData filtering, sorting and paging.", 
                "summary": "Returns a page of management endpoints from iaas provider.", 
                "operationId": "Get Management Endpoints"
            }
        }, 
        "/api/provisioning-workflows": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The provisioning workflows are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ProvisioningWorkflow"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The platform type id.", 
                        "required": true, 
                        "type": "string", 
                        "name": "platformTypeId", 
                        "in": "query"
                    }, 
                    {
                        "description": "The action id.", 
                        "required": false, 
                        "type": "string", 
                        "name": "actionId", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "provisioning-workflow"
                ], 
                "description": "Retrieves a page of provisioning workflows based on action and platform type.", 
                "summary": "Retrieves a page of provisioning workflows.", 
                "operationId": "getProvisioningWorkflow"
            }
        }, 
        "/api/upgrade/property-definition/{id}": {
            "post": {
                "responses": {
                    "201": {
                        "description": "IaaS property definition migrated."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the IaaS property definition.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "internal", 
                    "upgrade", 
                    "property-definition-migration"
                ], 
                "description": "Initiates the migration of a IaaS property definition", 
                "summary": "Initiates the migration of a IaaS property definition", 
                "operationId": "initiateIaasPropertyMigration"
            }
        }, 
        "/api/endpoint-configuration/endpointtypeoperations/delete": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    }, 
                    "404": {
                        "description": "Endpoint type with the specified id does not exist."
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointTypeRequest"
                        }, 
                        "description": "Request of the endpoint type to be deleted.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API deletes an existing endpoint type. The API returns an error, ifendpoint type with the specified id does not exist.", 
                "summary": "Deletes an existing endpoint type", 
                "operationId": "Delete an existing endpoint type"
            }
        }, 
        "/api/business-groups/{groupId}/machines": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IaaSMachine"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the specific busines group id", 
                        "required": true, 
                        "type": "string", 
                        "name": "groupId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "allocations", 
                    "report", 
                    "business-groups"
                ], 
                "description": "List of the IaaS Machines for a specific business group.", 
                "summary": "List of the IaaS Machines for a specific business group.", 
                "operationId": "getIaaSMachinesRpt"
            }
        }, 
        "/api/isoes": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The isos are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Iso"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The platform type id.", 
                        "required": true, 
                        "type": "string", 
                        "name": "platformTypeId", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "iso"
                ], 
                "description": "Retrieves the list of available isos", 
                "summary": "Retrieves the list of available isos", 
                "operationId": "listISOs"
            }
        }, 
        "/api/source-machine-snapshots": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The VM snapshots are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/MachineSnapshot"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The machine id.", 
                        "required": true, 
                        "type": "string", 
                        "name": "machineId", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "vm-snapshots", 
                    "internal"
                ], 
                "description": "Retrieves the list of snapshots for a machine.", 
                "summary": "Retrieves the list of snapshots for a machine.", 
                "operationId": "listVMSnapshots"
            }
        }, 
        "/api/amazon/images": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AmazonImage"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "amazon-images"
                ], 
                "description": "Retrieves the list of available Amazon images", 
                "summary": "Retrieves the list of available Amazon images", 
                "operationId": "listAmazonImage"
            }
        }, 
        "/api/scvmm/hardware-profiles": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The hardware profiles are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/HardwareProfile"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "internal", 
                    "hardware-profile"
                ], 
                "description": "Retrieves the list of available hardware profiles.", 
                "summary": "Retrieves the list of available hardware profiles.", 
                "operationId": "listHardwareProfiles"
            }
        }, 
        "/api/services/{serviceId}/ipam/{bindingId}/complete": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Indicate completion of a request"
                    }
                }, 
                "summary": "Method to be called by ipam service to notify the iaas proxy service that a previously submitted request has been completed", 
                "description": "Callback called by the ipam service", 
                "parameters": [
                    {
                        "description": "Provider ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Binding ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "bindingId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ipamRequestStatus"
                        }, 
                        "description": "Status object returned from the provider", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ipam-request"
                ]
            }
        }, 
        "/api/services/{serviceId}/network/security-groups": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The security group is created.", 
                        "schema": {
                            "$ref": "#/definitions/securityGroup"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/securityGroup"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/securityGroup"
                        }, 
                        "description": "The SecurityGroup to be created and saved.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Create and save a SecurityGroup upon validation on SecurityGroup fields", 
                "summary": "Create and save a SecurityGroup", 
                "operationId": "createSecurityGroup"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/securityGroup"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "description": "Endpoint name for filtering the security groups", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-group"
                ], 
                "description": "Returns a page of the SecurityGroup from the iaas provider.", 
                "summary": "Returns a page of the SecurityGroup.", 
                "operationId": "listSecurityGroup"
            }
        }, 
        "/api/services/{serviceId}/network/networks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The network is created.", 
                        "schema": {
                            "$ref": "#/definitions/network"
                        }
                    }, 
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/network"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/network"
                        }, 
                        "description": "The Network to be created and saved.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network"
                ], 
                "description": "Create and save a Network upon validation on Network fields", 
                "summary": "Create and save a Network", 
                "operationId": "createNetwork"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/network"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network"
                ], 
                "description": "Returns a page of the Network from the iaas provider.", 
                "summary": "Returns a page of the Network.", 
                "operationId": "listNetwork"
            }
        }, 
        "/api/amazon/instance-types/{instanceTypeId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The instance type is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/InstanceType"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the InstanceType.", 
                        "required": true, 
                        "type": "string", 
                        "name": "instanceTypeId", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "internal", 
                    "instance-type"
                ], 
                "description": "Returns the InstanceType associated with the given id.", 
                "summary": "Returns an InstanceType.", 
                "operationId": "getInstanceType"
            }
        }, 
        "/api/reports/capacityUsageReport/blueprints": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "usage", 
                    "report", 
                    "capacity"
                ], 
                "description": "Collection of blueprint names.", 
                "summary": "Collection of blueprint names.", 
                "operationId": "getBlueprintsRpt"
            }
        }, 
        "/api/endpoint-configuration/endpointoperations/candelete": {
            "post": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "type": "boolean"
                        }
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointDeleteRequest"
                        }, 
                        "description": "Request of the endpoint to be deleted.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API checks an existing endpoint to see if it can be deleted. The API returns falseendpoint with the specified id cannot be deleted. It returns true otherwise.", 
                "summary": "Can delete an existing endpoint", 
                "operationId": "Can delete an existing endpoint"
            }
        }, 
        "/api/reports/capacityUsageReport/computeResources": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "usage", 
                    "report", 
                    "capacity"
                ], 
                "description": "Collection of compute resource names.", 
                "summary": "Collection of compute resource names.", 
                "operationId": "getComputeResourcesRpt"
            }
        }, 
        "/api/upgrade/administrators": {
            "post": {
                "operationId": "initiateAdminMigration", 
                "responses": {
                    "201": {
                        "description": "Business group and tenant admins migrated."
                    }
                }, 
                "summary": "Initiates the migration of business group and tenant administrators", 
                "description": "Initiates the migration of business group and tenant administrators", 
                "tags": [
                    "internal", 
                    "group-and-tenant", 
                    "upgrade"
                ]
            }
        }, 
        "/api/endpoint-configuration/endpointtypeoperations/create": {
            "post": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "$ref": "#/definitions/endpointType"
                        }
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointTypeRequest"
                        }, 
                        "description": "Request of endpoint type to be created.", 
                        "required": true, 
                        "name": "endpointRequest", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API creates a new endpoint type. ", 
                "summary": "Creates an endpoint type", 
                "operationId": "Create a new endpoint type"
            }
        }, 
        "/api/reports/reclamationSavingsReport/groups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "report", 
                    "groups", 
                    "reclamation"
                ], 
                "description": "Collection of group names.", 
                "summary": "Collection of group names.", 
                "operationId": "getGroupsRptReclamation"
            }
        }, 
        "/api/endpoint-configuration/endpointoperations/validate": {
            "post": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "$ref": "#/definitions/endpointValidationResult"
                        }
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointValidateRequest"
                        }, 
                        "description": "Request of the endpoint to be validated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API validates an existing endpoint.", 
                "summary": "Validates an existing endpoint", 
                "operationId": "Validates an existing endpoint"
            }
        }, 
        "/api/services/{serviceId}/data-service/schema/{classId}/types/{typeFilter}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The specified type of schema is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The class id of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The specified type of schema.", 
                        "pattern": ".+$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "typeFilter"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data"
                ], 
                "description": "Retrieve the specified schema for service and class", 
                "summary": "Retrieve the specified schema.", 
                "operationId": "getSpecifiedSchema"
            }
        }, 
        "/api/services/{serviceId}/network/security-policies/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The security policy is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/securityPolicy"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "the id of the SecurityPolicy", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-policy"
                ], 
                "description": "Returns the SecurityPolicy associated with the given id.", 
                "summary": "Returns a SecurityPolicy.", 
                "operationId": "getSecurityPolicy"
            }
        }, 
        "/api/endpoint-configuration/endpointtypeoperations/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "$ref": "#/definitions/endpointType"
                        }
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointTypeRequest"
                        }, 
                        "description": "Request of the endpoint type to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API updates an existing endpoint type.", 
                "summary": "Updates an existing endpoint type", 
                "operationId": "Update an existing endpoint type"
            }
        }, 
        "/api/network/profiles/range-summaries/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The list of range summaries for the network profile are retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/StaticIPv4RangeSummary"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The id of the network profile.", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "network-profile"
                ], 
                "description": "Returns a list of range summaries within the network profile.", 
                "summary": "Returns a list of range summaries within the network profile.", 
                "operationId": "getNetworkProfileRangeSummaries"
            }
        }, 
        "/api/services/{serviceId}/network/security-tags-allocator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Component allocation request sent."
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the component registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/networkProviderRequest"
                        }, 
                        "description": "The NetworkProviderRequest object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security", 
                    "security-tag"
                ], 
                "description": "Allocate Security Tag Component for a NetworkProviderRequest object", 
                "summary": "Allocate Security Tag Component", 
                "operationId": "allocateSecurityTag"
            }
        }, 
        "/api/services/{serviceId}/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
            "post": {
                "responses": {
                    "200": {
                        "description": "The permissible values of the specified field are retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/elementValues"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The ID of the IaaS service as registered in the Component Registry service.", 
                        "required": true, 
                        "type": "string", 
                        "name": "serviceId", 
                        "in": "path"
                    }, 
                    {
                        "description": "The class id of object.", 
                        "required": true, 
                        "type": "string", 
                        "name": "classId", 
                        "in": "path"
                    }, 
                    {
                        "pattern": ".+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "typeFilter", 
                        "in": "path"
                    }, 
                    {
                        "description": "The id of a field on the schema of the specified object class.", 
                        "required": true, 
                        "type": "string", 
                        "name": "fieldId", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/elementValuesRequest"
                        }, 
                        "description": "The element values request object.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "schema", 
                    "data"
                ], 
                "description": "Get the permissible values of a field in the type specific schema.", 
                "summary": "Get the permissible values.", 
                "operationId": "getTypeSchemaFields"
            }
        }, 
        "/api/endpoint-configuration/endpointoperations/canedit": {
            "post": {
                "responses": {
                    "200": {
                        "description": "", 
                        "schema": {
                            "type": "boolean"
                        }
                    }, 
                    "403": {
                        "description": "Unauthorized."
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/endpointUpdateRequest"
                        }, 
                        "description": "Request of the endpoint to be updated.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "endpoint-configuration"
                ], 
                "description": "The API checks an existing endpoint to see if it can be edited. The API returns falseendpoint with the specified id cannot be edited. It returns true otherwise.", 
                "summary": "Can edit an existing endpoint", 
                "operationId": "Can edit an existing endpoint"
            }
        }, 
        "/api/reports/capacityUsageReport/byGroup": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The report is retrieved.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CapacityUsageByGroupViewModel"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "the name of the group to show machines for, or null to include all machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "groupName", 
                        "in": "query"
                    }, 
                    {
                        "description": "the type of machine to show, or null to include all types of machines.", 
                        "required": false, 
                        "type": "string", 
                        "name": "machineType", 
                        "in": "query"
                    }, 
                    {
                        "description": "Page Number", 
                        "default": 1, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "page"
                    }, 
                    {
                        "description": "Number of entries per page", 
                        "default": 20, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "limit"
                    }, 
                    {
                        "description": "Multiple comma-separated properties sorted in ascending or descending order", 
                        "required": false, 
                        "type": "string", 
                        "name": "$orderby", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets the number of returned entries from the top of the response (total number per page in relation to skip)", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$top", 
                        "in": "query"
                    }, 
                    {
                        "description": "Sets how many entries you would like to skip", 
                        "required": false, 
                        "type": "integer", 
                        "name": "$skip", 
                        "in": "query"
                    }, 
                    {
                        "description": "Boolean expression for whether a particular entry should be included in the response", 
                        "required": false, 
                        "type": "string", 
                        "name": "$filter", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "usage", 
                    "report", 
                    "capacity"
                ], 
                "description": "Retrieve a capacity usage report keyed by the group.", 
                "summary": "Retrieve a capacity usage report keyed by the group.", 
                "operationId": "getCapacityUsageByGroupRpt"
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "tags": [
        {
            "name": "allocations"
        }, 
        {
            "name": "amazon-images"
        }, 
        {
            "name": "amazon-request-data"
        }, 
        {
            "name": "blueprint"
        }, 
        {
            "name": "blueprint-migration"
        }, 
        {
            "name": "build-profile-migration"
        }, 
        {
            "name": "business-groups"
        }, 
        {
            "name": "callback-endpoint-registry"
        }, 
        {
            "name": "capacity"
        }, 
        {
            "name": "chargeback"
        }, 
        {
            "name": "currency"
        }, 
        {
            "name": "data"
        }, 
        {
            "name": "data-center-location"
        }, 
        {
            "name": "endpoint-configuration"
        }, 
        {
            "name": "endpoint-migration"
        }, 
        {
            "name": "entitlements"
        }, 
        {
            "name": "flag"
        }, 
        {
            "name": "form"
        }, 
        {
            "name": "forms"
        }, 
        {
            "name": "group-and-tenant"
        }, 
        {
            "name": "groups"
        }, 
        {
            "name": "hardware-profile"
        }, 
        {
            "name": "instance-type"
        }, 
        {
            "name": "internal"
        }, 
        {
            "name": "ipam-request"
        }, 
        {
            "name": "iso"
        }, 
        {
            "name": "key-pair"
        }, 
        {
            "name": "load-balancer"
        }, 
        {
            "name": "machine-action"
        }, 
        {
            "name": "machine-prefix"
        }, 
        {
            "name": "nat-rule-components"
        }, 
        {
            "name": "network"
        }, 
        {
            "name": "network-profile"
        }, 
        {
            "name": "network-request"
        }, 
        {
            "name": "openstack-flavors"
        }, 
        {
            "name": "openstack-images"
        }, 
        {
            "name": "openstack-security-group"
        }, 
        {
            "name": "property-definition-migration"
        }, 
        {
            "name": "provisioning-workflow"
        }, 
        {
            "name": "reclamation"
        }, 
        {
            "name": "report"
        }, 
        {
            "name": "requests"
        }, 
        {
            "name": "reservation"
        }, 
        {
            "name": "reservation-policy"
        }, 
        {
            "name": "schema"
        }, 
        {
            "name": "scvmm-virtual-hard-disk"
        }, 
        {
            "name": "security"
        }, 
        {
            "name": "security-group"
        }, 
        {
            "name": "security-policy"
        }, 
        {
            "name": "security-tag"
        }, 
        {
            "name": "solution-user"
        }, 
        {
            "name": "transport-zone"
        }, 
        {
            "name": "upgrade"
        }, 
        {
            "name": "usage"
        }, 
        {
            "name": "vm-snapshots"
        }, 
        {
            "name": "vm-templates"
        }
    ], 
    "basePath": "/iaas-proxy-provider", 
    "definitions": {
        "PageCapacityUsageByBlueprintViewModel": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/CapacityUsageByBlueprintViewModel"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "ConstantValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/literal"
                        }
                    }
                }
            ]
        }, 
        "GreaterThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "securityPolicy": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "securityPolicy"
                    }, 
                    "type": "object", 
                    "properties": {
                        "securityPolicyTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "internal": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }
                    }
                }
            ]
        }, 
        "providerRequest": {
            "xml": {
                "name": "providerRequest"
            }, 
            "type": "object", 
            "properties": {
                "callbackServiceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestedFor": {
                    "type": "string"
                }, 
                "requestNumber": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "description": {
                    "type": "string"
                }, 
                "requestType": {
                    "enum": [
                        "CATALOG_ITEM", 
                        "RESOURCE_ACTION"
                    ], 
                    "type": "string"
                }, 
                "requestBindingId": {
                    "type": "string"
                }, 
                "requestedObjectId": {
                    "type": "string"
                }, 
                "solution": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "catalogItemTypeId": {
                    "type": "string"
                }, 
                "requestData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "targetResourceTypeId": {
                    "type": "string"
                }, 
                "rootCafeResourceId": {
                    "type": "string"
                }, 
                "targetResourceId": {
                    "type": "string"
                }, 
                "targetResourceProviderId": {
                    "type": "string"
                }, 
                "organization": {
                    "$ref": "#/definitions/catalogOrganizationReference"
                }, 
                "targetCafeResourceId": {
                    "type": "string"
                }, 
                "requestedBy": {
                    "type": "string"
                }, 
                "reasons": {
                    "type": "string"
                }, 
                "catalogRequestId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "NotEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "StaticIPv4RangeSummary": {
            "required": [
                "allocatedAddresses", 
                "beginIPv4Address", 
                "destroyedAddresses", 
                "endIPv4Address", 
                "expiredAddresses", 
                "name", 
                "networkProfileId", 
                "state", 
                "totalAddresses", 
                "unallocatedAddresses"
            ], 
            "type": "object", 
            "properties": {
                "beginIPv4Address": {
                    "type": "string"
                }, 
                "unallocatedAddresses": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "description": {
                    "type": "string"
                }, 
                "allocatedAddresses": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalAddresses": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "lastModifiedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "networkProfileId": {
                    "type": "string"
                }, 
                "expiredAddresses": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "state": {
                    "enum": [
                        "ALLOCATED", 
                        "UNALLOCATED", 
                        "DESTROYED", 
                        "EXPIRED"
                    ], 
                    "type": "string"
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "destroyedAddresses": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "endIPv4Address": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "IaasRegistrationTaskStatus": {
            "type": "object", 
            "properties": {
                "failureStage": {
                    "enum": [
                        "REGISTRATION_NOT_STARTED", 
                        "REGISTRATION_STARTING", 
                        "REGISTER_RESOURCE_BUNDLE_CALLBACK_ENDPOINT", 
                        "REGISTER_INFRASTRUCTURE_ENDPOINT_TYPES", 
                        "REGISTER_CATALOG_PROVIDER_CALLBACK_ENDPOINT", 
                        "REGISTER_CATALOG_FORMS_CALLBACK_ENDPOINT", 
                        "REGISTER_DATA_SCHEMA_CALLBACK_ENDPOINT", 
                        "REGISTER_RESERVATION_SERVICE_CALLBACK_ENDPOINT", 
                        "REGISTER_NETWORK_SERVICE_CALLBACK_ENDPOINT", 
                        "REGISTER_IPAM_SERVICE_CALLBACK_ENDPOINT", 
                        "REGISTER_BUSINESS_GROUP_CALLBACK_ENDPOINT", 
                        "REGISTER_COMPOSITION_PROVIDER_CALLBACK_ENDPOINT", 
                        "REGISTER_COMPOSITION_BPVALIDATION_PROVIDER_CALLBACK_ENDPOINT", 
                        "REGISTER_COMPOSITION_BPENHANCEMENT_PROVIDER_CALLBACK_ENDPOINT", 
                        "REGISTER_RESOURCE_TYPES", 
                        "REGISTER_CATALOG_ITEM_TYPES", 
                        "REGISTER_CATALOG_ITEMS", 
                        "REGISTER_COMPONENT_TYPES", 
                        "REGISTER_RESOURCE_ACTIONS", 
                        "REGISTER_RESERVATION_TYPE_CATEGORIES", 
                        "REGISTER_RESERVATION_TYPES", 
                        "REGISTER_RESERVATION_POLICY_TYPES", 
                        "REGISTER_EVENT_TOPICS", 
                        "REGISTER_NETWORK_PLATFORM_TYPES", 
                        "REGISTRATION_COMPLETE", 
                        "REGISTRATION_FAILED"
                    ], 
                    "type": "string"
                }, 
                "iaasRegistrationStatus": {
                    "enum": [
                        "REGISTRATION_NOT_STARTED", 
                        "REGISTRATION_STARTING", 
                        "REGISTER_RESOURCE_BUNDLE_CALLBACK_ENDPOINT", 
                        "REGISTER_INFRASTRUCTURE_ENDPOINT_TYPES", 
                        "REGISTER_CATALOG_PROVIDER_CALLBACK_ENDPOINT", 
                        "REGISTER_CATALOG_FORMS_CALLBACK_ENDPOINT", 
                        "REGISTER_DATA_SCHEMA_CALLBACK_ENDPOINT", 
                        "REGISTER_RESERVATION_SERVICE_CALLBACK_ENDPOINT", 
                        "REGISTER_NETWORK_SERVICE_CALLBACK_ENDPOINT", 
                        "REGISTER_IPAM_SERVICE_CALLBACK_ENDPOINT", 
                        "REGISTER_BUSINESS_GROUP_CALLBACK_ENDPOINT", 
                        "REGISTER_COMPOSITION_PROVIDER_CALLBACK_ENDPOINT", 
                        "REGISTER_COMPOSITION_BPVALIDATION_PROVIDER_CALLBACK_ENDPOINT", 
                        "REGISTER_COMPOSITION_BPENHANCEMENT_PROVIDER_CALLBACK_ENDPOINT", 
                        "REGISTER_RESOURCE_TYPES", 
                        "REGISTER_CATALOG_ITEM_TYPES", 
                        "REGISTER_CATALOG_ITEMS", 
                        "REGISTER_COMPONENT_TYPES", 
                        "REGISTER_RESOURCE_ACTIONS", 
                        "REGISTER_RESERVATION_TYPE_CATEGORIES", 
                        "REGISTER_RESERVATION_TYPES", 
                        "REGISTER_RESERVATION_POLICY_TYPES", 
                        "REGISTER_EVENT_TOPICS", 
                        "REGISTER_NETWORK_PLATFORM_TYPES", 
                        "REGISTRATION_COMPLETE", 
                        "REGISTRATION_FAILED"
                    ], 
                    "type": "string"
                }, 
                "serviceId": {
                    "type": "string"
                }, 
                "taskId": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "failure": {
                    "type": "string"
                }
            }
        }, 
        "complexLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "complexLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's class."
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component type."
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The type filter for this literal."
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier for this literal's component."
                        }, 
                        "values": {
                            "description": "Map of values, keyed by the field ids of some complex type.", 
                            "$ref": "#/definitions/literalMap"
                        }
                    }, 
                    "description": "A complex value composed of multiple values keyed by the field ids of some complex type."
                }
            ]
        }, 
        "ParameterMapping": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "alertPolicy": {
            "xml": {
                "name": "alertPolicy"
            }, 
            "type": "object", 
            "properties": {
                "frequencyReminder": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "alerts": {
                    "items": {
                        "$ref": "#/definitions/alert"
                    }, 
                    "type": "array"
                }, 
                "enabled": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "recipients": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "emailBgMgr": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "loadBalancerPool": {
            "xml": {
                "name": "loadBalancerPool"
            }, 
            "type": "object", 
            "properties": {
                "protocol": {
                    "type": "string"
                }, 
                "connectionLimit": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "acceleration": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "servicePortId": {
                    "type": "string"
                }, 
                "connectionRate": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "persistenceMethod": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "persistenceExpiration": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memberMinConnections": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "monitorPort": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "uniqueMonitorId": {
                    "type": "string"
                }, 
                "monitorIds": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string"
                }, 
                "persistenceCookieName": {
                    "type": "string"
                }, 
                "members": {
                    "items": {
                        "$ref": "#/definitions/loadBalancerMember"
                    }, 
                    "type": "array"
                }, 
                "algorithmParameter": {
                    "type": "string"
                }, 
                "transparent": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "persistenceCookieMode": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "algorithm": {
                    "type": "string"
                }, 
                "healthCheckProtocol": {
                    "type": "string"
                }, 
                "memberMaxConnections": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memberPort": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "endpointTypeRequest": {
            "xml": {
                "name": "endpointTypeRequest"
            }, 
            "type": "object", 
            "properties": {
                "endpointType": {
                    "$ref": "#/definitions/endpointType"
                }
            }
        }, 
        "SubsetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "moneyRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRange"
                    }, 
                    "type": "object", 
                    "properties": {
                        "maxValue": {
                            "type": "number", 
                            "description": "The upper limit of the range.", 
                            "format": "double"
                        }, 
                        "minValue": {
                            "type": "number", 
                            "description": "The lower limit of the range.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a range of money values, between some defined minimums and maximums."
                }
            ]
        }, 
        "EndsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ChargebackByGroupViewModel": {
            "type": "object", 
            "properties": {
                "startDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "endDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "machineName": {
                    "type": "string"
                }, 
                "parentName": {
                    "type": "string"
                }, 
                "cpus": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "href": {
                    "type": "string"
                }, 
                "totalCost": {
                    "type": "number", 
                    "format": "double"
                }, 
                "storage": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "groupName": {
                    "type": "string"
                }, 
                "pageNumber": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memory": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "resultsPerPage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "chargedDays": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "machineType": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "parentId": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "cpuCost": {
                    "type": "number", 
                    "format": "double"
                }, 
                "groupId": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "userName": {
                    "type": "string"
                }, 
                "storageCost": {
                    "type": "number", 
                    "format": "double"
                }, 
                "blueprintCost": {
                    "type": "number", 
                    "format": "double"
                }, 
                "sortByColumn": {
                    "type": "string"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "machineTemplateName": {
                    "type": "string"
                }, 
                "memoryCost": {
                    "type": "number", 
                    "format": "double"
                }
            }
        }, 
        "ProvisioningWorkflow": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "buildTag": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "ConditionalEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "cases": {
                            "xml": {
                                "name": "case"
                            }, 
                            "items": {
                                "$ref": "#/definitions/ConditionalEvaluatorCase"
                            }, 
                            "type": "array"
                        }, 
                        "defaulValue": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "ParameterMappingCollection": {
            "type": "object", 
            "properties": {
                "params": {
                    "xml": {
                        "wrapped": true, 
                        "name": "param"
                    }, 
                    "items": {
                        "$ref": "#/definitions/ParameterMapping"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "DisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageLoadBalancer": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/loadBalancer"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "endpointDeleteRequest": {
            "xml": {
                "name": "endpointDeleteRequest"
            }, 
            "type": "object", 
            "properties": {
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "providerServiceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpoint": {
                    "$ref": "#/definitions/endpoint"
                }, 
                "associatedEndpoints": {
                    "items": {
                        "$ref": "#/definitions/endpoint"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "booleanLiteral": {
            "xml": {
                "name": "booleanLiteral"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "value": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "The boolean value."
                }
            }, 
            "description": "Wraps a boolean value."
        }, 
        "entities": {
            "xml": {
                "name": "entities"
            }, 
            "type": "object", 
            "properties": {
                "content": {
                    "xml": {
                        "wrapped": true
                    }, 
                    "items": {
                        "$ref": "#/definitions/BusinessGroupAllocationsData"
                    }, 
                    "type": "array"
                }, 
                "links": {
                    "xml": {
                        "wrapped": true, 
                        "name": "links"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Link"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ApplicationProfile": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "networkObject"
                    }, 
                    "type": "object", 
                    "properties": {
                        "cookieName": {
                            "type": "string"
                        }, 
                        "Expiry": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "insertXForwardedFor": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "serverSslEnabled": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "cookieMode": {
                            "type": "string"
                        }, 
                        "template": {
                            "type": "string"
                        }, 
                        "sslPassthrough": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "method": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "loadBalancer": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "loadBalancer"
                    }, 
                    "type": "object", 
                    "properties": {
                        "vipNicIndex": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "tierNetwork": {
                            "type": "string"
                        }, 
                        "virtualIps": {
                            "items": {
                                "$ref": "#/definitions/loadBalancerVirtualIp"
                            }, 
                            "type": "array"
                        }, 
                        "tierNicIndex": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "vipNetwork": {
                            "type": "string"
                        }, 
                        "loggingLevel": {
                            "type": "string"
                        }, 
                        "pools": {
                            "items": {
                                "$ref": "#/definitions/loadBalancerPool"
                            }, 
                            "type": "array"
                        }, 
                        "loadBalancerTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "monitors": {
                            "items": {
                                "$ref": "#/definitions/loadBalancerMonitor"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "ipReleaseResult": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRangeOperation"
                }, 
                {
                    "xml": {
                        "name": "ipReleaseResult"
                    }, 
                    "type": "object", 
                    "properties": {
                        "status": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "UNKNOWN", 
                                "COMPLETED", 
                                "IN_PROGRESS", 
                                "FAILED"
                            ], 
                            "type": "string"
                        }, 
                        "errorCode": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "errorMessage": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "ipReleaseRequestId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "money": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "money"
                    }, 
                    "type": "object", 
                    "properties": {
                        "amount": {
                            "type": "number", 
                            "description": "The amount associated with this value (with no specific currency).", 
                            "format": "double"
                        }
                    }, 
                    "description": "Represents a single, precise monetary value."
                }
            ]
        }, 
        "OrClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "NatRuleComponent": {
            "type": "object", 
            "properties": {
                "targetType": {
                    "enum": [
                        "UNKNOWN", 
                        "VM_NIC", 
                        "LB_VIP"
                    ], 
                    "type": "string"
                }, 
                "machineId": {
                    "type": "string"
                }, 
                "nicIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "componentName": {
                    "type": "string"
                }, 
                "profileId": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "ipAddress": {
                    "type": "string"
                }
            }
        }, 
        "ipRange": {
            "xml": {
                "name": "ipRange"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "end": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "start": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "addressSpaceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "dnsInfo": {
                    "$ref": "#/definitions/dnsInfo"
                }, 
                "gateway": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "ipVersion": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "IPv6", 
                        "IPv4"
                    ], 
                    "type": "string"
                }, 
                "providerEndpointId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "subnetPrefixLength": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "providerEndpointURI": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "ipAllocationRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRangeOperation"
                }, 
                {
                    "xml": {
                        "name": "ipAllocationRequest"
                    }, 
                    "type": "object", 
                    "properties": {
                        "blueprintRequestId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "allocationSize": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "integer", 
                            "format": "int64"
                        }, 
                        "primary": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "nicIndex": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "allocationStartAddress": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "rangeIds": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "ipRangeDeleteResult": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRangeOperation"
                }, 
                {
                    "xml": {
                        "name": "ipRangeDeleteResult"
                    }, 
                    "type": "object", 
                    "properties": {
                        "status": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "UNKNOWN", 
                                "COMPLETED", 
                                "IN_PROGRESS", 
                                "FAILED"
                            ], 
                            "type": "string"
                        }, 
                        "errorCode": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "errorMessage": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "ipRangeDeleteRequestId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "UniqueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "AmazonRequestData": {
            "type": "object", 
            "properties": {
                "subnets": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/AmazonSubnet"
                    }, 
                    "type": "array"
                }, 
                "availabilityZones": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/AvailabilityZone"
                    }, 
                    "type": "array"
                }, 
                "securityGroups": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/AmazonSecurityGroup"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "PrivateNetworkProfile": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkProfile"
                }, 
                {
                    "required": [
                        "gatewayAddress", 
                        "subnetMask"
                    ], 
                    "type": "object", 
                    "properties": {
                        "subnetMask": {
                            "minLength": 1, 
                            "type": "string", 
                            "maxLength": 255
                        }, 
                        "gatewayAddress": {
                            "minLength": 1, 
                            "type": "string", 
                            "maxLength": 255
                        }, 
                        "dhcpConfig": {
                            "$ref": "#/definitions/DhcpConfig"
                        }
                    }
                }
            ]
        }, 
        "stringLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "stringLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a String value."
                }
            ]
        }, 
        "endpointValidationResult": {
            "xml": {
                "name": "endpointValidationResult"
            }, 
            "type": "object", 
            "properties": {
                "status": {
                    "enum": [
                        "SUCCESS", 
                        "HOST_NOT_REACHABLE", 
                        "AGENT_NOT_FOUND", 
                        "UNKNOWN_FAILURE", 
                        "INVALID_CERTIFICATE", 
                        "INVALID_CREDENTIALS", 
                        "TIMEOUT"
                    ], 
                    "type": "string"
                }, 
                "message": {
                    "type": "string"
                }, 
                "certificateInfo": {
                    "$ref": "#/definitions/CertificateInfo"
                }
            }
        }, 
        "endpoint": {
            "xml": {
                "name": "endpoint"
            }, 
            "required": [
                "uri"
            ], 
            "type": "object", 
            "properties": {
                "associations": {
                    "items": {
                        "$ref": "#/definitions/association"
                    }, 
                    "type": "array"
                }, 
                "typeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "typeDisplayName": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "uri": {
                    "type": "string"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "type": "string"
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "entityRef": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRef"
                    }, 
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The identifier of the type or category to which the referenced entity belongs."
                        }, 
                        "label": {
                            "type": "string"
                        }, 
                        "id": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The unique identifier of the referenced entity, encoded as a string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The durable identifier of a component registered in the suite component registry that owns and manages the referenced entity. This can be omitted if this component can be derived from the context within which this entity reference occurs. It must be specified, if no such context exists or if the component differs from that defined by the context."
                        }
                    }, 
                    "description": "Represents a reference to an entity defined somewhere in the suite."
                }
            ]
        }, 
        "PageReservation": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/reservation"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "SecurityTag": {
            "allOf": [
                {
                    "$ref": "#/definitions/securityTag"
                }, 
                {
                    "xml": {
                        "name": "securityTag"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "PageHostProperty": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/HostProperty"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "CallbackEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "IaaSMachine": {
            "type": "object", 
            "properties": {
                "status": {
                    "type": "string"
                }, 
                "machineType": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "destructionDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "expirationDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "PageKeyPair": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/KeyPair"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "association": {
            "xml": {
                "name": "association"
            }, 
            "type": "object", 
            "properties": {
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "toEndpointId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "fromEndpointId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "customProperties": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "type": "string"
                }, 
                "associationTypeInfoId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "MaxCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ipRangeCreateResult": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRangeOperation"
                }, 
                {
                    "xml": {
                        "name": "ipRangeCreateResult"
                    }, 
                    "type": "object", 
                    "properties": {
                        "ipRangeCreateRequestId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "ipRange": {
                            "$ref": "#/definitions/ipRange"
                        }
                    }
                }
            ]
        }, 
        "ElementState": {
            "type": "object", 
            "properties": {
                "facets": {
                    "xml": {
                        "wrapped": true, 
                        "name": "facet"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    }, 
                    "type": "array"
                }, 
                "dependencies": {
                    "xml": {
                        "wrapped": true, 
                        "name": "dependency"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "type": "string"
                    }
                }
            }
        }, 
        "ipRangesCreateRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRangeOperation"
                }, 
                {
                    "xml": {
                        "name": "ipRangesCreateRequest"
                    }, 
                    "type": "object", 
                    "properties": {
                        "blueprintRequestId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "networkProfileId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ExternalNetworkProfile": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkProfile"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "secondaryWinsAddress": {
                            "type": "string"
                        }, 
                        "primaryDnsAddress": {
                            "type": "string"
                        }, 
                        "primaryWinsAddress": {
                            "type": "string"
                        }, 
                        "dnsSearchSuffix": {
                            "type": "string"
                        }, 
                        "secondaryDnsAddress": {
                            "type": "string"
                        }, 
                        "dnsSuffix": {
                            "type": "string"
                        }, 
                        "subnetMask": {
                            "minLength": 1, 
                            "type": "string", 
                            "maxLength": 100
                        }, 
                        "gatewayAddress": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "BusinessGroupAllocationsData": {
            "type": "object", 
            "properties": {
                "totalVmsAvailable": {
                    "type": "number", 
                    "format": "float"
                }, 
                "cloudQuotaAllocated": {
                    "type": "number", 
                    "format": "float"
                }, 
                "totalMemory": {
                    "type": "number", 
                    "format": "float"
                }, 
                "allocatedStorage": {
                    "type": "number", 
                    "format": "float"
                }, 
                "memoryPercentage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "storageSavingsPercentage": {
                    "type": "number", 
                    "format": "float"
                }, 
                "subtenantDescription": {
                    "type": "string"
                }, 
                "virtualQuotaAllocated": {
                    "type": "number", 
                    "format": "float"
                }, 
                "storagePercentage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "physicalQuotaAllocated": {
                    "type": "number", 
                    "format": "float"
                }, 
                "subtenantId": {
                    "type": "string"
                }, 
                "storageUsed": {
                    "type": "number", 
                    "format": "float"
                }, 
                "storageUsedPercentage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalPmAvailable": {
                    "type": "number", 
                    "format": "float"
                }, 
                "virtualQuotaPercentage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "cloudQuotaPercentage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalQuotaPercentage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalCmAvailable": {
                    "type": "number", 
                    "format": "float"
                }, 
                "totalQuota": {
                    "type": "number", 
                    "format": "float"
                }, 
                "physicalQuotaTotalAvailable": {
                    "type": "number", 
                    "format": "float"
                }, 
                "virtualQuotaTotalAvailable": {
                    "type": "number", 
                    "format": "float"
                }, 
                "cloudQuotaTotalAvailable": {
                    "type": "number", 
                    "format": "float"
                }, 
                "allocatedMemory": {
                    "type": "number", 
                    "format": "float"
                }, 
                "subtenantName": {
                    "type": "string"
                }, 
                "totalQuotaAvailable": {
                    "type": "number", 
                    "format": "float"
                }, 
                "storageSavings": {
                    "type": "number", 
                    "format": "float"
                }, 
                "totalMachines": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalQuotaAllocated": {
                    "type": "number", 
                    "format": "float"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "totalPercentage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "physicalQuotaPercentage": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalStorage": {
                    "type": "number", 
                    "format": "float"
                }
            }
        }, 
        "Clause": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "natRule": {
            "xml": {
                "name": "natRule"
            }, 
            "type": "object", 
            "properties": {
                "protocol": {
                    "type": "string"
                }, 
                "peerInterfaceIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "tag": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "edgeId": {
                    "type": "string"
                }, 
                "translatedAddress": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "type": {
                    "type": "string"
                }, 
                "componentId": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "componentName": {
                    "type": "string"
                }, 
                "originalAddress": {
                    "type": "string"
                }, 
                "targetType": {
                    "type": "string"
                }, 
                "originalPort": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "userDefined": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "machineId": {
                    "type": "string"
                }, 
                "networkInterfaceId": {
                    "type": "string"
                }, 
                "enabled": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "interfaceIndex": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "translatedPort": {
                    "type": "string"
                }, 
                "action": {
                    "type": "string"
                }, 
                "order": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "DhcpConfig": {
            "type": "object", 
            "properties": {
                "dhcpLeaseTimeInSeconds": {
                    "minimum": 0.0, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "dhcpEndIPAddress": {
                    "type": "string"
                }, 
                "dhcpStartIPAddress": {
                    "type": "string"
                }
            }
        }, 
        "ComplexEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "values": {
                            "additionalProperties": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "object"
                        }
                    }
                }
            ]
        }, 
        "StartsWithOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "LessThanOrEqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageStaticIPv4Address": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/StaticIPv4Address"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "LoadBalancerPool": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "loadBalancerPool"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "ipRangeDeleteRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRangeOperation"
                }, 
                {
                    "xml": {
                        "name": "ipRangeDeleteRequest"
                    }, 
                    "type": "object", 
                    "properties": {
                        "ipRangeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "externalIpRangeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ipamObject": {
            "xml": {
                "name": "ipamObject"
            }, 
            "type": "object", 
            "properties": {
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "name": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "networkBacking": {
            "xml": {
                "name": "networkBacking"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "computeResourceName": {
                    "type": "string"
                }, 
                "computeResourceNetworkId": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "computeResourceId": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "RoutedNetworkProfile": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkProfile"
                }, 
                {
                    "required": [
                        "externalNetworkProfileId", 
                        "parentNetworkProfileId"
                    ], 
                    "type": "object", 
                    "properties": {
                        "externalNetworkProfileName": {
                            "type": "string"
                        }, 
                        "parentNetworkProfileId": {
                            "type": "string"
                        }, 
                        "secondaryWinsAddress": {
                            "type": "string"
                        }, 
                        "externalNetworkProfileId": {
                            "type": "string"
                        }, 
                        "primaryWinsAddress": {
                            "type": "string"
                        }, 
                        "baseIP": {
                            "type": "string"
                        }, 
                        "dlrEdgeId": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "dnsSearchSuffix": {
                            "type": "string"
                        }, 
                        "secondaryDnsAddress": {
                            "type": "string"
                        }, 
                        "dnsSuffix": {
                            "type": "string"
                        }, 
                        "addressGroupId": {
                            "type": "string"
                        }, 
                        "subnetMask": {
                            "type": "string"
                        }, 
                        "primaryDnsAddress": {
                            "type": "string"
                        }, 
                        "rangeSubnetMask": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "Flavor": {
            "type": "object", 
            "properties": {
                "regionId": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "diskSizeInGB": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "ramInMB": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "disabled": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "isMissing": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "endpointName": {
                    "type": "string"
                }, 
                "endpointId": {
                    "type": "string"
                }, 
                "flavorUniqueId": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "virtualCPUCount": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "decimalLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "decimalLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "number", 
                            "description": "The decimal value.", 
                            "format": "double"
                        }
                    }, 
                    "description": "Wraps a decimal value."
                }
            ]
        }, 
        "ContextPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "providerRollbackRequest": {
            "xml": {
                "name": "providerRollbackRequest"
            }, 
            "type": "object", 
            "properties": {
                "resourceIds": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "MaxLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "loadBalancerVirtualIp": {
            "xml": {
                "name": "loadBalancerVirtualIp"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "description": {
                    "type": "string"
                }, 
                "poolId": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "address": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "ReclamationSavingsByGroupViewModel": {
            "type": "object", 
            "properties": {
                "storageGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "cost": {
                    "type": "number", 
                    "format": "double"
                }, 
                "machinesTotal": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "beginDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "memoryMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "cpus": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "groupName": {
                    "type": "string"
                }, 
                "href": {
                    "type": "string"
                }, 
                "machinesReclaimed": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "machineType": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "machinesReclaimedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "Network": {
            "allOf": [
                {
                    "$ref": "#/definitions/network"
                }, 
                {
                    "xml": {
                        "name": "network"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "AmazonSubnet": {
            "type": "object", 
            "properties": {
                "availabilityZone": {
                    "$ref": "#/definitions/AvailabilityZone"
                }, 
                "reservationIds": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "subnetState": {
                    "type": "string"
                }, 
                "availableIpAddresses": {
                    "type": "number"
                }, 
                "amazonSubnetId": {
                    "type": "string"
                }, 
                "vpc": {
                    "$ref": "#/definitions/VirtualPrivateCloud"
                }, 
                "cidrBlock": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "PageNetwork": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/network"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "PageHardwareProfile": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/HardwareProfile"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "SkipExportBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "CapacityUsageByComputeResourceViewModel": {
            "type": "object", 
            "properties": {
                "machineType": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "storageAllocatedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "storageReservedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "machinesTotal": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "hostName": {
                    "type": "string"
                }, 
                "cpus": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "storagePhysicalGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "storageAllocatedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "href": {
                    "type": "string"
                }, 
                "memoryReservedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memoryPhysicalMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "storageUsedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "memoryAllocatedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "storageReservedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memoryAllocatedMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "machinesAllocated": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memoryReservedMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "IpRangeOperationRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipamObject"
                }, 
                {
                    "xml": {
                        "name": "ipamObject"
                    }, 
                    "type": "object", 
                    "properties": {
                        "ipRangeOperations": {
                            "items": {
                                "$ref": "#/definitions/ipRangeOperation"
                            }, 
                            "type": "array"
                        }, 
                        "networkProfileId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "resourceInfo": {
                            "$ref": "#/definitions/resourceInfo"
                        }
                    }
                }
            ]
        }, 
        "FixedValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaxValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "CoalesceEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "moneyRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "cost": {
                            "description": "The cost (including optional currency code).", 
                            "$ref": "#/definitions/literal"
                        }
                    }, 
                    "description": "A base type for literals representing a rate of some monetary value over a specified basis. E.g. $5 / hour; $1-2 / GB."
                }
            ]
        }, 
        "registerMachineInfo": {
            "xml": {
                "name": "registerMachineInfo"
            }, 
            "required": [
                "componentId", 
                "compositeBlueprintId", 
                "deploymentName", 
                "hostReservationId", 
                "hostStorageReservationId", 
                "owner", 
                "requestingUser", 
                "templateId", 
                "virtualMachineId"
            ], 
            "type": "object", 
            "properties": {
                "machineProperties": {
                    "items": {
                        "$ref": "#/definitions/MachineProperty"
                    }, 
                    "type": "array"
                }, 
                "virtualMachineId": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "requestingUser": {
                    "type": "string"
                }, 
                "deploymentName": {
                    "type": "string"
                }, 
                "hostReservationId": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "compositeBlueprintId": {
                    "type": "string"
                }, 
                "templateId": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "owner": {
                    "type": "string"
                }, 
                "componentId": {
                    "type": "string"
                }, 
                "hostStorageReservationId": {
                    "type": "string", 
                    "format": "uuid"
                }
            }
        }, 
        "MoneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "LoadBalancerVirtualIp": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "loadBalancerVirtualIp"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "PageTransportZone": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/TransportZone"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "ipAllocationResult": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRangeOperation"
                }, 
                {
                    "xml": {
                        "name": "ipAllocationResult"
                    }, 
                    "type": "object", 
                    "properties": {
                        "rangeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "allocatedAddresses": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "dnsInfo": {
                            "$ref": "#/definitions/dnsInfo"
                        }, 
                        "ipVersion": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "IPv6", 
                                "IPv4"
                            ], 
                            "type": "string"
                        }, 
                        "subnetPrefixLength": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "gateway": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "ipAllocationRequestId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "ipRangeOperation": {
            "xml": {
                "name": "ipRangeOperation"
            }, 
            "type": "object", 
            "properties": {
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "name": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "endpointValidateRequest": {
            "xml": {
                "name": "endpointValidateRequest"
            }, 
            "type": "object", 
            "properties": {
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "providerServiceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpoint": {
                    "$ref": "#/definitions/endpoint"
                }, 
                "associatedEndpoints": {
                    "items": {
                        "$ref": "#/definitions/endpoint"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "ComplexDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }
            ]
        }, 
        "MachinePrefix": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "VisibilityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "HardwareProfile": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "memoryInMB": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "cpuCount": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "cpuType": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "PageMachine": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/Machine"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "Link": {
            "type": "object", 
            "properties": {
                "href": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "rel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "VirtualHardDisk": {
            "type": "object", 
            "properties": {
                "vhdType": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "PermissibleValueList": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "customAllowed": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "StaticIPv4Range": {
            "required": [
                "beginIPv4Address", 
                "endIPv4Address", 
                "gateway", 
                "name", 
                "networkProfileId", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "beginIPv4Address": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "lastModifiedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "networkProfileId": {
                    "type": "string"
                }, 
                "gateway": {
                    "type": "string"
                }, 
                "state": {
                    "enum": [
                        "ALLOCATED", 
                        "UNALLOCATED", 
                        "DESTROYED", 
                        "EXPIRED"
                    ], 
                    "type": "string"
                }, 
                "definedAddresses": {
                    "items": {
                        "$ref": "#/definitions/StaticIPv4Address"
                    }, 
                    "type": "array"
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "endIPv4Address": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "Evaluator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "ConstantClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/booleanLiteral"
                        }
                    }
                }
            ]
        }, 
        "endpointUpdateRequest": {
            "xml": {
                "name": "endpointUpdateRequest"
            }, 
            "type": "object", 
            "properties": {
                "endpoint": {
                    "$ref": "#/definitions/endpoint"
                }, 
                "existingEndpoint": {
                    "$ref": "#/definitions/endpoint"
                }, 
                "providerServiceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "existingAssociatedEndpoints": {
                    "items": {
                        "$ref": "#/definitions/endpoint"
                    }, 
                    "type": "array"
                }, 
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "associatedEndpoints": {
                    "items": {
                        "$ref": "#/definitions/endpoint"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "literalMap": {
            "xml": {
                "name": "literalMap"
            }, 
            "type": "object", 
            "properties": {
                "entries": {
                    "xml": {
                        "name": "entry"
                    }, 
                    "items": {
                        "$ref": "#/definitions/LiteralMapEntry"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Equivalent of java.util.Map"
        }, 
        "TransportZone": {
            "type": "object", 
            "properties": {
                "name": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 256
                }, 
                "nsxEndpointId": {
                    "type": "string"
                }, 
                "externalId": {
                    "minLength": 0, 
                    "type": "string", 
                    "maxLength": 128
                }, 
                "managementEndpointName": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "revision": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "PageChargebackByGroupViewModel": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/ChargebackByGroupViewModel"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "elementValuesRequest": {
            "xml": {
                "name": "elementValuesRequest"
            }, 
            "type": "object", 
            "properties": {
                "text": {
                    "type": "string"
                }, 
                "userId": {
                    "type": "string"
                }, 
                "associateValue": {
                    "$ref": "#/definitions/literal"
                }, 
                "headers": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "pagingInfo": {
                    "$ref": "#/definitions/ElementValuesPagingInfo"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "dependencyValues": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "networkObject": {
            "xml": {
                "name": "networkObject"
            }, 
            "type": "object", 
            "properties": {
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "MinimumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "allocationConstraint": {
            "xml": {
                "name": "allocationConstraint"
            }, 
            "type": "object", 
            "properties": {
                "filter": {
                    "type": "string"
                }
            }
        }, 
        "StaticPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "values": {
                            "xml": {
                                "name": "value"
                            }, 
                            "items": {
                                "$ref": "#/definitions/value"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "PageMachinePrefix": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/MachinePrefix"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "MandatoryConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MaximumValueEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "arguments": {
                            "xml": {
                                "wrapped": true, 
                                "name": "argument"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "MachineSnapshot": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "externalSnapshotId": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "description": {
                    "type": "string"
                }, 
                "virtualMachineId": {
                    "type": "string"
                }, 
                "createdDateTime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "isCurrentSnapshot": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "parentId": {
                    "type": "string"
                }, 
                "isMemorySnapshot": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "AvailabilityZone": {
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string"
                }, 
                "availabilityZoneState": {
                    "type": "string"
                }, 
                "reservationIds": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "message": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "regionName": {
                    "type": "string"
                }
            }
        }, 
        "RegexpConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "errorMessage": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "MachineProperty": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 256
                }, 
                "virtualMachineId": {
                    "type": "string"
                }, 
                "isRuntime": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "value": {
                    "type": "string"
                }, 
                "isEncrypted": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "isHidden": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "type": "string"
                }
            }
        }, 
        "SupersetOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageAmazonRequestData": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/AmazonRequestData"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "catalogOrganizationReference": {
            "xml": {
                "name": "catalogOrganizationReference"
            }, 
            "type": "object", 
            "properties": {
                "subtenantLabel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tenantLabel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "subtenantRef": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tenantRef": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "GreaterThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SecurityPolicy": {
            "allOf": [
                {
                    "$ref": "#/definitions/securityPolicy"
                }, 
                {
                    "xml": {
                        "name": "securityPolicy"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "ipamRequestStatus": {
            "xml": {
                "name": "ipamRequestStatus"
            }, 
            "type": "object", 
            "properties": {
                "originalCallbackServiceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestPayload": {
                    "$ref": "#/definitions/ipamObject"
                }, 
                "providerEndpointId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestType": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "DEALLOCATE", 
                        "DELETE_IP_RANGES", 
                        "ALLOCATE", 
                        "CREATE_IP_RANGES"
                    ], 
                    "type": "string"
                }, 
                "requestState": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "UNKNOWN", 
                        "COMPLETED", 
                        "IN_PROGRESS", 
                        "FAILED"
                    ], 
                    "type": "string"
                }, 
                "providerCorrelationRequestId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestDetails": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "requestInput": {
                    "$ref": "#/definitions/ipamObject"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "requestCompletion": {
            "xml": {
                "name": "requestCompletion"
            }, 
            "type": "object", 
            "properties": {
                "resourceBindingIds": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "requestCompletionState": {
                    "enum": [
                        "SUCCESSFUL", 
                        "PARTIALLY_SUCCESSFUL", 
                        "FAILED", 
                        "REJECTED"
                    ], 
                    "type": "string"
                }, 
                "completionDetails": {
                    "type": "string"
                }
            }
        }, 
        "PageReclamationSavingsByOwnerViewModel": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/ReclamationSavingsByOwnerViewModel"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "PageAmazonImage": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/AmazonImage"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "PageVirtualHardDisk": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/VirtualHardDisk"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "LiteralMapEntry": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/literal"
                }, 
                "key": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "ResetValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "HostProperty": {
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string"
                }, 
                "encrypted": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "value": {
                    "type": "string"
                }, 
                "hidden": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "runtime": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "type": "string"
                }
            }
        }, 
        "dateTimeLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "dateTimeLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The date.", 
                            "format": "date-time"
                        }
                    }, 
                    "description": "Wraps a Date & Time value. This is a wrapper for the Java {@link Date} class."
                }
            ]
        }, 
        "IncrementBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "AndClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClauses": {
                            "xml": {
                                "name": "clause"
                            }, 
                            "items": {
                                "$ref": "#/definitions/Clause"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "ManagementEndpoint": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "credentialId": {
                    "type": "string", 
                    "format": "uuid"
                }, 
                "interfaceType": {
                    "type": "string"
                }, 
                "address": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "CustomPropertyDefinitionMetadata": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "required": [
                        "field"
                    ], 
                    "type": "object", 
                    "properties": {
                        "field": {
                            "$ref": "#/definitions/Field"
                        }
                    }
                }
            ]
        }, 
        "PageMachineSnapshot": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/MachineSnapshot"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "EqualsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "SecurityGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/securityGroup"
                }, 
                {
                    "xml": {
                        "name": "securityGroup"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "PageSecurityPolicy": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/securityPolicy"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "timeSpan": {
            "xml": {
                "name": "timeSpan"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "amount": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "description": "The amount for the time span.", 
                    "format": "int64"
                }, 
                "unit": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "MILLISECONDS", 
                        "SECONDS", 
                        "MINUTES", 
                        "HOURS", 
                        "DAYS", 
                        "WEEKS", 
                        "MONTHS", 
                        "YEARS"
                    ], 
                    "type": "string", 
                    "description": "The unit of measure for the time span. e.g: days."
                }
            }, 
            "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
        }, 
        "PageNetworkProfile": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/NetworkProfile"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "NullDisplayTextBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "NATNetworkProfile": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkProfile"
                }, 
                {
                    "required": [
                        "externalNetworkProfileId", 
                        "natType", 
                        "subnetMask"
                    ], 
                    "type": "object", 
                    "properties": {
                        "externalNetworkProfileName": {
                            "type": "string"
                        }, 
                        "secondaryWinsAddress": {
                            "type": "string"
                        }, 
                        "externalNetworkProfileId": {
                            "type": "string"
                        }, 
                        "primaryDnsAddress": {
                            "type": "string"
                        }, 
                        "natType": {
                            "enum": [
                                "ONETOONE", 
                                "ONETOMANY"
                            ], 
                            "type": "string"
                        }, 
                        "primaryWinsAddress": {
                            "type": "string"
                        }, 
                        "dhcpConfig": {
                            "$ref": "#/definitions/DhcpConfig"
                        }, 
                        "dnsSearchSuffix": {
                            "type": "string"
                        }, 
                        "secondaryDnsAddress": {
                            "type": "string"
                        }, 
                        "dnsSuffix": {
                            "type": "string"
                        }, 
                        "subnetMask": {
                            "minLength": 1, 
                            "type": "string", 
                            "maxLength": 100
                        }, 
                        "gatewayAddress": {
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "IaaSReservation": {
            "type": "object", 
            "properties": {
                "machinesTotal": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "endpointName": {
                    "type": "string"
                }, 
                "type": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "computeResourceName": {
                    "type": "string"
                }
            }
        }, 
        "NotClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "subClause": {
                            "$ref": "#/definitions/Clause"
                        }
                    }
                }
            ]
        }, 
        "PageReservationPolicy": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/reservationPolicy"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "ConditionalEvaluatorCase": {
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }, 
                "condition": {
                    "$ref": "#/definitions/Clause"
                }
            }
        }, 
        "elementValues": {
            "xml": {
                "name": "elementValues"
            }, 
            "type": "object", 
            "properties": {
                "values": {
                    "xml": {
                        "wrapped": true, 
                        "name": "value"
                    }, 
                    "items": {
                        "$ref": "#/definitions/value"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "CapacityUsageByBlueprintViewModel": {
            "type": "object", 
            "properties": {
                "machineType": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "storageAllocatedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "machinesTotal": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "blueprintName": {
                    "type": "string"
                }, 
                "groupName": {
                    "type": "string"
                }, 
                "href": {
                    "type": "string"
                }, 
                "storageUsedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "machinesAllocated": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memoryAllocatedMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "loadBalancerMonitor": {
            "xml": {
                "name": "loadBalancerMonitor"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "newEntity": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "receive": {
                    "type": "string"
                }, 
                "interval": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "send": {
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "monitorPath": {
                    "type": "string"
                }, 
                "timeout": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "maxRetries": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "method": {
                    "type": "string"
                }
            }
        }, 
        "ReclamationSavingsByOwnerViewModel": {
            "type": "object", 
            "properties": {
                "storageGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "userName": {
                    "type": "string"
                }, 
                "cost": {
                    "type": "number", 
                    "format": "double"
                }, 
                "machinesTotal": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "beginDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "memoryMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "cpus": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "groupName": {
                    "type": "string"
                }, 
                "href": {
                    "type": "string"
                }, 
                "machinesReclaimed": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "machineType": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "machinesReclaimedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "literal": {
            "xml": {
                "name": "literal"
            }, 
            "discriminator": "type", 
            "type": "object", 
            "description": "Wraps a value such that values of different types can be treated generically."
        }, 
        "ResourceInfo": {
            "allOf": [
                {
                    "$ref": "#/definitions/resourceInfo"
                }, 
                {
                    "xml": {
                        "name": "resourceInfo"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "CapacityUsageByOwnerViewModel": {
            "type": "object", 
            "properties": {
                "machineType": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "storageAllocatedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "machinesTotal": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "machineOwner": {
                    "type": "string"
                }, 
                "groupName": {
                    "type": "string"
                }, 
                "href": {
                    "type": "string"
                }, 
                "storageUsedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "machinesAllocated": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memoryAllocatedMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "InstanceType": {
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string"
                }, 
                "sizeName": {
                    "type": "string"
                }, 
                "memory": {
                    "type": "number"
                }, 
                "virtualCores": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "apiName": {
                    "type": "string"
                }, 
                "instanceStorage": {
                    "type": "number"
                }, 
                "ioPerformanceName": {
                    "type": "string"
                }, 
                "computeUnits": {
                    "type": "number"
                }, 
                "id": {
                    "type": "string"
                }
            }
        }, 
        "CertificateInfo": {
            "type": "object", 
            "properties": {
                "notValidAfter": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "notValidBefore": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "principalName": {
                    "type": "string"
                }, 
                "thumbprint": {
                    "type": "string"
                }, 
                "issuerName": {
                    "type": "string"
                }, 
                "identityCertificateExists": {
                    "default": false, 
                    "type": "boolean"
                }
            }
        }, 
        "PageOpenstackSecurityGroup": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/OpenstackSecurityGroup"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "RefreshOnChangeBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MachineDisk": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "deviceId": {
                    "type": "string"
                }, 
                "externalDiskId": {
                    "type": "string"
                }, 
                "capacity": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 128
                }
            }
        }, 
        "DynamicDataResponse": {
            "type": "object", 
            "properties": {
                "values": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "dnsInfo": {
            "xml": {
                "name": "dnsInfo"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "name": {
                    "type": "string"
                }, 
                "preferredWINS": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "secondaryDNS": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "dnsSuffix": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "primaryDNS": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "dnsSearchSuffixes": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "alternateWINS": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "BooleanLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "booleanLiteral"
                    }, 
                    "type": "object", 
                    "description": "Wraps a boolean value."
                }
            ]
        }, 
        "IaasPropertyNameBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "CustomValidationConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageBusinessGroupAllocationsData": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/BusinessGroupAllocationsData"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "ProviderRequestValidation": {
            "type": "object", 
            "properties": {
                "quote": {
                    "$ref": "#/definitions/RequestQuote"
                }, 
                "updatedData": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "Expression": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "operator": {
                            "$ref": "#/definitions/CriteriaOperator"
                        }, 
                        "rightOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }, 
                        "leftOperand": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "ElementValuesPagingInfo": {
            "type": "object", 
            "properties": {
                "count": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "offset": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "PageCapacityUsageByGroupViewModel": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/CapacityUsageByGroupViewModel"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "DynamicValueContext": {
            "required": [
                "parameterMappings"
            ], 
            "type": "object", 
            "properties": {
                "parameterMappings": {
                    "$ref": "#/definitions/ParameterMappingCollection"
                }, 
                "providerEntityId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "PageInstanceType": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/InstanceType"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "WithinOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ipReleaseRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRangeOperation"
                }, 
                {
                    "xml": {
                        "name": "ipReleaseRequest"
                    }, 
                    "type": "object", 
                    "properties": {
                        "address": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "nicIndex": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "rangeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "DefaultValueBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageCustomMachineAction": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/CustomMachineAction"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "WrapperClause": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/Evaluator"
                        }
                    }
                }
            ]
        }, 
        "PageProvisioningWorkflow": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/ProvisioningWorkflow"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "DnsInfo": {
            "allOf": [
                {
                    "$ref": "#/definitions/dnsInfo"
                }, 
                {
                    "xml": {
                        "name": "dnsInfo"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "entityRefEx": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "entityRefEx"
                    }, 
                    "type": "object", 
                    "properties": {
                        "href": {
                            "type": "string", 
                            "description": "the Href"
                        }
                    }, 
                    "description": "Represents a reference to an entity by uri"
                }
            ]
        }, 
        "networkProviderRequest": {
            "xml": {
                "name": "networkProviderRequest"
            }, 
            "type": "object", 
            "properties": {
                "callbackServiceId": {
                    "type": "string"
                }, 
                "blueprintRequestId": {
                    "type": "string"
                }, 
                "operationType": {
                    "enum": [
                        "UNREGISTER", 
                        "DEALLOCATE", 
                        "UPDATE", 
                        "CREATE", 
                        "READ", 
                        "ALLOCATE", 
                        "DELETE"
                    ], 
                    "type": "string"
                }, 
                "rootCafeDeploymentId": {
                    "type": "string"
                }, 
                "resourceId": {
                    "type": "string"
                }, 
                "networkObject": {
                    "$ref": "#/definitions/networkObject"
                }, 
                "originalCallbackServiceId": {
                    "type": "string"
                }, 
                "blueprintName": {
                    "type": "string"
                }, 
                "callbackAdditionalUrlPath": {
                    "type": "string"
                }, 
                "tenantId": {
                    "type": "string"
                }, 
                "componentData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "componentTypeId": {
                    "type": "string"
                }, 
                "rootCafeRequestId": {
                    "type": "string"
                }, 
                "requestId": {
                    "type": "string"
                }, 
                "subtenantId": {
                    "type": "string"
                }, 
                "componentId": {
                    "type": "string"
                }, 
                "blueprintId": {
                    "type": "string"
                }, 
                "previousComponentData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "requestInputData": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "loadBalancerMember": {
            "xml": {
                "name": "loadBalancerMember"
            }, 
            "type": "object", 
            "properties": {
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "address": {
                    "type": "string"
                }
            }
        }, 
        "EntityReferenceDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "IpRangeOperationResult": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipamObject"
                }, 
                {
                    "xml": {
                        "name": "ipamObject"
                    }, 
                    "type": "object", 
                    "properties": {
                        "ipRangeOperations": {
                            "items": {
                                "$ref": "#/definitions/ipRangeOperation"
                            }, 
                            "type": "array"
                        }, 
                        "networkProfileId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "resourceInfo": {
            "xml": {
                "name": "resourceInfo"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "name": {
                    "type": "string"
                }, 
                "machineId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "type": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }
            }
        }, 
        "addressSpace": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipamObject"
                }, 
                {
                    "xml": {
                        "name": "addressSpace"
                    }, 
                    "type": "object", 
                    "properties": {
                        "providerEndpointId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "externalId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "DynamicDataRequest": {
            "type": "object", 
            "properties": {
                "ignoreUnknownFields": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "ids": {
                    "xml": {
                        "name": "id"
                    }, 
                    "items": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "tenantId": {
                    "type": "string"
                }
            }
        }, 
        "MonetaryValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "literal"
                    }, 
                    "type": "object", 
                    "properties": {
                        "currencyCode": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string", 
                            "description": "The ISO 4217 code used to identify the currency (if any) associated with this value."
                        }
                    }, 
                    "description": "Base type for representing monetary values, encapsulating both some kind of quantity and a currency."
                }
            ]
        }, 
        "PrimitiveDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "typeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "OpenstackSecurityGroup": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "reservationIds": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "endpointName": {
                    "type": "string"
                }, 
                "endpointId": {
                    "type": "string"
                }, 
                "securityGroupUniqueId": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "TimeSpan": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "timeSpan"
                    }, 
                    "type": "object", 
                    "description": "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days."
                }
            ]
        }, 
        "ExternalValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "dynamicValueProviderInfo"
                    ], 
                    "type": "object", 
                    "properties": {
                        "dynamicValueProviderInfo": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "ContainsOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "endpointType": {
            "xml": {
                "name": "endpointType"
            }, 
            "type": "object", 
            "properties": {
                "category": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "displayName": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "serviceProviderId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "menuItems": {
                    "items": {
                        "$ref": "#/definitions/endpointMenuItem"
                    }, 
                    "type": "array"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "capabilities": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "categoryDisplayName": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "tenantable": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "schema": {
                    "$ref": "#/definitions/Schema"
                }
            }
        }, 
        "Machine": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "type": "string"
                }, 
                "memoryMB": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "interfaceType": {
                    "enum": [
                        "VSPHERE", 
                        "KVM", 
                        "SCVMM"
                    ], 
                    "type": "string"
                }, 
                "disks": {
                    "items": {
                        "$ref": "#/definitions/MachineDisk"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string"
                }, 
                "guestOsFamily": {
                    "type": "string"
                }, 
                "reservationName": {
                    "type": "string"
                }, 
                "region": {
                    "type": "string"
                }, 
                "hostName": {
                    "type": "string"
                }, 
                "isTemplate": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "cpu": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "parentTemplate": {
                    "type": "string"
                }, 
                "endpointName": {
                    "type": "string"
                }, 
                "externalId": {
                    "type": "string"
                }, 
                "properties": {
                    "items": {
                        "$ref": "#/definitions/MachineProperty"
                    }, 
                    "type": "array"
                }, 
                "storageGB": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "Field": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "dataType": {
                    "$ref": "#/definitions/DataType"
                }, 
                "permissibleValues": {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                "label": {
                    "type": "string"
                }, 
                "state": {
                    "$ref": "#/definitions/ElementState"
                }, 
                "displayAdvice": {
                    "xml": {
                        "attribute": true
                    }, 
                    "enum": [
                        "TEXTBOX", 
                        "HYPERLINK", 
                        "EMAIL", 
                        "TEXTAREA", 
                        "DATE_TIME_PICKER", 
                        "CHECKBOX", 
                        "YES_NO", 
                        "CHECKBOX_GROUP", 
                        "DUAL_LIST", 
                        "RADIO_GROUP", 
                        "DROPDOWN", 
                        "LIST", 
                        "SEARCHER", 
                        "TREE", 
                        "FORM", 
                        "IMAGE", 
                        "SLIDER", 
                        "DATA_TABLE", 
                        "VALUE_PICKER"
                    ], 
                    "type": "string"
                }, 
                "orderIndex": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "isMultiValued": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "columns": {
                    "xml": {
                        "wrapped": true, 
                        "name": "column"
                    }, 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "VirtualServer": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "networkObject"
                    }, 
                    "type": "object", 
                    "properties": {
                        "connectionRate": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "protocol": {
                            "type": "string"
                        }, 
                        "enabled": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "applicationProfileId": {
                            "type": "string"
                        }, 
                        "enableServiceInsertion": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "applicationRulesIds": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "connectionLimit": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "poolId": {
                            "type": "string"
                        }, 
                        "accelerationEnabled": {
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "ipAddress": {
                            "type": "string"
                        }, 
                        "port": {
                            "type": "integer", 
                            "format": "int32"
                        }
                    }
                }
            ]
        }, 
        "PageSecurityTag": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/securityTag"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "UnspecifiedEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "securityTag": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "securityTag"
                    }, 
                    "type": "object", 
                    "properties": {
                        "securityTagTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "LessThanOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "IsDefinedOperator": {
            "allOf": [
                {
                    "$ref": "#/definitions/CriteriaOperator"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageFlavor": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/Flavor"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "Sort": {
            "type": "object"
        }, 
        "PageReclamationSavingsByGroupViewModel": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/ReclamationSavingsByGroupViewModel"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "endpointMenuItem": {
            "xml": {
                "name": "endpointMenuItem"
            }, 
            "type": "object", 
            "properties": {
                "extensionId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "displayName": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "menuId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "location": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "icon": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "reservationPolicy": {
            "xml": {
                "name": "reservationPolicy"
            }, 
            "type": "object", 
            "properties": {
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "reservationPolicyTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "description": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "FieldReference": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "path": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "CapacityUsageByGroupViewModel": {
            "type": "object", 
            "properties": {
                "machineType": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "storageAllocatedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "groupName": {
                    "type": "string"
                }, 
                "href": {
                    "type": "string"
                }, 
                "machinesTotal": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "machinesAllocatedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "storageReservedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "storageAllocatedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memoryReservedMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "storageUsedGBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "memoryAllocatedPercent": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "machinesAllocated": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "memoryAllocatedMBTotal": {
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "PageOpenstackImage": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/OpenstackImage"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "Constraint": {
            "discriminator": "type", 
            "required": [
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/Evaluator"
                }
            }
        }, 
        "MinValueConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ProviderRequestExtension": {
            "type": "object", 
            "properties": {
                "extData": {
                    "$ref": "#/definitions/literalMap"
                }
            }
        }, 
        "ReadOnlyConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "MultipleEvaluator": {
            "allOf": [
                {
                    "$ref": "#/definitions/Evaluator"
                }, 
                {
                    "required": [
                        "items"
                    ], 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/Evaluator"
                            }, 
                            "type": "array"
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "MinCardinalityConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "Schema": {
            "type": "object", 
            "properties": {
                "fields": {
                    "xml": {
                        "name": "field"
                    }, 
                    "uniqueItems": true, 
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                }
            }
        }, 
        "integerLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "integerLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "integer", 
                            "description": "The integer value.", 
                            "format": "int64"
                        }
                    }, 
                    "description": "Wraps a signed 64-bit integer value."
                }
            ]
        }, 
        "RequestQuote": {
            "type": "object", 
            "properties": {
                "totalLeaseCost": {
                    "$ref": "#/definitions/literal"
                }, 
                "leaseRate": {
                    "$ref": "#/definitions/moneyTimeRate"
                }, 
                "leasePeriod": {
                    "$ref": "#/definitions/timeSpan"
                }
            }
        }, 
        "PageSecurityGroup": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/securityGroup"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "PageStaticIPv4RangeSummary": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/StaticIPv4RangeSummary"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "AmazonImage": {
            "type": "object", 
            "properties": {
                "architectureName": {
                    "type": "string"
                }, 
                "ownerAlias": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "amazonImageId": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "isPublic": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "regionName": {
                    "type": "string"
                }, 
                "rootDeviceName": {
                    "type": "string"
                }, 
                "imageState": {
                    "type": "string"
                }, 
                "amazonKernelId": {
                    "type": "string"
                }, 
                "location": {
                    "type": "string"
                }, 
                "rootDeviceType": {
                    "type": "string"
                }, 
                "amazonRamdiskId": {
                    "type": "string"
                }, 
                "platformName": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "imageType": {
                    "type": "string"
                }, 
                "amazonOwnerId": {
                    "type": "string"
                }
            }
        }, 
        "PageCapacityUsageByOwnerViewModel": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/CapacityUsageByOwnerViewModel"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "moneyTimeRate": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "moneyTimeRate"
                    }, 
                    "type": "object", 
                    "properties": {
                        "basis": {
                            "description": "The span of time to calculate the rate of money for.", 
                            "$ref": "#/definitions/timeSpan"
                        }
                    }, 
                    "description": "Represents a rate of money over time."
                }
            ]
        }, 
        "multipleLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "multipleLiteral"
                    }, 
                    "type": "object", 
                    "properties": {
                        "items": {
                            "xml": {
                                "name": "item"
                            }, 
                            "items": {
                                "$ref": "#/definitions/literal"
                            }, 
                            "type": "array", 
                            "description": "The list of specified values. NOTE: All values must be of the same data type."
                        }, 
                        "elementTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "enum": [
                                "STRING", 
                                "INTEGER", 
                                "DECIMAL", 
                                "MONEY", 
                                "MONEY_RANGE", 
                                "MONEY_TIME_RATE", 
                                "BOOLEAN", 
                                "ENTITY_REFERENCE", 
                                "DATE_TIME", 
                                "TIME_SPAN", 
                                "SECURE_STRING", 
                                "COMPLEX"
                            ], 
                            "type": "string", 
                            "description": "The data type of the items in the list."
                        }
                    }, 
                    "description": "A literal which represents multiple values. All of these component values must be of the same data type."
                }
            ]
        }, 
        "alert": {
            "xml": {
                "name": "alert"
            }, 
            "type": "object", 
            "properties": {
                "referenceResourceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "alertPercentLevel": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "StaticIPv4Address": {
            "required": [
                "IPv4Address", 
                "networkProfileId", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "IPv4Address": {
                    "type": "string"
                }, 
                "networkProfileId": {
                    "type": "string"
                }, 
                "stateValue": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "description": {
                    "type": "string"
                }, 
                "virtualMachineId": {
                    "type": "string"
                }, 
                "lastModifiedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "hostName": {
                    "type": "string"
                }, 
                "IPSortValue": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "state": {
                    "enum": [
                        "ALLOCATED", 
                        "UNALLOCATED", 
                        "DESTROYED", 
                        "EXPIRED"
                    ], 
                    "type": "string"
                }, 
                "staticIPv4RangeId": {
                    "type": "string"
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "virtualMachineName": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "networkInterfaceCardOffset": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "PageManagementEndpoint": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/ManagementEndpoint"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "KeyPair": {
            "required": [
                "computeResourceId", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "secretKey": {
                    "type": "string"
                }, 
                "computeResourceId": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "Iso": {
            "type": "object", 
            "properties": {
                "isoUniqueId": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "hypervisorType": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "value": {
            "xml": {
                "name": "value"
            }, 
            "type": "object", 
            "properties": {
                "label": {
                    "type": "string"
                }, 
                "underlyingValue": {
                    "$ref": "#/definitions/literal"
                }
            }
        }, 
        "CriteriaOperator": {
            "discriminator": "type", 
            "type": "object"
        }, 
        "InternalConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "reservation": {
            "xml": {
                "name": "reservation"
            }, 
            "type": "object", 
            "properties": {
                "extensionData": {
                    "$ref": "#/definitions/literalMap"
                }, 
                "name": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "enabled": {
                    "xml": {
                        "attribute": true
                    }, 
                    "default": false, 
                    "type": "boolean"
                }, 
                "lastUpdated": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "priority": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "version": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "integer", 
                    "format": "int64"
                }, 
                "reservationPolicyId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "subTenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "createdDate": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string", 
                    "format": "date-time"
                }, 
                "reservationTypeId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "alertPolicy": {
                    "$ref": "#/definitions/alertPolicy"
                }, 
                "id": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }
            }
        }, 
        "IpRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipRange"
                }, 
                {
                    "xml": {
                        "name": "ipRange"
                    }, 
                    "type": "object"
                }
            ]
        }, 
        "network": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "network"
                    }, 
                    "type": "object", 
                    "properties": {
                        "natRules": {
                            "items": {
                                "$ref": "#/definitions/natRule"
                            }, 
                            "type": "array"
                        }, 
                        "networkProfileType": {
                            "enum": [
                                "NONE", 
                                "PRIVATE", 
                                "NAT", 
                                "ROUTED", 
                                "EXTERNAL"
                            ], 
                            "type": "string"
                        }, 
                        "networkTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "networkBackings": {
                            "items": {
                                "$ref": "#/definitions/networkBacking"
                            }, 
                            "type": "array"
                        }, 
                        "machineIdCollection": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "secureString": {
            "allOf": [
                {
                    "$ref": "#/definitions/literal"
                }, 
                {
                    "xml": {
                        "name": "secureString"
                    }, 
                    "type": "object", 
                    "properties": {
                        "value": {
                            "type": "string", 
                            "description": "The string value."
                        }
                    }, 
                    "description": "Wraps a secured string value, such as a password."
                }
            ]
        }, 
        "VirtualPrivateCloud": {
            "type": "object", 
            "properties": {
                "vpcState": {
                    "type": "string"
                }, 
                "instanceTenancy": {
                    "type": "string"
                }, 
                "cidrBlock": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "amazonVpcId": {
                    "type": "string"
                }
            }
        }, 
        "CustomMachineAction": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "displayName": {
                    "type": "string"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 128
                }, 
                "displayState": {
                    "type": "string"
                }, 
                "id": {
                    "type": "string"
                }, 
                "iconUri": {
                    "type": "string"
                }, 
                "menuOrder": {
                    "type": "string"
                }, 
                "taskName": {
                    "type": "string"
                }, 
                "uriTemplate": {
                    "type": "string"
                }
            }
        }, 
        "endpointCreateRequest": {
            "xml": {
                "name": "endpointCreateRequest"
            }, 
            "type": "object", 
            "properties": {
                "tenantId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "providerServiceId": {
                    "xml": {
                        "attribute": true
                    }, 
                    "type": "string"
                }, 
                "endpoint": {
                    "$ref": "#/definitions/endpoint"
                }, 
                "associatedEndpoints": {
                    "items": {
                        "$ref": "#/definitions/endpoint"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "NetworkProfile": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "definedRanges": {
                    "items": {
                        "$ref": "#/definitions/StaticIPv4Range"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string"
                }, 
                "profileType": {
                    "enum": [
                        "EXTERNAL", 
                        "PRIVATE", 
                        "NAT", 
                        "ROUTED"
                    ], 
                    "type": "string"
                }, 
                "lastModifiedDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "IPAMEndpointId": {
                    "type": "string"
                }, 
                "definedAddresses": {
                    "items": {
                        "$ref": "#/definitions/StaticIPv4Address"
                    }, 
                    "type": "array"
                }, 
                "addressSpaceExternalId": {
                    "type": "string"
                }, 
                "createdDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "reclaimedAddresses": {
                    "items": {
                        "$ref": "#/definitions/StaticIPv4Address"
                    }, 
                    "type": "array"
                }, 
                "IPAMEndpointName": {
                    "type": "string"
                }, 
                "isHidden": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "id": {
                    "type": "string"
                }, 
                "name": {
                    "minLength": 1, 
                    "type": "string", 
                    "maxLength": 100
                }
            }
        }, 
        "DataType": {
            "discriminator": "type", 
            "type": "object", 
            "properties": {
                "typeId": {
                    "enum": [
                        "STRING", 
                        "INTEGER", 
                        "DECIMAL", 
                        "MONEY", 
                        "MONEY_RANGE", 
                        "MONEY_TIME_RATE", 
                        "BOOLEAN", 
                        "ENTITY_REFERENCE", 
                        "DATE_TIME", 
                        "TIME_SPAN", 
                        "SECURE_STRING", 
                        "COMPLEX"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "AmazonSecurityGroup": {
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "reservationIds": {
                    "uniqueItems": true, 
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "vpc": {
                    "$ref": "#/definitions/VirtualPrivateCloud"
                }, 
                "amazonSecurityGroupId": {
                    "type": "string"
                }, 
                "amazonOwnerId": {
                    "type": "string"
                }
            }
        }, 
        "EditableBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "DynamicPermissibleValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PermissibleValueList"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "dependencies": {
                            "xml": {
                                "wrapped": true, 
                                "name": "dependency"
                            }, 
                            "uniqueItems": true, 
                            "type": "array", 
                            "items": {
                                "type": "string"
                            }
                        }, 
                        "context": {
                            "$ref": "#/definitions/DynamicValueContext"
                        }
                    }
                }
            ]
        }, 
        "securityGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/networkObject"
                }, 
                {
                    "xml": {
                        "name": "securityGroup"
                    }, 
                    "type": "object", 
                    "properties": {
                        "securityGroupTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "internal": {
                            "xml": {
                                "attribute": true
                            }, 
                            "default": false, 
                            "type": "boolean"
                        }, 
                        "ipAddressCollection": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }, 
                        "machineIdCollection": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }
            ]
        }, 
        "EncryptedBehavior": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "ResponseEntity": {
            "type": "object", 
            "properties": {
                "body": {
                    "type": "object"
                }, 
                "headers": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object"
                }, 
                "statusCode": {
                    "enum": [
                        "CONTINUE", 
                        "SWITCHING_PROTOCOLS", 
                        "PROCESSING", 
                        "CHECKPOINT", 
                        "OK", 
                        "CREATED", 
                        "ACCEPTED", 
                        "NON_AUTHORITATIVE_INFORMATION", 
                        "NO_CONTENT", 
                        "RESET_CONTENT", 
                        "PARTIAL_CONTENT", 
                        "MULTI_STATUS", 
                        "ALREADY_REPORTED", 
                        "IM_USED", 
                        "MULTIPLE_CHOICES", 
                        "MOVED_PERMANENTLY", 
                        "FOUND", 
                        "MOVED_TEMPORARILY", 
                        "SEE_OTHER", 
                        "NOT_MODIFIED", 
                        "USE_PROXY", 
                        "TEMPORARY_REDIRECT", 
                        "PERMANENT_REDIRECT", 
                        "BAD_REQUEST", 
                        "UNAUTHORIZED", 
                        "PAYMENT_REQUIRED", 
                        "FORBIDDEN", 
                        "NOT_FOUND", 
                        "METHOD_NOT_ALLOWED", 
                        "NOT_ACCEPTABLE", 
                        "PROXY_AUTHENTICATION_REQUIRED", 
                        "REQUEST_TIMEOUT", 
                        "CONFLICT", 
                        "GONE", 
                        "LENGTH_REQUIRED", 
                        "PRECONDITION_FAILED", 
                        "PAYLOAD_TOO_LARGE", 
                        "REQUEST_ENTITY_TOO_LARGE", 
                        "URI_TOO_LONG", 
                        "REQUEST_URI_TOO_LONG", 
                        "UNSUPPORTED_MEDIA_TYPE", 
                        "REQUESTED_RANGE_NOT_SATISFIABLE", 
                        "EXPECTATION_FAILED", 
                        "I_AM_A_TEAPOT", 
                        "INSUFFICIENT_SPACE_ON_RESOURCE", 
                        "METHOD_FAILURE", 
                        "DESTINATION_LOCKED", 
                        "UNPROCESSABLE_ENTITY", 
                        "LOCKED", 
                        "FAILED_DEPENDENCY", 
                        "UPGRADE_REQUIRED", 
                        "PRECONDITION_REQUIRED", 
                        "TOO_MANY_REQUESTS", 
                        "REQUEST_HEADER_FIELDS_TOO_LARGE", 
                        "INTERNAL_SERVER_ERROR", 
                        "NOT_IMPLEMENTED", 
                        "BAD_GATEWAY", 
                        "SERVICE_UNAVAILABLE", 
                        "GATEWAY_TIMEOUT", 
                        "HTTP_VERSION_NOT_SUPPORTED", 
                        "VARIANT_ALSO_NEGOTIATES", 
                        "INSUFFICIENT_STORAGE", 
                        "LOOP_DETECTED", 
                        "BANDWIDTH_LIMIT_EXCEEDED", 
                        "NOT_EXTENDED", 
                        "NETWORK_AUTHENTICATION_REQUIRED"
                    ], 
                    "type": "string"
                }
            }
        }, 
        "OpenstackImage": {
            "type": "object", 
            "properties": {
                "status": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "regionId": {
                    "type": "string"
                }, 
                "minDisk": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "project": {
                    "type": "string"
                }, 
                "isMissing": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "endpointName": {
                    "type": "string"
                }, 
                "endpointId": {
                    "type": "string"
                }, 
                "minRam": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "imageUniqueId": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "regionName": {
                    "type": "string"
                }
            }
        }, 
        "ObjectDataType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataType"
                }, 
                {
                    "type": "object", 
                    "properties": {
                        "classId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentTypeId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "typeFilter": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "componentId": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }, 
                        "label": {
                            "xml": {
                                "attribute": true
                            }, 
                            "type": "string"
                        }
                    }
                }
            ]
        }, 
        "MinLengthConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/Constraint"
                }, 
                {
                    "type": "object"
                }
            ]
        }, 
        "PageIso": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/Iso"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "PageCapacityUsageByComputeResourceViewModel": {
            "type": "object", 
            "properties": {
                "sort": {
                    "$ref": "#/definitions/Sort"
                }, 
                "last": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "number": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "first": {
                    "default": false, 
                    "type": "boolean"
                }, 
                "content": {
                    "items": {
                        "$ref": "#/definitions/CapacityUsageByComputeResourceViewModel"
                    }, 
                    "type": "array"
                }, 
                "totalPages": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "totalElements": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "numberOfElements": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }, 
        "LoadBalancer": {
            "allOf": [
                {
                    "$ref": "#/definitions/loadBalancer"
                }, 
                {
                    "xml": {
                        "name": "loadBalancer"
                    }, 
                    "type": "object"
                }
            ]
        }
    }, 
    "swagger": "2.0"
}